export default {
  "node_modules/as-bignum/assembly/__tests__/as-pect.d.ts": "Ly8vIDxyZWZlcmVuY2UgdHlwZXM9IkBhcy1wZWN0L2Fzc2VtYmx5L3R5cGVzL2FzLXBlY3QiIC8+Cg==",
  "node_modules/as-bignum/assembly/__tests__/i128.spec.ts": "aW1wb3J0IHsgaTEyOCB9IGZyb20gJy4uL2ludGVnZXIvaTEyOCc7CmltcG9ydCB7IGFycmF5VG9VaW50OEFycmF5IH0gZnJvbSAiLi91dGlscyI7CgovLyBkZXNjcmliZSgiU3RyaW5nIENvbnZlcnNpb24iLCAoKSA9PiB7Ci8vICAgLy8gVE9ETzogdGVzdHMKLy8gfSk7CgpkZXNjcmliZSgiQnVmZmVyIENvbnZlcnNpb24iLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gYnl0ZXMgTGl0dGxlIEVuZGlhbiAxIiwgKCkgPT4gewogICAgdmFyIGFycjogdThbXSA9IFsKICAgICAgMHgxMSwgMHgyMiwgMHgzMywgMHg0NCwgMHg1NSwgMHg2NiwgMHg3NywgMHg4OCwKICAgICAgMHg5OSwgMHhBQSwgMHhCQiwgMHhDQywgMHhERCwgMHhFRSwgMHhGRiwgMHgxMgogICAgXTsKICAgIGV4cGVjdChpMTI4LmZyb21CeXRlcyhhcnIpKQogICAgICAudG9TdHJpY3RFcXVhbChuZXcgaTEyOCgweDg4Nzc2NjU1NDQzMzIyMTEsIDB4MTJGRkVFRERDQ0JCQUE5OSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBieXRlcyBMaXR0bGUgRW5kaWFuIDIiLCAoKSA9PiB7CiAgICB2YXIgYXJyID0gYXJyYXlUb1VpbnQ4QXJyYXkoWwogICAgICAweDExLCAweDIyLCAweDMzLCAweDQ0LCAweDU1LCAweDY2LCAweDc3LCAweDAwLAogICAgICAweDAwLCAweDc3LCAweDY2LCAweDU1LCAweDQ0LCAweDMzLCAweDIyLCAweDExCiAgICBdKTsKICAgIGV4cGVjdChpMTI4LmZyb21CeXRlcyhhcnIpKQogICAgICAudG9TdHJpY3RFcXVhbChuZXcgaTEyOCgweDAwNzc2NjU1NDQzMzIyMTEsIDB4MTEyMjMzNDQ1NTY2NzcwMCkpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBieXRlcyBCaWcgRW5kaWFuIDEiLCAoKSA9PiB7CiAgICB2YXIgYXJyOiB1OFtdID0gWwogICAgICAweDExLCAweDIyLCAweDMzLCAweDQ0LCAweDU1LCAweDY2LCAweDc3LCAweDg4LAogICAgICAweDk5LCAweEFBLCAweEJCLCAweENDLCAweERELCAweEVFLCAweEZGLCAweDEyCiAgICBdOwogICAgZXhwZWN0KGkxMjguZnJvbUJ5dGVzKGFyciwgdHJ1ZSkpCiAgICAgIC50b1N0cmljdEVxdWFsKG5ldyBpMTI4KDB4OTlBQUJCQ0NEREVFRkYxMiwgMHgxMTIyMzM0NDU1NjY3Nzg4KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGJ5dGVzIEJpZyBFbmRpYW4gMiIsICgpID0+IHsKICAgIHZhciBhcnIgPSBhcnJheVRvVWludDhBcnJheShbCiAgICAgIDB4MTEsIDB4MjIsIDB4MzMsIDB4NDQsIDB4NTUsIDB4NjYsIDB4NzcsIDB4ODgsCiAgICAgIDB4OTksIDB4QUEsIDB4QkIsIDB4Q0MsIDB4REQsIDB4RUUsIDB4RkYsIDB4MTIKICAgIF0pOwogICAgZXhwZWN0KGkxMjguZnJvbUJ5dGVzKGFyciwgdHJ1ZSkpCiAgICAgIC50b1N0cmljdEVxdWFsKG5ldyBpMTI4KDB4OTlBQUJCQ0NEREVFRkYxMiwgMHgxMTIyMzM0NDU1NjY3Nzg4KSk7CiAgfSk7Cn0pOwoKZGVzY3JpYmUoIkJhc2ljIFR5cGUgQ29udmVyc2lvbiIsICgpID0+IHsKICAvLyBUT0RPOiB0ZXN0cwp9KTsKCmRlc2NyaWJlKCJCYXNpYyBPcGVyYXRpb25zIiwgKCkgPT4gewogIGl0KCJTaG91bGQgbnVtYmVyIGlzIHplcm8gMSIsICgpID0+IHsKICAgIGxldCBhID0gaTEyOC5aZXJvOwogICAgZXhwZWN0KGEuaXNaZXJvKCkpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbnVtYmVyIGlzIHplcm8gMiIsICgpID0+IHsKICAgIGxldCBhID0gaTEyOC5PbmU7CiAgICBleHBlY3QoIWEuaXNaZXJvKCkpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbnVtYmVyIGJpbmFyeSBub3QiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyBpMTI4KDEsIDIpOwogICAgZXhwZWN0KH5hKS50b1N0cmljdEVxdWFsKG5ldyBpMTI4KH4xLCB+MikpOwogIH0pOwoKICBpdCgiU2hvdWxkIG51bWJlciB1bmFyeSBwb3NpdGl2ZSIsICgpID0+IHsKICAgIGxldCBhID0gbmV3IGkxMjgoMSwgMik7CiAgICBleHBlY3QoK2EpLnRvU3RyaWN0RXF1YWwoYSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbnVtYmVyIG5vbiBlbXB0eSIsICgpID0+IHsKICAgIGxldCBhID0gaTEyOC5PbmU7CiAgICBleHBlY3QoISFhKS50b0JlKHRydWUpOwogIH0pOwoKICBpdCgiU2hvdWxkIG51bWJlciBpcyBlbXB0eSAxIiwgKCkgPT4gewogICAgbGV0IGEgPSBpMTI4Llplcm87CiAgICBleHBlY3QoIWEpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbmVnKDEpID09IC0xIiwgKCkgPT4gewogICAgbGV0IG9uZSA9IGkxMjguT25lOwogICAgbGV0IG5lZyA9IG9uZS5uZWcoKTsKICAgIGV4cGVjdCg8dTY0Pm5lZy5sbykudG9CZSg8dTY0Pi0xKTsKICAgIGV4cGVjdCg8dTY0Pm5lZy5oaSkudG9CZSg8dTY0Pi0xKTsKICB9KTsKCiAgaXQoIlNob3VsZCBhYnMoLTEpID09IDEiLCAoKSA9PiB7CiAgICBsZXQgb25lID0gaTEyOC5PbmU7CiAgICBsZXQgbmVnID0gLW9uZTsKICAgIGV4cGVjdChpMTI4LmFicyhuZWcpKS50b1N0cmljdEVxdWFsKG9uZSk7CiAgfSk7Cn0pOwoKLy8gZGVzY3JpYmUoIkV4cG9uZW50aW9uIE9wZXJhdGlvbiIsICgpID0+IHsKLy8gICAvLyBUT0RPOiB0ZXN0cwovLyB9KTsKCi8vIGRlc2NyaWJlKCJCaW5hcnkgT3BlcmF0aW9uIENvdW50IiwgKCkgPT4gewovLyAgIC8vIFRPRE86IHRlc3RzCi8vIH0pOwoKLy8gZGVzY3JpYmUoIkRpdmlzaW9uIEFuZCBNb2QgT3BlcmF0aW9uIiwgKCkgPT4gewovLyAgIC8vIFRPRE86IHRlc3RzCi8vIH0pOwoKLy8gZGVzY3JpYmUoIlRocm93YWJsZSIsICgpID0+IHsKLy8gICAvLyBUT0RPOiB0ZXN0cwovLyB9KTsK",
  "node_modules/as-bignum/assembly/__tests__/safe_u128.spec.ts": "",
  "node_modules/as-bignum/assembly/__tests__/safe_u256.spec.ts": "aW1wb3J0IHsgdTI1NlNhZmUgfSBmcm9tICIuLi9pbnRlZ2VyL3NhZmUvdTI1NiI7CgpkZXNjcmliZSgiQmFzaWMgT3BlcmF0aW9ucyIsICgpID0+IHsKICBkZXNjcmliZSgiQUREIiwgKCkgPT4gewogICAgaXQoIlNob3VsZCBhZGQgWzEsIDAsIDAsIDBdIGFuZCBbbWF4LCAwLCAwLCAwXSIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5PbmU7CiAgICAgIHZhciBiID0gbmV3IHUyNTZTYWZlKHU2NC5NQVhfVkFMVUUsIDAsIDAsIDApOwogICAgICB2YXIgciA9IG5ldyB1MjU2U2FmZSgwLCAxLCAwLCAwKTsKICAgICAgZXhwZWN0KGEgKyBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICAgIGl0KCJTaG91bGQgYWRkIFsxLCAwLCAwLCAwXSBhbmQgW21heCwgbWF4LCAwLCAwXSIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5PbmU7CiAgICAgIHZhciBiID0gbmV3IHUyNTZTYWZlKHU2NC5NQVhfVkFMVUUsIHU2NC5NQVhfVkFMVUUsIDAsIDApOwogICAgICB2YXIgciA9IG5ldyB1MjU2U2FmZSgwLCAwLCAxLCAwKTsKICAgICAgZXhwZWN0KGEgKyBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICAgIGl0KCJTaG91bGQgYWRkIFsxLCAwLCAwLCAwXSBhbmQgW21heCwgbWF4LCBtYXgsIDBdIiwgKCkgPT4gewogICAgICB2YXIgYSA9IHUyNTZTYWZlLk9uZTsKICAgICAgdmFyIGIgPSBuZXcgdTI1NlNhZmUodTY0Lk1BWF9WQUxVRSwgdTY0Lk1BWF9WQUxVRSwgdTY0Lk1BWF9WQUxVRSwgMCk7CiAgICAgIHZhciByID0gbmV3IHUyNTZTYWZlKDAsIDAsIDAsIDEpOwogICAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICAgIGV4cGVjdChiICsgYSkudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCBhZGQgWzEsIDEsIDEsIDFdIGFuZCBbbWF4IC0gMSwgbWF4IC0gMSwgbWF4IC0gMSwgbWF4IC0gMV0iLCAoKSA9PiB7CiAgICAgIGNvbnN0IG9uZTogdTY0ID0gMTsKICAgICAgY29uc3QgcHJlID0gdTY0Lk1BWF9WQUxVRSAtIDE7CiAgICAgIHZhciBhID0gbmV3IHUyNTZTYWZlKG9uZSwgb25lLCBvbmUsIG9uZSk7CiAgICAgIHZhciBiID0gbmV3IHUyNTZTYWZlKHByZSwgcHJlLCBwcmUsIHByZSk7CiAgICAgIHZhciByID0gdTI1NlNhZmUuTWF4OwogICAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICAgIGV4cGVjdChiICsgYSkudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCB0ZXN0IGNhcnJ5IGFuZCBsbzIgZXF1YWxpdHkiLCAoKSA9PiB7CiAgICAgIHZhciBhID0gbmV3IHUyNTZTYWZlKHU2NC5NQVhfVkFMVUUsIDEsIDAsIDApOwogICAgICB2YXIgYiA9IG5ldyB1MjU2U2FmZSgxLCAwLCAwLCAwKTsKICAgICAgdmFyIHIgPSBuZXcgdTI1NlNhZmUoMCwgMiwgMCwgMCk7CiAgICAgIGV4cGVjdChhICsgYikudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCBhZGQgdHdvIG51bWJlcnMgMSIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5mcm9tKDIzNDg5KTsKICAgICAgdmFyIGIgPSB1MjU2U2FmZS5mcm9tKDEyMzQpOwogICAgICB2YXIgciA9IHUyNTZTYWZlLmZyb20oMjQ3MjMpOwogICAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICAgIGV4cGVjdChiICsgYSkudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCBhZGQgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5mcm9tKDQzNTQ1NDUzNDUyNDUyNDUyKTsKICAgICAgdmFyIGIgPSB1MjU2U2FmZS5mcm9tKDEpOwogICAgICB2YXIgciA9IHUyNTZTYWZlLmZyb20oNDM1NDU0NTM0NTI0NTI0NTMpOwogICAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICAgIGV4cGVjdChiICsgYSkudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCBhZGQgdHdvIG51bWJlcnMgMyIsICgpID0+IHsKICAgICAgdmFyIGEgPSBuZXcgdTI1NlNhZmUoNjA2NDY0ODE4MzA3Mzc4ODAwMSwgMTg0MTI1OTE3MDUyNzYyNTgyMjYsIDE4NDQ2NzQ0MDczNzA5NTUxNjE1LCA5MjIzMzcyMDM2ODU0Nzc1ODA3KTsKICAgICAgdmFyIGIgPSBuZXcgdTI1NlNhZmUoMzA2MTY1MTEyNzczMzU0MzkzNCwgNDI0NDIwOTYwNTY4MTMwOTQpOwogICAgICB2YXIgciA9IG5ldyB1MjU2U2FmZSg5MTI2Mjk5MzEwODA3MzMxOTM1LCA4Mjg5NzI3NjIzNTE5NzA0LCAwLCA5MjIzMzcyMDM2ODU0Nzc1ODA4KTsKICAgICAgZXhwZWN0KGEgKyBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICB9KTsKICBkZXNjcmliZSgiU1VCIiwgKCkgPT4gewogICAgaXQoIlNob3VsZCBzdWIgb25lIG1pbnVzIG9uZSIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5PbmU7CiAgICAgIHZhciBiID0gYTsKICAgICAgdmFyIHIgPSB1MjU2U2FmZS5aZXJvOwogICAgICBleHBlY3QoYSAtIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICAgIGl0KCJTaG91bGQgc3ViIFsyLCAyLCAyLCAyXSBhbmQgWzEsIDEsIDEsIDFdIiwgKCkgPT4gewogICAgICB2YXIgYSA9IG5ldyB1MjU2U2FmZSgyLCAyLCAyLCAyKTsKICAgICAgdmFyIGIgPSBuZXcgdTI1NlNhZmUoMSwgMSwgMSwgMSk7CiAgICAgIHZhciByID0gYjsKICAgICAgZXhwZWN0KGEgLSBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgfSk7CiAgICBpdCgiU2hvdWxkIHN1YiBbbWF4LCBtYXgsIG1heCwgbWF4XSBhbmQgWzEsIDIsIDMsIDRdIiwgKCkgPT4gewogICAgICBjb25zdCBtYXggPSB1NjQuTUFYX1ZBTFVFOwogICAgICB2YXIgYSA9IHUyNTZTYWZlLk1heDsKICAgICAgdmFyIGIgPSBuZXcgdTI1NlNhZmUoMSwgMiwgMywgNCk7CiAgICAgIHZhciByID0gbmV3IHUyNTZTYWZlKG1heCAtIDEsIG1heCAtIDIsIG1heCAtIDMsIG1heCAtIDQpOwogICAgICBleHBlY3QoYSAtIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICAgIGl0KCJTaG91bGQgc3ViIFttYXgsIG1heCwgbWF4LCBtYXhdIGFuZCBbMSwgMCwgMCwgMF0iLCAoKSA9PiB7CiAgICAgIGNvbnN0IG1heCA9IHU2NC5NQVhfVkFMVUU7CiAgICAgIHZhciBhID0gdTI1NlNhZmUuTWF4OwogICAgICB2YXIgYiA9IHUyNTZTYWZlLk9uZTsKICAgICAgdmFyIHIgPSBuZXcgdTI1NlNhZmUobWF4IC0gMSwgbWF4LCBtYXgsIG1heCk7CiAgICAgIGV4cGVjdChhIC0gYikudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogICAgaXQoIlNob3VsZCBzdWIgdHdvIG51bWJlcnMgMSIsICgpID0+IHsKICAgICAgdmFyIGEgPSB1MjU2U2FmZS5mcm9tKDIzNDg5KTsKICAgICAgdmFyIGIgPSB1MjU2U2FmZS5mcm9tKDEyMzQpOwogICAgICB2YXIgciA9IHUyNTZTYWZlLmZyb20oMjIyNTUpOwogICAgICBleHBlY3QoYSAtIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICB9KTsKICAgIGl0KCJTaG91bGQgc3ViIHR3byBudW1iZXJzIDIiLCAoKSA9PiB7CiAgICAgIHZhciBhID0gdTI1NlNhZmUuZnJvbSg0MzU0NTQ1MzQ1MjQ1MjQ1Myk7CiAgICAgIHZhciBiID0gdTI1NlNhZmUuZnJvbSgxKTsKICAgICAgdmFyIHIgPSB1MjU2U2FmZS5mcm9tKDQzNTQ1NDUzNDUyNDUyNDUyKTsKICAgICAgZXhwZWN0KGEgLSBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgfSk7CiAgICBpdCgiU2hvdWxkIHN1YiB0d28gbnVtYmVycyAzIiwgKCkgPT4gewogICAgICB2YXIgYSA9IG5ldyB1MjU2U2FmZSg2MDY0NjQ4MTgzMDczNzg4MDAxLCAxODQxMjU5MTcwNTI3NjI1ODIyNiwgMTg0NDY3NDQwNzM3MDk1NTE2MTUsIDkyMjMzNzIwMzY4NTQ3NzU4MDcpOwogICAgICB2YXIgYiA9IG5ldyB1MjU2U2FmZSgzMDYxNjUxMTI3NzMzNTQzOTM0LCA0MjQ0MjA5NjA1NjgxMzA5NCk7CiAgICAgIHZhciByID0gbmV3IHUyNTZTYWZlKDMwMDI5OTcwNTUzNDAyNDQwNjcsIDE4MzcwMTQ5NjA5MjE5NDQ1MTMyLCAxODQ0Njc0NDA3MzcwOTU1MTYxNSwgOTIyMzM3MjAzNjg1NDc3NTgwNyk7CiAgICAgIGV4cGVjdChhIC0gYikudG9TdHJpY3RFcXVhbChyKTsKICAgIH0pOwogIH0pOwp9KTsKCmRlc2NyaWJlKCJPdmVyZmxvdyBVbmRlcmZsb3cgVGhyb3dhYmxlIiwgKCkgPT4gewogIGRlc2NyaWJlKCJBREQiLCAoKSA9PiB7CiAgICBpdCgiU2hvdWxkIHRocm93IHdoZW4gYWRkIHR3byBudW1iZXJzIDEiLCAoKSA9PiB7CiAgICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgICAgdmFyIGEgPSB1MjU2U2FmZS5PbmU7CiAgICAgICAgdmFyIGIgPSB1MjU2U2FmZS5NYXg7CiAgICAgICAgIShhICsgYik7CiAgICAgIH0pLnRvVGhyb3coKTsKICAgIH0pOwoKICAgIGl0KCJTaG91bGQgdGhyb3cgd2hlbiBhZGQgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgICAgZXhwZWN0KCgpID0+IHsKICAgICAgICB2YXIgYSA9IHUyNTZTYWZlLk1heDsKICAgICAgICB2YXIgYiA9IHUyNTZTYWZlLk9uZTsKICAgICAgICAhKGEgKyBiKTsKICAgICAgfSkudG9UaHJvdygpOwogICAgfSk7CgogICAgaXQoIlNob3VsZCB0aHJvdyB3aGVuIGFkZCB0d28gbnVtYmVycyAzIiwgKCkgPT4gewogICAgICBleHBlY3QoKCkgPT4gewogICAgICAgIHZhciBhID0gdTI1NlNhZmUuZnJvbSgtMik7CiAgICAgICAgdmFyIGIgPSBuZXcgdTI1NlNhZmUoMik7CiAgICAgICAgIShhICsgYik7CiAgICAgIH0pLnRvVGhyb3coKTsKICAgIH0pOwogIH0pOwogIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCiAgLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNVQiBPVkVSRkxPVyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8KICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwogIGRlc2NyaWJlKCJTVUIiLCAoKSA9PiB7CiAgICBpdCgiU2hvdWxkIHRocm93IHdoZW4gc3VidHJhY3QgdHdvIG51bWJlcnMgMSIsICgpID0+IHsKICAgICAgZXhwZWN0KCgpID0+IHsKICAgICAgICB2YXIgYSA9IHUyNTZTYWZlLlplcm87CiAgICAgICAgdmFyIGIgPSB1MjU2U2FmZS5NYXg7CiAgICAgICAgIShhIC0gYik7CiAgICAgIH0pLnRvVGhyb3coKTsKICAgIH0pOwoKICAgIGl0KCJTaG91bGQgdGhyb3cgd2hlbiBzdWJ0cmFjdCB0d28gbnVtYmVycyAyIiwgKCkgPT4gewogICAgICBleHBlY3QoKCkgPT4gewogICAgICAgIHZhciBhID0gdTI1NlNhZmUuZnJvbSgtMik7CiAgICAgICAgdmFyIGIgPSB1MjU2U2FmZS5NYXg7CiAgICAgICAgIShhIC0gYik7CiAgICAgIH0pLnRvVGhyb3coKTsKICAgIH0pOwoKICAgIGl0KCJTaG91bGQgdGhyb3cgd2hlbiBzdWJ0cmFjdCB0d28gbnVtYmVycyAzIiwgKCkgPT4gewogICAgICBleHBlY3QoKCkgPT4gewogICAgICAgIHZhciBhID0gdTI1NlNhZmUuWmVybzsKICAgICAgICB2YXIgYiA9IHUyNTZTYWZlLk9uZTsKICAgICAgICAhKGEgLSBiKTsKICAgICAgfSkudG9UaHJvdygpOwogICAgfSk7CiAgfSk7Cn0pOwo=",
  "node_modules/as-bignum/assembly/__tests__/u128.spec.ts": "aW1wb3J0IHsgdTEyOCB9IGZyb20gJy4uL2ludGVnZXIvdTEyOCc7CmltcG9ydCB7IGFycmF5VG9VaW50OEFycmF5IH0gZnJvbSAiLi91dGlscyI7CgpkZXNjcmliZSgiU3RyaW5nIENvbnZlcnNpb24iLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIGRlY2ltYWwgc3RyaW5nIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMjQ4NTE2NjU0OTY1OTcxOTI4LCA1KTsKICAgIGV4cGVjdCgnMTAyNDgyMjM3MDIzNTEzNzMwMDA4JykudG9TdHJpY3RFcXVhbChhLnRvU3RyaW5nKCkpOwogICAgZXhwZWN0KCc1OGUzYTBiOTk0NWViZGJkOCcpLnRvU3RyaWN0RXF1YWwoYS50b1N0cmluZygxNikpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZGVjaW1hbCBzdHJpbmcgMiIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5NYXg7CiAgICBleHBlY3QoJzM0MDI4MjM2NjkyMDkzODQ2MzQ2MzM3NDYwNzQzMTc2ODIxMTQ1NScpLnRvU3RyaWN0RXF1YWwoYS50b1N0cmluZygpKTsKICAgIGV4cGVjdCgnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYnKS50b1N0cmljdEVxdWFsKGEudG9TdHJpbmcoMTYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIGRlY2ltYWwgc3RyaW5nIDMiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguWmVybzsKICAgIGV4cGVjdCgnMCcpLnRvU3RyaWN0RXF1YWwoYS50b1N0cmluZygpKTsKICAgIGV4cGVjdCgnMCcpLnRvU3RyaWN0RXF1YWwoYS50b1N0cmluZygxNikpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZGVjaW1hbCBzdHJpbmcgNCIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5mcm9tKDkwKTsKICAgIGV4cGVjdCgnOTAnKS50b1N0cmljdEVxdWFsKGEudG9TdHJpbmcoKSk7CiAgICBleHBlY3QoJzVhJykudG9TdHJpY3RFcXVhbChhLnRvU3RyaW5nKDE2KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkZWNpbWFsIHN0cmluZyA1IiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCh1NjQuTUFYX1ZBTFVFKTsKICAgIGV4cGVjdCgnMTg0NDY3NDQwNzM3MDk1NTE2MTUnKS50b1N0cmljdEVxdWFsKGEudG9TdHJpbmcoKSk7CiAgICBleHBlY3QoJ2ZmZmZmZmZmZmZmZmZmZmYnKS50b1N0cmljdEVxdWFsKGEudG9TdHJpbmcoMTYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIGRlY2ltYWwgc3RyaW5nIDYiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KHU2NC5NQVhfVkFMVUUgLSAxLCB1NjQuTUFYX1ZBTFVFIC0gMSk7CiAgICBleHBlY3QoJzM0MDI4MjM2NjkyMDkzODQ2MzQ0NDkyNzg2MzM1ODA1ODY1OTgzOCcpLnRvU3RyaWN0RXF1YWwoYS50b1N0cmluZygpKTsKICAgIGV4cGVjdCgnZmZmZmZmZmZmZmZmZmZmZWZmZmZmZmZmZmZmZmZmZmUnKS50b1N0cmljdEVxdWFsKGEudG9TdHJpbmcoMTYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gZGVjaW1hbCBzdHJpbmcgMSIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJycpKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgc3RyaW5nIDIiLCAoKSA9PiB7CiAgICBleHBlY3QodTEyOC5mcm9tKCcwJykpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gZGVjaW1hbCBzdHJpbmcgMyIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJzEyMzQ1Njc4OScpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDEyMzQ1Njc4OSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHN0cmluZyA0IiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnMzQwMjgyMzY2OTIwOTM4NDYzNDYzMzc0NjA3NDMxNzY4MjExNDU1JykpLnRvU3RyaWN0RXF1YWwodTEyOC5NYXgpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHN0cmluZyA1IiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnLTEyMzQ1Njc4OScpKS50b1N0cmljdEVxdWFsKHUxMjguZnJvbSgtMTIzNDU2Nzg5KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgc3RyaW5nIDYiLCAoKSA9PiB7CiAgICBleHBlY3QodTEyOC5mcm9tKCcrMTIzNDU2Nzg5JykpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMTIzNDU2Nzg5KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgc3RyaW5nIDciLCAoKSA9PiB7CiAgICBleHBlY3QodTEyOC5mcm9tU3RyaW5nKCcxMjM0NTY3ODknLCAxMCkpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMTIzNDU2Nzg5KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgc3RyaW5nIHdpdGggbGVhZGluZyB6ZXJvcyIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJzAxJykpLnRvU3RyaWN0RXF1YWwodTEyOC5PbmUpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHN0cmluZyB3aXRoIGxlYWRpbmcgemVyb3MgYW5kIHBsdXMiLCAoKSA9PiB7CiAgICBleHBlY3QodTEyOC5mcm9tKCcrMDAwMScpKS50b1N0cmljdEVxdWFsKHUxMjguT25lKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gZGVjaW1hbCB3aXRoIGludmFsaWQgY2hhcnMgc3RyaW5nIDEiLCAoKSA9PiB7CiAgICBleHBlY3QodTEyOC5mcm9tKCcwMDAwMDEyM2FiYycpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDEyMykpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHdpdGggaW52YWxpZCBjaGFycyBzdHJpbmcgMiIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJ3gwMDAwMDEyM2FiYycpKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgd2l0aCBpbnZhbGlkIGNoYXJzIHN0cmluZyAzIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnLXgnKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHdpdGggaW52YWxpZCBjaGFycyBzdHJpbmcgNCIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJy0tMDEyMzQnKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHdpdGggaW52YWxpZCBjaGFycyBzdHJpbmcgNSIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJzEyM1x1MzAxMicpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDEyMykpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHdpdGggaW52YWxpZCBjaGFycyBzdHJpbmcgNiIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oU3RyaW5nLmZyb21Db2RlUG9pbnQoMHgxMDAwMCkpKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGRlY2ltYWwgd2l0aCBpbnZhbGlkIGNoYXJzIHN0cmluZyA3IiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnezAxMjMnKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBkZWNpbWFsIHdpdGggaW52YWxpZCBjaGFycyBzdHJpbmcgOCIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb20oJy8wMTIzJykpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gaGV4IHN0cmluZyIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmZyb21TdHJpbmcoJzEyMzQ1NmFiY2RlZicsIDE2KSkKICAgICAgLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMHgxMjM0NTZBQkNERUYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gbWl4ZWQgY2FzZSBoZXggc3RyaW5nIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnMHhhYmNkZWZBQkNERUYnKSkKICAgICAgLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMHhBQkNERUZBQkNERUYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gb2N0YWwgc3RyaW5nIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnMG8wMTIzNDU2NycpKQogICAgICAudG9TdHJpY3RFcXVhbCh1MTI4LmZyb20oMG8wMTIzNDU2NykpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBiaW5hcnkgc3RyaW5nIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguZnJvbSgnMGIxMDEwMTAxMDEwMTAxMDEwMTAxMCcpKQogICAgICAudG9TdHJpY3RFcXVhbCh1MTI4LmZyb20oMGIxMDEwMTAxMDEwMTAxMDEwMTAxMCkpOwogIH0pOwp9KTsKCmRlc2NyaWJlKCJCdWZmZXIgQ29udmVyc2lvbiIsICgpID0+IHsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gYnl0ZXMgTGl0dGxlIEVuZGlhbiAxIiwgKCkgPT4gewogICAgdmFyIGFycjogdThbXSA9IFsKICAgICAgMHgxMSwgMHgyMiwgMHgzMywgMHg0NCwgMHg1NSwgMHg2NiwgMHg3NywgMHg4OCwKICAgICAgMHg5OSwgMHhBQSwgMHhCQiwgMHhDQywgMHhERCwgMHhFRSwgMHhGRiwgMHgxMgogICAgXTsKICAgIGV4cGVjdCh1MTI4LmZyb21CeXRlcyhhcnIpKQogICAgICAudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweDg4Nzc2NjU1NDQzMzIyMTEsIDB4MTJGRkVFRERDQ0JCQUE5OSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBieXRlcyBMaXR0bGUgRW5kaWFuIDIiLCAoKSA9PiB7CiAgICB2YXIgYXJyID0gYXJyYXlUb1VpbnQ4QXJyYXkoWwogICAgICAweDExLCAweDIyLCAweDMzLCAweDQ0LCAweDU1LCAweDY2LCAweDc3LCAweDg4LAogICAgICAweDk5LCAweEFBLCAweEJCLCAweENDLCAweERELCAweEVFLCAweEZGLCAweDEyCiAgICBdKTsKICAgIGV4cGVjdCh1MTI4LmZyb21CeXRlcyhhcnIpKQogICAgICAudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweDg4Nzc2NjU1NDQzMzIyMTEsIDB4MTJGRkVFRERDQ0JCQUE5OSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgZnJvbSBieXRlcyBCaWcgRW5kaWFuIDEiLCAoKSA9PiB7CiAgICB2YXIgYXJyOiB1OFtdID0gWwogICAgICAweDExLCAweDIyLCAweDMzLCAweDQ0LCAweDU1LCAweDY2LCAweDc3LCAweDg4LAogICAgICAweDk5LCAweEFBLCAweEJCLCAweENDLCAweERELCAweEVFLCAweEZGLCAweDEyCiAgICBdOwogICAgZXhwZWN0KHUxMjguZnJvbUJ5dGVzKGFyciwgdHJ1ZSkpCiAgICAgIC50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDB4OTlBQUJCQ0NEREVFRkYxMiwgMHgxMTIyMzM0NDU1NjY3Nzg4KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCBmcm9tIGJ5dGVzIEJpZyBFbmRpYW4gMiIsICgpID0+IHsKICAgIHZhciBhcnIgPSBhcnJheVRvVWludDhBcnJheShbCiAgICAgIDB4MTEsIDB4MjIsIDB4MzMsIDB4NDQsIDB4NTUsIDB4NjYsIDB4NzcsIDB4ODgsCiAgICAgIDB4OTksIDB4QUEsIDB4QkIsIDB4Q0MsIDB4REQsIDB4RUUsIDB4RkYsIDB4MTIKICAgIF0pOwogICAgZXhwZWN0KHUxMjguZnJvbUJ5dGVzKGFyciwgdHJ1ZSkpCiAgICAgIC50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDB4OTlBQUJCQ0NEREVFRkYxMiwgMHgxMTIyMzM0NDU1NjY3Nzg4KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBieXRlcyBMaXR0ZSBFbmRpYW4gMSIsICgpID0+IHsKICAgIC8vIHZhciBhOiB1OFtdID0gKG5ldyB1MTI4KDB4ODg3NzY2NTU0NDMzMjIxMSwgMHgxMmZmZWVkZGNjYmJhYTk5KSkudG9CeXRlcygpOwogICAgdmFyIHUgPSBuZXcgdTEyOCgweDg4Nzc2NjU1NDQzMzIyMTEsIDB4MTJGRkVFRERDQ0JCQUE5OSk7CiAgICBsZXQgYSA9IHUudG9CeXRlcygpOwogICAgZXhwZWN0KAogICAgICBhWzBdICA9PSAweDExICYmIGFbMV0gID09IDB4MjIgJiYgYVsyXSAgPT0gMHgzMyAmJiBhWzNdICA9PSAweDQ0ICYmCiAgICAgIGFbNF0gID09IDB4NTUgJiYgYVs1XSAgPT0gMHg2NiAmJiBhWzZdICA9PSAweDc3ICYmIGFbN10gID09IDB4ODggJiYKICAgICAgYVs4XSAgPT0gMHg5OSAmJiBhWzldICA9PSAweEFBICYmIGFbMTBdID09IDB4QkIgJiYgYVsxMV0gPT0gMHhDQyAmJgogICAgICBhWzEyXSA9PSAweEREICYmIGFbMTNdID09IDB4RUUgJiYgYVsxNF0gPT0gMHhGRiAmJiBhWzE1XSA9PSAweDEyCiAgICApLnRvQmUodHJ1ZSk7CgogICAgewogICAgICBsZXQgYSA9IHUudG9TdGF0aWNCeXRlcygpOwogICAgICBleHBlY3QoCiAgICAgICAgYVswXSAgPT0gMHgxMSAmJiBhWzFdICA9PSAweDIyICYmIGFbMl0gID09IDB4MzMgJiYgYVszXSAgPT0gMHg0NCAmJgogICAgICAgIGFbNF0gID09IDB4NTUgJiYgYVs1XSAgPT0gMHg2NiAmJiBhWzZdICA9PSAweDc3ICYmIGFbN10gID09IDB4ODggJiYKICAgICAgICBhWzhdICA9PSAweDk5ICYmIGFbOV0gID09IDB4QUEgJiYgYVsxMF0gPT0gMHhCQiAmJiBhWzExXSA9PSAweENDICYmCiAgICAgICAgYVsxMl0gPT0gMHhERCAmJiBhWzEzXSA9PSAweEVFICYmIGFbMTRdID09IDB4RkYgJiYgYVsxNV0gPT0gMHgxMgogICAgICApLnRvQmUodHJ1ZSk7CiAgICB9CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBieXRlcyBMaXR0ZSBFbmRpYW4gMiIsICgpID0+IHsKICAgIC8vIHZhciBhOiB1OFtdID0gKG5ldyB1MTI4KDB4ODg3NzY2NTU0NDMzMjIxMSwgMHgxMmZmZWVkZGNjYmJhYTk5KSkudG9CeXRlcygpOwogICAgdmFyIHUgPSBuZXcgdTEyOCgweDg4Nzc2NjU1NDQzMzIyMTEsIDB4MTJGRkVFRERDQ0JCQUE5OSk7CiAgICB2YXIgYSA9IHUudG9VaW50OEFycmF5KCk7CiAgICBleHBlY3QoCiAgICAgIGFbMF0gID09IDB4MTEgJiYgYVsxXSAgPT0gMHgyMiAmJiBhWzJdICA9PSAweDMzICYmIGFbM10gID09IDB4NDQgJiYKICAgICAgYVs0XSAgPT0gMHg1NSAmJiBhWzVdICA9PSAweDY2ICYmIGFbNl0gID09IDB4NzcgJiYgYVs3XSAgPT0gMHg4OCAmJgogICAgICBhWzhdICA9PSAweDk5ICYmIGFbOV0gID09IDB4QUEgJiYgYVsxMF0gPT0gMHhCQiAmJiBhWzExXSA9PSAweENDICYmCiAgICAgIGFbMTJdID09IDB4REQgJiYgYVsxM10gPT0gMHhFRSAmJiBhWzE0XSA9PSAweEZGICYmIGFbMTVdID09IDB4MTIKICAgICkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIGJ5dGVzIEJpZyBFbmRpYW4gMSIsICgpID0+IHsKICAgIHZhciB1ID0gbmV3IHUxMjgoMHg5OUFBQkJDQ0RERUVGRjEyLCAweDExMjIzMzQ0NTU2Njc3ODgpOwogICAgdmFyIGEgPSB1LnRvQnl0ZXModHJ1ZSk7CiAgICBleHBlY3QoCiAgICAgIGFbMF0gID09IDB4MTEgJiYgYVsxXSAgPT0gMHgyMiAmJiBhWzJdICA9PSAweDMzICYmIGFbM10gID09IDB4NDQgJiYKICAgICAgYVs0XSAgPT0gMHg1NSAmJiBhWzVdICA9PSAweDY2ICYmIGFbNl0gID09IDB4NzcgJiYgYVs3XSAgPT0gMHg4OCAmJgogICAgICBhWzhdICA9PSAweDk5ICYmIGFbOV0gID09IDB4QUEgJiYgYVsxMF0gPT0gMHhCQiAmJiBhWzExXSA9PSAweENDICYmCiAgICAgIGFbMTJdID09IDB4REQgJiYgYVsxM10gPT0gMHhFRSAmJiBhWzE0XSA9PSAweEZGICYmIGFbMTVdID09IDB4MTIKICAgICkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIGJ5dGVzIEJpZyBFbmRpYW4gMiIsICgpID0+IHsKICAgIHZhciB1ID0gbmV3IHUxMjgoMHg5OUFBQkJDQ0RERUVGRjEyLCAweDExMjIzMzQ0NTU2Njc3ODgpOwogICAgdmFyIGEgPSB1LnRvVWludDhBcnJheSh0cnVlKTsKICAgIGV4cGVjdCgKICAgICAgYVswXSAgPT0gMHgxMSAmJiBhWzFdICA9PSAweDIyICYmIGFbMl0gID09IDB4MzMgJiYgYVszXSAgPT0gMHg0NCAmJgogICAgICBhWzRdICA9PSAweDU1ICYmIGFbNV0gID09IDB4NjYgJiYgYVs2XSAgPT0gMHg3NyAmJiBhWzddICA9PSAweDg4ICYmCiAgICAgIGFbOF0gID09IDB4OTkgJiYgYVs5XSAgPT0gMHhBQSAmJiBhWzEwXSA9PSAweEJCICYmIGFbMTFdID09IDB4Q0MgJiYKICAgICAgYVsxMl0gPT0gMHhERCAmJiBhWzEzXSA9PSAweEVFICYmIGFbMTRdID09IDB4RkYgJiYgYVsxNV0gPT0gMHgxMgogICAgKS50b0JlKHRydWUpOwogIH0pOwp9KTsKCmRlc2NyaWJlKCJCYXNpYyBUeXBlIENvbnZlcnNpb24iLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gaW50ZWdlciAxIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4LmZyb20oLTEpOwogICAgZXhwZWN0KGEubG8pLnRvQmUodTY0Lk1BWF9WQUxVRSk7CiAgICBleHBlY3QoYS5oaSkudG9CZSh1NjQuTUFYX1ZBTFVFKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IGZyb20gaW50ZWdlciAyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4LmZyb21JMzIoLTEpOwogICAgZXhwZWN0KGEubG8pLnRvQmUodTY0Lk1BWF9WQUxVRSk7CiAgICBleHBlY3QoYS5oaSkudG9CZSh1NjQuTUFYX1ZBTFVFKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIHVpbnNpZ25lZCBsb25nIGludCAxIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk1heDsKICAgIGV4cGVjdChhLmFzPHU2ND4oKSkudG9CZSh1NjQuTUFYX1ZBTFVFKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IHRvIHNpZ25lZCBsb25nIGludCAxIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4LmZyb20oLTEyMzQ1Njc4OSk7CiAgICBleHBlY3QoYS5hczxpNjQ+KCkpLnRvQmUoLTEyMzQ1Njc4OSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBzaWduZWQgbG9uZyBpbnQgMiIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5NYXg7CiAgICBleHBlY3QoYS5hczxpNjQ+KCkpLnRvQmUoPGk2ND4tMSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byB1bnNpZ25lZCBieXRlIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk1heDsKICAgIGV4cGVjdChhLmFzPHU4PigpKS50b0JlKDB4RkYpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZG91YmxlIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguWmVybzsKICAgIGV4cGVjdChhLmFzPGY2ND4oKSkudG9CZSgwLjApOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZG91YmxlIDIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguT25lOwogICAgZXhwZWN0KGEuYXM8ZjY0PigpKS50b0JlKDEuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgMyIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMzMzMzMpOwogICAgZXhwZWN0KGEuYXM8ZjY0PigpKS50b0JlKDMzMzMzLjApOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZG91YmxlIG1heCBzYWZlIGxvbmcgaW50ZWdlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoOTAwNzE5OTI1NDc0MDk5MSk7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoOTAwNzE5OTI1NDc0MDk5MS4wKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb252ZXJ0IG1heGltdW0gdG8gZG91YmxlIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk1heDsKICAgIGV4cGVjdChhLmFzPGY2ND4oKSkudG9CZSgzNDAyODIzNjY5MjA5Mzg0NjM0NjMzNzQ2MDc0MzE3NjgyMTE0NTUuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgNCIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSA8PCA1NCk7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoMTgwMTQzOTg1MDk0ODE5ODQuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgNSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSA8PCA1NSk7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoMzYwMjg3OTcwMTg5NjM5NzAuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgNiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSA8PCA1Nik7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoNzIwNTc1OTQwMzc5Mjc5NDAuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgNyIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSA8PCA1Nyk7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoMTQ0MTE1MTg4MDc1ODU1ODcwLjApOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbnZlcnQgdG8gZG91YmxlIDgiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEgPDwgNjMpOwogICAgZXhwZWN0KGEuYXM8ZjY0PigpKS50b0JlKDkyMjMzNzIwMzY4NTQ3NzYwMDAuMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29udmVydCB0byBkb3VibGUgOSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgodTY0Lk1BWF9WQUxVRSk7CiAgICBleHBlY3QoYS5hczxmNjQ+KCkpLnRvQmUoMTg0NDY3NDQwNzM3MDk1NTIwMDAuMCk7CiAgfSk7Cn0pOwoKZGVzY3JpYmUoIkJhc2ljIE9wZXJhdGlvbnMiLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBudW1iZXIgaXMgemVybyAxIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Llplcm87CiAgICBleHBlY3QoYS5pc1plcm8oKSkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBudW1iZXIgaXMgemVybyAyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk9uZTsKICAgIGV4cGVjdCghYS5pc1plcm8oKSkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBudW1iZXIgYmluYXJ5IG5vdCIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgMik7CiAgICBleHBlY3QofmEpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgofjEsIH4yKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbnVtYmVyIHVuYXJ5IHBvc2l0aXZlIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxLCAyKTsKICAgIGV4cGVjdChhKS50b1N0cmljdEVxdWFsKCthKTsKICB9KTsKCiAgaXQoIlNob3VsZCBudW1iZXIgbm9uIGVtcHR5IiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk9uZTsKICAgIGV4cGVjdCghIWEpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbnVtYmVyIGlzIGVtcHR5IDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguWmVybzsKICAgIGV4cGVjdCghYSkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBiaW5hcnkgb3IgbnVtYmVycyIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgICAxMjMpOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxMTEsIDIyMik7CiAgICB2YXIgciA9IG5ldyB1MTI4KDAgfCAxMTEsIDEyMyB8IDIyMik7CiAgICBleHBlY3QoYSB8IGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiB8IGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgYmluYXJ5IHhvciBudW1iZXJzIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMTEsIDEyMyk7CiAgICB2YXIgYiA9IG5ldyB1MTI4KDExMSwgMCk7CiAgICB2YXIgciA9IG5ldyB1MTI4KDExMSBeIDExMSwgMTIzIF4gMCk7CiAgICBleHBlY3QoYSBeIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiBeIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgYmluYXJ5IGFuZCBudW1iZXJzIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgweEZGMDAsIDEyMyk7CiAgICB2YXIgYiA9IG5ldyB1MTI4KDB4MDBGRiwgMjM0KTsKICAgIHZhciByID0gbmV3IHUxMjgoMHhGRjAwICYgMHgwMEZGLCAxMjMgJiAyMzQpOwogICAgZXhwZWN0KGEgJiBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgZXhwZWN0KGIgJiBhKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIGVxdWFsIHR3byBudW1iZXJzIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMCwgMjU1KTsKICAgIHZhciBiID0gbmV3IHUxMjgoMTAwLCAyNTUpOwogICAgZXhwZWN0KGEgPT0gYikudG9CZSh0cnVlKTsKICAgIGV4cGVjdChiID09IGEpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgZXF1YWwgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgdTY0Lk1BWF9WQUxVRSk7CiAgICB2YXIgYiA9IG5ldyB1MTI4KDEsIHU2NC5NQVhfVkFMVUUpOwogICAgZXhwZWN0KGEgPT0gYikudG9CZSh0cnVlKTsKICAgIGV4cGVjdChiID09IGEpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbm9uIGVxdWFsIHR3byBudW1iZXJzIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEsIDEpOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxLCAwKTsKICAgIGV4cGVjdChhICE9IGIpLnRvQmUodHJ1ZSk7CiAgICBleHBlY3QoYiAhPSBhKS50b0JlKHRydWUpOwogIH0pOwoKICBpdCgiU2hvdWxkIG5vbiBlcXVhbCB0d28gbnVtYmVycyAyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgwLCAyKTsKICAgIHZhciBiID0gbmV3IHUxMjgoMiwgMCk7CiAgICBleHBlY3QoYSAhPSBiKS50b0JlKHRydWUpOwogICAgZXhwZWN0KGIgIT0gYSkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb21wYXJlIGxlc3MgdHdvIG51bWJlcnMgMSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwLCAxMDApOwogICAgdmFyIGIgPSBuZXcgdTEyOCg1MCwgIDEwMCk7CiAgICBleHBlY3QoYiA8IGEpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29tcGFyZSBsZXNzIHR3byBudW1iZXJzIDIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMCwgMTAwKTsKICAgIHZhciBiID0gbmV3IHUxMjgoMTAwLCAxMDApOwogICAgZXhwZWN0KCEoYiA8IGEpKS50b0JlKHRydWUpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbXBhcmUgbGVzcyB0d28gbnVtYmVycyAzIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk9uZTsKICAgIHZhciBiID0gdTEyOC5NYXg7CiAgICBleHBlY3QoYSA8IGIpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29tcGFyZSBsZXNzIG9yIGVxdWFsIHR3byBudW1iZXJzIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMCwgMTAwKTsKICAgIHZhciBiID0gbmV3IHUxMjgoNTAsICAxMDApOwogICAgZXhwZWN0KGIgPD0gYSkudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb21wYXJlIGxlc3Mgb3IgZXF1YWwgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwLCAxMDApOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxMDAsIDEwMCk7CiAgICBleHBlY3QoYiA8PSBhKS50b0JlKHRydWUpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvbXBhcmUgZ3JlYXRlciB0d28gbnVtYmVycyAxIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMDAsIDEwMCk7CiAgICB2YXIgYiA9IG5ldyB1MTI4KDUwLCAgMTAwKTsKICAgIGV4cGVjdChhID4gYikudG9CZSh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb21wYXJlIGdyZWF0ZXIgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwLCAxMDApOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxMDAsIDEwMCk7CiAgICBleHBlY3QoIShhID4gYikpLnRvQmUodHJ1ZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgY29tcGFyZSBncmVhdGVyIG9yIGVxdWFsIHR3byBudW1iZXJzIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMCwgMTAwKTsKICAgIHZhciBiID0gbmV3IHUxMjgoNTAsICAxMDApOwogICAgZXhwZWN0KGEgPj0gYikudG9TdHJpY3RFcXVhbCh0cnVlKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb21wYXJlIGdyZWF0ZXIgb3IgZXF1YWwgdHdvIG51bWJlcnMgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwLCAxMDApOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxMDAsIDEwMCk7CiAgICBleHBlY3QoYSA+PSBiKS50b1N0cmljdEVxdWFsKHRydWUpOwogIH0pOwoKICBpdCgiU2hvdWxkIGFkZCB0d28gbnVtYmVycyAxIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMDAsIDI1NSk7CiAgICB2YXIgYiA9IG5ldyB1MTI4KDI1NSwgMTAwKTsKICAgIHZhciByID0gbmV3IHUxMjgoMzU1LCAzNTUpOwogICAgZXhwZWN0KGEgKyBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgZXhwZWN0KGIgKyBhKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIGFkZCB0d28gbnVtYmVycyAyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4LmZyb20oLTIpOwogICAgdmFyIGIgPSB1MTI4Lk9uZTsKICAgIHZhciByID0gdTEyOC5NYXg7CiAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgYWRkIHR3byBudW1iZXJzIDMiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KHU2NC5NQVhfVkFMVUUpOwogICAgdmFyIGIgPSB1MTI4Lk9uZTsKICAgIHZhciByID0gbmV3IHUxMjgoMCwgMSk7CiAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgYWRkIHR3byBudW1iZXJzIHdpdGggb3dlcmZsb3ciLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KHU2NC5NQVhfVkFMVUUsIHU2NC5NQVhfVkFMVUUpOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxLCAxKTsKICAgIHZhciByID0gbmV3IHUxMjgoMCwgMSk7CiAgICBleHBlY3QoYSArIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiArIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgc3VidHJhY3QgdHdvIG51bWJlcnMiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDM1NSwgMzU1KTsKICAgIHZhciBiID0gbmV3IHUxMjgoMTAwLCAyNTUpOwogICAgdmFyIHIgPSBuZXcgdTEyOCgyNTUsIDEwMCk7CiAgICBleHBlY3QoYSAtIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgc3ViIFswLCAwXSBhbmQgWzEsIDFdIiwgKCkgPT4gewogICAgY29uc3QgbWF4ID0gdTY0Lk1BWF9WQUxVRTsKICAgIHZhciBhID0gdTEyOC5aZXJvOwogICAgdmFyIGIgPSBuZXcgdTEyOCgxLCAxKTsKICAgIHZhciByID0gbmV3IHUxMjgobWF4LCBtYXggLSAxKTsKICAgIGV4cGVjdChhIC0gYikudG9TdHJpY3RFcXVhbChyKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzdWIgWzAsIDBdIGFuZCBbbWF4LCBtYXhdIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Llplcm87CiAgICB2YXIgYiA9IHUxMjguTWF4OwogICAgdmFyIHIgPSB1MTI4Lk9uZTsKICAgIGV4cGVjdChhIC0gYikudG9TdHJpY3RFcXVhbChyKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzdWIgW21heCwgbWF4XSBhbmQgWzEsIDBdIiwgKCkgPT4gewogICAgY29uc3QgbWF4ID0gdTY0Lk1BWF9WQUxVRTsKICAgIHZhciBhID0gdTEyOC5NYXg7CiAgICB2YXIgYiA9IHUxMjguT25lOwogICAgdmFyIHIgPSBuZXcgdTEyOChtYXggLSAxLCBtYXgpOwogICAgZXhwZWN0KGEgLSBiKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIHN1YiBbMSwgMl0gYW5kIFttYXggLSAxLCBtYXggLSAyXSIsICgpID0+IHsKICAgIGNvbnN0IG1heCA9IHU2NC5NQVhfVkFMVUU7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEsIDIpOwogICAgdmFyIGIgPSBuZXcgdTEyOChtYXggLSAxLCBtYXggLSAyKTsKICAgIHZhciByID0gbmV3IHUxMjgoMywgNCk7CiAgICBleHBlY3QoYSAtIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgc3VidHJhY3QgZnJvbSB6ZXJvIGVxdWFsIG5lZ2F0aXZlIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwLCAyNTUpOwogICAgZXhwZWN0PHUxMjg+KHUxMjguWmVybyAtIGEpLnRvU3RyaWN0RXF1YWwoLWEpOwogIH0pOwoKICBpdCgiU2hvdWxkIGxlZnQgc2hpZnQgb25lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgMCk7CiAgICBleHBlY3QoYSA8PCA2NSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgwLCAyKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcGVyaW9kaWMgbGVmdCBzaGlmdCBvbmUgbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxLCAwKTsKICAgIGV4cGVjdChhIDw8ICg2NSArIDEyOCkpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMCwgMikpOwogIH0pOwoKICBpdCgiU2hvdWxkIGludmFyaWFudCBsZWZ0IHNoaWZ0IHplcm8gbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxLCAxKTsKICAgIGV4cGVjdChhIDw8IDApLnRvU3RyaWN0RXF1YWwoYSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcmlnaHQgc2hpZnQgb25lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMTAwKTsKICAgIGV4cGVjdChhID4+IDY1KS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDUwKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcGVyaW9kaWMgcmlnaHQgc2hpZnQgb25lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMTAwKTsKICAgIGV4cGVjdChhID4+ICg2NSArIDEyOCkpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoNTApKTsKICB9KTsKCiAgaXQoIlNob3VsZCBpbnZhcmlhbnQgcmlnaHQgc2hpZnQgemVybyBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEsIDEpOwogICAgZXhwZWN0KGEgPj4gMCkudG9TdHJpY3RFcXVhbChhKTsKICB9KTsKCiAgaXQoIlNob3VsZCBpbnZhcmlhbnQgcm90YXRlIGxlZnQgd2l0aCB6ZXJvIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgMSk7CiAgICBleHBlY3QodTEyOC5yb3RsKGEsIDApKS50b1N0cmljdEVxdWFsKGEpOwogIH0pOwoKICBpdCgiU2hvdWxkIGludmFyaWFudCByb3RhdGUgcmlnaHQgd2l0aCB6ZXJvIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgMSk7CiAgICBleHBlY3QodTEyOC5yb3RyKGEsIDApKS50b1N0cmljdEVxdWFsKGEpOwogIH0pOwoKICBpdCgiU2hvdWxkIHN3YXAgbG8vaGkgd2l0aCBsZWZ0IHJvdGF0aW9uIHdpdGggNjQgbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMjM0NTY3ODksIDk4NzY1NDMyMSk7CiAgICB2YXIgciA9IG5ldyB1MTI4KDk4NzY1NDMyMSwgMTIzNDU2Nzg5KTsKICAgIGV4cGVjdCh1MTI4LnJvdGwoYSwgNjQpKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIHN3YXAgbG8vaGkgd2l0aCByaWdodCByb3RhdGlvbiB3aXRoIDY0IG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTIzNDU2Nzg5LCA5ODc2NTQzMjEpOwogICAgdmFyIHIgPSBuZXcgdTEyOCg5ODc2NTQzMjEsIDEyMzQ1Njc4OSk7CiAgICBleHBlY3QodTEyOC5yb3RyKGEsIDY0KSkudG9TdHJpY3RFcXVhbChyKTsKICB9KTsKCiAgaXQoIlNob3VsZCBsZWZ0IHJvdGF0aW9uIHdpdGggMSBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDAsIDEpOwogICAgdmFyIHIgPSBuZXcgdTEyOCgwLCAyKTsKICAgIGV4cGVjdCh1MTI4LnJvdGwoYSwgMSkpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QodTEyOC5yb3RsKGEsIDEpKS50b1N0cmljdEVxdWFsKHUxMjguZnJvbSgiMzY4OTM0ODgxNDc0MTkxMDMyMzIiKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcmlnaHQgcm90YXRpb24gd2l0aCAxIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSwgMCk7CiAgICB2YXIgciA9IG5ldyB1MTI4KDAsIDkyMjMzNzIwMzY4NTQ3NzU4MDgpOwogICAgZXhwZWN0KHUxMjgucm90cihhLCAxKSkudG9TdHJpY3RFcXVhbChyKTsKICAgIGV4cGVjdCh1MTI4LnJvdHIoYSwgMSkpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKCIxNzAxNDExODM0NjA0NjkyMzE3MzE2ODczMDM3MTU4ODQxMDU3MjgiKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbGVmdCByb3RhdGlvbiB3aXRoIDMyIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTIzNDU2Nzg5LCA5ODc2NTQzMjEpOwogICAgdmFyIHIgPSBuZXcgdTEyOCg1MzAyNDI4NzEyMjQxNzI1NDQsIDQyNDE5NDMwMDg0NDgwODYwMTYpOwogICAgZXhwZWN0KHUxMjgucm90bChhLCAzMikpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgcmlnaHQgcm90YXRpb24gd2l0aCAzMiBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEyMzQ1Njc4OSwgOTg3NjU0MzIxKTsKICAgIHZhciByID0gbmV3IHUxMjgoNDI0MTk0MzAwODQ0ODA4NjAxNiwgNTMwMjQyODcxMjI0MTcyNTQ0KTsKICAgIGV4cGVjdCh1MTI4LnJvdHIoYSwgMzIpKS50b1N0cmljdEVxdWFsKHIpOwogICAgZXhwZWN0KHUxMjgucm90cihhLCAzMikpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKCI5NzgxMjU0NTQyMzgxMjQxODIwNzUyODY2MjQ3MzA2MTE3MTIwIikpOwogIH0pOwoKICBpdCgiU2hvdWxkIGxlZnQgcm90YXRpb24gd2l0aCAxNiBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEyMzQ1Njc4OSwgOTg3NjU0MzIxKTsKICAgIHZhciByID0gbmV3IHUxMjgoODA5MDg2NDEyMzkwNCwgNjQ3MjY5MTM1ODEwNTYpOwogICAgZXhwZWN0KHUxMjgucm90bChhLCAxNikpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgcmlnaHQgcm90YXRpb24gd2l0aCAxNiBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEyMzQ1Njc4OSwgOTg3NjU0MzIxKTsKICAgIHZhciByID0gbmV3IHUxMjgoNzU0MzgxMDg1MDgyMjI5MzMzOSwgMTQ3Nzc3MTc3NTIyODYxNjU3MjYpOwogICAgZXhwZWN0KHUxMjgucm90cihhLCAxNikpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgbGVmdCByb3RhdGlvbiB3aXRoIDk3IG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTIzNDU2Nzg5LCA5ODc2NTQzMjEpOwogICAgdmFyIHIgPSBuZXcgdTEyOCg4NDgzODg2MDE2ODk2MTcyMDMyLCAxMDYwNDg1NzQyNDQ4MzQ1MDg4KTsKICAgIGV4cGVjdCh1MTI4LnJvdGwoYSwgOTcpKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIHJpZ2h0IHJvdGF0aW9uIHdpdGggOTcgbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMjM0NTY3ODksIDk4NzY1NDMyMSk7CiAgICB2YXIgciA9IG5ldyB1MTI4KDI2NTEyMTQzNTYxMjA4NjI3MiwgMjEyMDk3MTUwNDIyNDA0MzAwOCk7CiAgICBleHBlY3QodTEyOC5yb3RyKGEsIDk3KSkudG9TdHJpY3RFcXVhbChyKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtdWx0aXBseSB0d28gbnVtYmVycyIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5mcm9tKDQzNTQ1NDUzNDUyKTsKICAgIHZhciBiID0gdTEyOC5mcm9tKDIzNTM0NTQzNTQpOwogICAgdmFyIHIgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBleHBlY3QoYSAqIGIpLnRvU3RyaWN0RXF1YWwocik7CiAgICBleHBlY3QoYiAqIGEpLnRvU3RyaWN0RXF1YWwocik7CiAgfSk7CgogIGl0KCJTaG91bGQgbXVsdGlwbHkgdHdvIG51bWJlcnMgMSIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5NYXg7CiAgICB2YXIgYiA9IHUxMjguT25lOwogICAgdmFyIHIgPSBhOwogICAgZXhwZWN0KGEgKiBiKS50b1N0cmljdEVxdWFsKHIpOwogICAgZXhwZWN0KGIgKiBhKS50b1N0cmljdEVxdWFsKHIpOwogIH0pOwoKICBpdCgiU2hvdWxkIG11bHRpcGx5IHR3byBudW1iZXJzIHdpdGggb3ZlcmZsb3cgMSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMSk7CiAgICBleHBlY3QoYSAqIGEpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtdWx0aXBseSB0d28gbnVtYmVycyB3aXRoIG92ZXJmbG93IDIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEsIDEpOwogICAgZXhwZWN0KGEgKiBhKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDEsIDIpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBuZWdhdGl2ZSBudW1iZXIgMSIsICgpID0+IHsKICAgIGV4cGVjdCgtbmV3IHUxMjgoMikpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKC0yKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbmVnYXRpdmUgbnVtYmVyIDIiLCAoKSA9PiB7CiAgICBleHBlY3Q8dTEyOD4oLXUxMjguTWF4KS50b1N0cmljdEVxdWFsKHUxMjguT25lKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwcmVmaXggaW5jcmVtZW50IG51bWJlciAxIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICArK2E7CiAgICBleHBlY3QoYSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOSwgNSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIHByZWZpeCBpbmNyZW1lbnQgbnVtYmVyIDIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDB4RkZGRkZGRkZGRkZGRkZGRiwgMCk7CiAgICArK2E7CiAgICBleHBlY3QoYSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgwLCAxKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcHJlZml4IGluY3JlbWVudCBudW1iZXIgMyIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5aZXJvOwogICAgKythOwogICAgZXhwZWN0KGEpLnRvU3RyaWN0RXF1YWwodTEyOC5PbmUpOwogIH0pOwoKICBpdCgiU2hvdWxkIHByZWZpeCBpbmNyZW1lbnQgbnVtYmVyIDQiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDx1NjQ+LTIsIDx1NjQ+LTEpOwogICAgKythOwogICAgZXhwZWN0KGEpLnRvU3RyaWN0RXF1YWwodTEyOC5NYXgpOwogIH0pOwoKICBpdCgiU2hvdWxkIHByZWZpeCBkZWNyZW1lbnQgbnVtYmVyIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEwMjQ4NTE2NjU0OTY1OTcxOTI4LCA1KTsKICAgIC0tYTsKICAgIGV4cGVjdChhKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDEwMjQ4NTE2NjU0OTY1OTcxOTI3LCA1KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcHJlZml4IGRlY3JlbWVudCBudW1iZXIgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMSk7CiAgICAtLWE7CiAgICBleHBlY3QoYSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweEZGRkZGRkZGRkZGRkZGRkYsIDApKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3N0Zml4IGluY3JlbWVudCBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDB4RkZGRkZGRkZGRkZGRkZGRiwgMCk7CiAgICB2YXIgdCA9IGErKzsKICAgIGV4cGVjdCh0KS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDB4RkZGRkZGRkZGRkZGRkZGRiwgMCkpOwogICAgZXhwZWN0KGEpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMCwgMSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvc3RmaXggZGVjcmVtZW50IG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMSk7CiAgICB2YXIgdCA9IGEtLTsKICAgIGV4cGVjdCh0KS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDAsIDEpKTsKICAgIGV4cGVjdChhKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDB4RkZGRkZGRkZGRkZGRkZGRiwgMCkpOwogIH0pOwp9KTsKCmRlc2NyaWJlKCJFeHBvbmVudGlvbiBPcGVyYXRpb24iLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBwb3dlciBvZiB6ZXJvIHdpdGggemVybyByZXR1cm4gb25lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gdTEyOC5aZXJvOwogICAgZXhwZWN0KGEgKiogMCkudG9TdHJpY3RFcXVhbCh1MTI4Lk9uZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG93ZXIgb2Ygb25lIHdpdGggbmVnYXRpdmUgcmV0dXJuIG9uZSBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguT25lOwogICAgZXhwZWN0KGEgKiogLTIpLnRvU3RyaWN0RXF1YWwodTEyOC5PbmUpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIG5lZ2F0aXZlIHJldHVybiB6ZXJvIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoLTEsIC0xKTsKICAgIGV4cGVjdChhICoqIC0yKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG93ZXIgb2YgemVybyByZXR1cm4gb25lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoLTEsIC0xKTsKICAgIGV4cGVjdChhICoqIDApLnRvU3RyaWN0RXF1YWwodTEyOC5PbmUpOwogIH0pOwoKICBpdCgiU2hvdWxkIGFueSBwb3dlciBmb3IgemVybyByZXR1cm4gbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Llplcm87CiAgICBleHBlY3QoYSAqKiAxMCkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogICAgZXhwZWN0KGEgKiogMSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogICAgZXhwZWN0KGEgKiogMikudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIG9uZSByZXR1cm4gc2FtZSBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KC0xLCAtMSk7CiAgICBleHBlY3QoYSAqKiAxKS50b1N0cmljdEVxdWFsKGEpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIHR3byByZXR1cm4gc3F1YXJlZCBudW1iZXIgMSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMSk7CiAgICBleHBlY3QoKGEgKiogMikpLnRvU3RyaWN0RXF1YWwoKGEgKiBhKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG93ZXIgb2YgdHdvIHJldHVybiBzcXVhcmVkIG51bWJlciAyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgweEZGRkZGRkZGKTsKICAgIGV4cGVjdCgoYSAqKiAyKSkudG9TdHJpY3RFcXVhbCgoYSAqIGEpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiB0d28gcmV0dXJuIHNxdWFyZWQgbnVtYmVyIDMiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDB4RkZGRik7CiAgICBleHBlY3QoKGEgKiogMikpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoPHU2ND4weEZGRkYgKiA8dTY0PjB4RkZGRikpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIHR3byByZXR1cm4gc3F1YXJlZCBudW1iZXIgNCIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMHhGRkZGIC0gMSk7CiAgICBleHBlY3QoKGEgKiogMikpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoKDB4RkZGRiAtIDEpICogKDB4RkZGRiAtIDEpKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG93ZXIgb2YgdHdvIHJldHVybiBzcXVhcmVkIG51bWJlciB3aXRoIG92ZXJmbG93IiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgwLCAxKTsKICAgIGV4cGVjdCgoYSAqKiAyKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIHR3byByZXR1cm4gc3F1YXJlZCBudW1iZXIgd2l0aCBvdmVyZmxvdyAyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgwLCAzKTsKICAgIGV4cGVjdCgoYSAqKiAyKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIHRocmVlIHJldHVybiBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDB4RkZGRik7CiAgICBleHBlY3QoKGEgKiogMykpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMHhGRkZEMDAwMkZGRkYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiB0aHJlZSByZXR1cm4gbnVtYmVyIDIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEyMzQ1Njc4KTsKICAgIGV4cGVjdCgoYSAqKiAzKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweDAxN0ZFQzUwRTA0NTA5QjgsIDB4NjYpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiB0aHJlZSByZXR1cm4gbnVtYmVyIDMiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDEgPDwgMjApOwogICAgZXhwZWN0KChhICoqIDQpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDAsIDB4MTAwMDApKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiB0aHJlZSByZXR1cm4gbnVtYmVyIDQiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KCgxIDw8IDQwKSArIDEpOwogICAgZXhwZWN0KChhICoqIDMpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDB4MDAwMDAzMDAwMDAwMDAwMSwgMHgxMDAwMDAwMDAwMzAwMDApKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiBmb3VyIHJldHVybiBudW1iZXIgNSIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMCwgMSk7CiAgICBleHBlY3QoKGEgKiogNCkpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBwb3dlciBvZiAxOCByZXR1cm4gbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgxMjMpOwogICAgZXhwZWN0KChhICoqIDE4KSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweEI4QzNGOUJCRDQ5RTNDRDksIDB4MUYzRDE5NkYyQzJBRjI2QSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIDEyNyByZXR1cm4gbnVtYmVyIDEiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDIpOwogICAgZXhwZWN0KChhICoqIDEyNykpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMCwgMHg4MDAwMDAwMDAwMDAwMDAwKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG93ZXIgb2YgMTI3IHJldHVybiBudW1iZXIgMiIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMyk7CiAgICBleHBlY3QoKGEgKiogMTI3KSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweDJBQzBCMTgwODM4MjI4QUIsIDB4NEMxRDg1MjlBOTI5NEJDQykpOwogIH0pOwoKICBpdCgiU2hvdWxkIHBvd2VyIG9mIDEyOCByZXR1cm4gemVybyBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDIpOwogICAgZXhwZWN0KChhICoqIDEyOCkpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzcXJ0IHplcm8gbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Llplcm87CiAgICBleHBlY3QodTEyOC5zcXJ0KGEpKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgc3FydCBvbmUgbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSB1MTI4Lk9uZTsKICAgIGV4cGVjdCh1MTI4LnNxcnQoYSkpLnRvU3RyaWN0RXF1YWwodTEyOC5PbmUpOwogIH0pOwoKICBpdCgiU2hvdWxkIHNxcnQgdGhyZWUgbnVtYmVyIiwgKCkgPT4gewogICAgdmFyIGEgPSBuZXcgdTEyOCgzKTsKICAgIGV4cGVjdCh1MTI4LnNxcnQoYSkpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMSkpOwogIH0pOwoKICBpdCgiU2hvdWxkIHNxcnQgZm91ciBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDQpOwogICAgZXhwZWN0KHUxMjguc3FydChhKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgyKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgc3FydCBmaXZlIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoNSk7CiAgICBleHBlY3QodTEyOC5zcXJ0KGEpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDIpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzcXJ0IHNpeCBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IG5ldyB1MTI4KDUpOwogICAgZXhwZWN0KHUxMjguc3FydChhKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgyKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgc3FydCBuaW5lIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoOSk7CiAgICBleHBlY3QodTEyOC5zcXJ0KGEpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDMpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzcXJ0IDY0IG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoNjQpOwogICAgZXhwZWN0KHUxMjguc3FydChhKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCg4KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgc3FydCAxMDAwIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMTAwMCk7CiAgICBleHBlY3QodTEyOC5zcXJ0KGEpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDMxKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgc3FydCAweDMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzIHZhbHVlIG51bWJlciIsICgpID0+IHsKICAgIHZhciBhID0gbmV3IHUxMjgoMHgzMzMzMzMzMzMzMzMzMzMzLCAweDMzMzMzMzMzMzMzMzMzMzMpOwogICAgZXhwZWN0KHUxMjguc3FydChhKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgweDcyN0M5NzE2RkZCNzY0RDUpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBzcXJ0IG1heCB2YWx1ZSBudW1iZXIiLCAoKSA9PiB7CiAgICB2YXIgYSA9IHUxMjguTWF4OwogICAgZXhwZWN0KHUxMjguc3FydChhKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCh1NjQuTUFYX1ZBTFVFKSk7CiAgfSk7Cn0pOwoKZGVzY3JpYmUoIkJpbmFyeSBPcGVyYXRpb24gQ291bnQiLCAoKSA9PiB7CiAgaXQoIlNob3VsZCBwb3Bjb3VudCAxIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjgucG9wY250KHUxMjguWmVybykpLnRvQmUoMCk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG9wY291bnQgMiIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LnBvcGNudChuZXcgdTEyOCgxKSkpLnRvQmUoMSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG9wY291bnQgMyIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LnBvcGNudChuZXcgdTEyOCgxLCAxKSkpLnRvQmUoMik7CiAgfSk7CgogIGl0KCJTaG91bGQgcG9wY291bnQgNCIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LnBvcGNudChuZXcgdTEyOCgwLCAxKSkpLnRvQmUoMSk7CiAgfSk7CgogIGl0KCJTaG91bGQgcG9wY291bnQgNSIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LnBvcGNudChuZXcgdTEyOCgtMSwgLTEpKSkudG9CZSgxMjgpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvdW50IGxlYWRpbmcgemVyb3MgMSIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmNseih1MTI4Llplcm8pKS50b0JlKDEyOCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY291bnQgbGVhZGluZyB6ZXJvcyAyIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY2x6KHUxMjguT25lKSkudG9CZSgxMjcpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvdW50IGxlYWRpbmcgemVyb3MgMyIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmNseihuZXcgdTEyOCgwLCAxKSkpLnRvQmUoNjMpOwogIH0pOwoKICBpdCgiU2hvdWxkIGNvdW50IGxlYWRpbmcgemVyb3MgNCIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmNseihuZXcgdTEyOCgtMSwgLTEpKSkudG9CZSgwKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb3VudCB0cmFpbGluZyB6ZXJvcyAxIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY3R6KHUxMjguWmVybykpLnRvQmUoMTI4KTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb3VudCB0cmFpbGluZyB6ZXJvcyAyIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY3R6KHUxMjguT25lKSkudG9CZSgwKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb3VudCB0cmFpbGluZyB6ZXJvcyAzIiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY3R6KG5ldyB1MTI4KDIpKSkudG9CZSgxKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb3VudCB0cmFpbGluZyB6ZXJvcyA0IiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY3R6KG5ldyB1MTI4KDAsIDEpKSkudG9CZSg2NCk7CiAgfSk7CgogIGl0KCJTaG91bGQgY291bnQgdHJhaWxpbmcgemVyb3MgNSIsICgpID0+IHsKICAgIGV4cGVjdCh1MTI4LmN0eihuZXcgdTEyOCgtMSwgLTEpKSkudG9CZSgwKTsKICB9KTsKCiAgaXQoIlNob3VsZCBjb3VudCB0cmFpbGluZyB6ZXJvcyA2IiwgKCkgPT4gewogICAgZXhwZWN0KHUxMjguY3R6KG5ldyB1MTI4KDAsIDB4ODAwMDAwMDAwMDAwMDAwMCkpKS50b0JlKDEyNyk7CiAgfSk7Cn0pOwoKZGVzY3JpYmUoIkRpdmlzaW9uIEFuZCBNb2QgT3BlcmF0aW9uIiwgKCkgPT4gewogIGl0KCJTaG91bGQgZGl2aWRlIHR3byBudW1iZXJzIHdpdGhvdXQgcmVtYWluZGVyIDEiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyB1MTI4KDEwMjQ4NTE2NjU3MzE5NDI2MjgyLCA1KTsKICAgIGxldCBiID0gdTEyOC5mcm9tKDIzNTM0NTQzNTQpOwogICAgZXhwZWN0KGEgLyBiKS50b1N0cmljdEVxdWFsKHUxMjguZnJvbSg0MzU0NTQ1MzQ1MykpOwogIH0pOwoKICBpdCgiU2hvdWxkIGRpdmlkZSB0d28gbnVtYmVycyB3aXRob3V0IHJlbWFpbmRlciAyIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg0MzU0NTQ1MzQ1Mik7CiAgICBleHBlY3QoYSAvIGIpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKDIzNTM0NTQzNTQpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBkaXZpZGUgdHdvIG51bWJlcnMgd2l0aG91dCByZW1haW5kZXIgMyIsICgpID0+IHsKICAgIGxldCBhID0gbmV3IHUxMjgoMzE1MjY1MjY2NjIwODE3MzU2OCwgMik7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg0MzU0NTQ1MzQ1MzEyKTsKICAgIGV4cGVjdChhIC8gYikudG9TdHJpY3RFcXVhbCh1MTI4LmZyb20oOTE5NjQwMCkpOwogIH0pOwoKICAvLyByZWdyZXNzaW9uCiAgaXQoIlNob3VsZCBkaXZpZGUgdHdvIG51bWJlcnMgd2l0aG91dCByZW1haW5kZXIgNCIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5mcm9tKCc5ODAxNDI3ODA1NTQyMDE4ODY5NzUwMTAwMDAwMDAwJyk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSgxMCk7CiAgICBleHBlY3QoYSAvIGIpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKCc5ODAxNDI3ODA1NTQyMDE4ODY5NzUwMTAwMDAwMDAnKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgZGl2aWRlIHR3byBudW1iZXJzIHdpdGggcmVtYWluZGVyIDEiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyB1MTI4KDMxNTI2NTI2NjYyMDgxNzM1NjgsIDIpOwogICAgbGV0IGIgPSB1MTI4LmZyb20oNDM1NDM1MzQ1MzQ1MzQpOwogICAgZXhwZWN0KGEgLyBiKS50b1N0cmljdEVxdWFsKHUxMjguZnJvbSg5MTk2ODApKTsKICB9KTsKCiAgaXQoIlNob3VsZCBkaXZpZGUgdHdvIG51bWJlcnMgd2l0aCByZW1haW5kZXIgMiIsICgpID0+IHsKICAgIGxldCBhID0gbmV3IHUxMjgoMzE1MjY1MjY2NjIwODE3OCwwKTsKICAgIGxldCBiID0gdTEyOC5mcm9tKDQzNTQzNTM0NTM0NTM0KTsKICAgIGV4cGVjdChhIC8gYikudG9TdHJpY3RFcXVhbCh1MTI4LmZyb20oNzIpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBkaXZpZGUgemVybyB3aXRoIG51bWJlciIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5aZXJvOwogICAgbGV0IGIgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBleHBlY3QoYSAvIGIpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBkaXZpZGUgbnVtYmVyIHdpdGggb25lIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IHUxMjguT25lOwogICAgZXhwZWN0KGEgLyBiKS50b1N0cmljdEVxdWFsKGEpOwogIH0pOwoKICBpdCgiU2hvdWxkIG1vZCB0d28gbnVtYmVycyB3aXRob3V0IHJlbWFpbmRlciAxIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NzMxOTQyNjI4MiwgNSk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSgyMzUzNDU0MzU0KTsKICAgIGV4cGVjdChhICUgYikudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIG1vZCB0d28gbnVtYmVycyB3aXRob3V0IHJlbWFpbmRlciAyIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg0MzU0NTQ1MzQ1Mik7CiAgICBleHBlY3QoYSAlIGIpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtb2QgdHdvIG51bWJlcnMgd2l0aCByZW1haW5kZXIgMSIsICgpID0+IHsKICAgIGxldCBhID0gbmV3IHUxMjgoMzE1MjY1MjY2NjIwODE3MzU2OCwgMik7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg0MzU0MzUzNDUzNDUzNCk7CiAgICBleHBlY3QoYSAlIGIpLnRvU3RyaWN0RXF1YWwodTEyOC5mcm9tKDIyOTcyOTA3MDQ3NjgwKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbW9kIHR3byBudW1iZXJzIHdpdGggcmVtYWluZGVyIDIiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyB1MTI4KDMxNTI2NTI2NjYyMDgxNzgpOwogICAgbGV0IGIgPSB1MTI4LmZyb20oNDM1NDM1MzQ1MzQ1MzQpOwogICAgZXhwZWN0KGEgJSBiKS50b1N0cmljdEVxdWFsKHUxMjguZnJvbSgxNzUxODE3OTcyMTczMCkpOwogIH0pOwoKICBpdCgiU2hvdWxkIG1vZCB0d28gbnVtYmVycyB3aXRoIHJlbWFpbmRlciAzIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCg5ODc3NzU5ODMwMzI0NzQwNTUsIDU0MjEwMTA4NjI0Mjc1Mjc1OTEpOwogICAgbGV0IGIgPSBuZXcgdTEyOCgxMDAwMDAwMDAwMDExMTExKTsKICAgIGV4cGVjdChhICUgYikudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgzNDQzMzIxMDk4NjY2NzkpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtb2QgbnVtYmVyIHdpdGggb25lIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IHUxMjguT25lOwogICAgZXhwZWN0KGEgJSBiKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgbW9kIG51bWJlciB3aXRoIHR3byIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5mcm9tKDE5KTsKICAgIGxldCBiID0gdTEyOC5mcm9tKDIpOwogICAgZXhwZWN0KGEgJSBiKS50b1N0cmljdEVxdWFsKHUxMjguT25lKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtb2QgbnVtYmVyIHdpdGggZm91ciIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5mcm9tKDExMSk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg0KTsKICAgIGV4cGVjdChhICUgYikudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgzKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbW9kIG51bWJlciB3aXRoIDEyOCIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5mcm9tKDQpOwogICAgbGV0IGIgPSB1MTI4LmZyb20oMTI4KTsKICAgIGV4cGVjdChhICUgYikudG9TdHJpY3RFcXVhbChuZXcgdTEyOCg0KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbW9kIG51bWJlciBzYW1lIG51bWJlciAxIiwgKCkgPT4gewogICAgbGV0IGEgPSB1MTI4LmZyb20oOCk7CiAgICBsZXQgYiA9IHUxMjguZnJvbSg4KTsKICAgIGV4cGVjdChhICUgYikudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIG1vZCBudW1iZXIgc2FtZSBudW1iZXIgMiIsICgpID0+IHsKICAgIGxldCBhID0gbmV3IHUxMjgoMTAyNDg1MTY2NTQ5NjU5NzE5MjgsIDUpOwogICAgZXhwZWN0KGEgJSBhKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgZGl2aWRlIHR3byBzYW1lIG51bWJlcnMiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyB1MTI4KDEwMjQ4NTE2NjU0OTY1OTcxOTI4LCA1KTsKICAgIGV4cGVjdChhIC8gYSkudG9TdHJpY3RFcXVhbCh1MTI4Lk9uZSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbW9kIG51bWJlciBzYW1lIG1heCB2YWx1ZSIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5NYXg7CiAgICBleHBlY3QoYSAlIGEpLnRvU3RyaWN0RXF1YWwodTEyOC5aZXJvKTsKICB9KTsKCiAgaXQoIlNob3VsZCBkaXYgbnVtYmVyIHNhbWUgbWF4IHZhbHVlIiwgKCkgPT4gewogICAgbGV0IGEgPSB1MTI4Lk1heDsKICAgIGV4cGVjdChhIC8gYSkudG9TdHJpY3RFcXVhbCh1MTI4Lk9uZSk7CiAgfSk7Cgp9KTsKCmRlc2NyaWJlKCJNdWx0aXBseSBhbmQgRGl2aXNpb24gd2l0aG91dCBPdmVyZmxvdyIsICgpID0+IHsKICBpdCgiU2hvdWxkIG11bGRpdiByZXR1cm4gemVybyAxIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IG5ldyB1MTI4KDIyOTcyOTA3MDQ3NjgwKTsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihhLCB1MTI4Llplcm8sIGIpKS50b1N0cmljdEVxdWFsKHUxMjguWmVybyk7CiAgfSk7CgogIGl0KCJTaG91bGQgbXVsZGl2IHJldHVybiB6ZXJvIDIiLCAoKSA9PiB7CiAgICBsZXQgYSA9IHUxMjguWmVybzsKICAgIGxldCBiID0gbmV3IHUxMjgoMjI5NzI5MDcwNDc2ODApOwogICAgZXhwZWN0KHUxMjgubXVsZGl2KGEsIHUxMjguT25lLCBiKSkudG9TdHJpY3RFcXVhbCh1MTI4Llplcm8pOwogIH0pOwoKICBpdCgiU2hvdWxkIG11bGRpdiBzYW1lIG51bWJlciAxIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxMDI0ODUxNjY1NDk2NTk3MTkyOCwgNSk7CiAgICBsZXQgYiA9IG5ldyB1MTI4KDIyOTcyOTA3MDQ3NjgwKTsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihhLCBiLCBiKSkudG9TdHJpY3RFcXVhbChhKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtdWxkaXYgc2FtZSBudW1iZXIgMiIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5NYXg7CiAgICBsZXQgYiA9IG5ldyB1MTI4KC0xKTsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihhLCBiLCBiKSkudG9TdHJpY3RFcXVhbChhKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtdWxkaXYgc2FtZSBudW1iZXIgMyIsICgpID0+IHsKICAgIGxldCBtYXggPSB1MTI4Lk1heDsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihtYXgsIG1heCwgbWF4KSkudG9TdHJpY3RFcXVhbChtYXgpOwogIH0pOwoKICBpdCgiU2hvdWxkIG11bGRpdiBzbWFsbCBhcmd1bWVudHMgd2l0aG91dCBvdmVyZmxvdyA2NC1iaXRzIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCg0OTg0MTk4NDA1MTY1MTUxMjMpOwogICAgbGV0IGIgPSBuZXcgdTEyOCg2MTMyMTk4NDE5ODc4MDQ2MTMyKTsKICAgIGxldCBjID0gbmV3IHUxMjgoOTE1NjQ5ODE0NTEzNTEwOTg0Myk7CiAgICBleHBlY3QodTEyOC5tdWxkaXYoYSwgYiwgYykpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMzMzNzk2NzUzOTU2MTA5OTkzKSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbXVsZGl2IHNtYWxsIGFyZ3VtZW50cyB3aXRoIG92ZXJmbG93IDY0LWJpdHMiLCAoKSA9PiB7CiAgICBsZXQgYSA9IG5ldyB1MTI4KDkyMjMzNzIwMzI1NTk4MDg1MTIpOwogICAgbGV0IGIgPSBuZXcgdTEyOCg5MjIzMzcyMDM2ODU0Nzc1ODA3KTsKICAgIGxldCBjID0gbmV3IHUxMjgoMTIpOwogICAgZXhwZWN0KHUxMjgubXVsZGl2KGEsIGIsIGMpKS50b1N0cmljdEVxdWFsKG5ldyB1MTI4KDExNTI5MjE1MDQ2NDI2MzgzNzAxLCAzODQzMDcxNjgwMjMzMjUzNTQpKTsKICB9KTsKCiAgaXQoIlNob3VsZCBtdWxkaXYgd2l0aCBzbWFsbCBiIGFuZCBodWdlIGMiLCAoKSA9PiB7CiAgICAvLyBGSVhNRTogdGhpcyBmYWlsZWQhCgogICAgbGV0IGEgPSBuZXcgdTEyOCg5MjIzMzcyMDMyNTU5ODA4NTEyLCAxMjM0NTYpOwogICAgbGV0IGIgPSBuZXcgdTEyOCgxMjM0NTYpOwogICAgbGV0IGMgPSBuZXcgdTEyOCgweEZGRkZGRkZGRkZGRkZGRkYsIDEyMzQ1Nik7CiAgICBleHBlY3QodTEyOC5tdWxkaXYoYSwgYiwgYykpLnRvU3RyaWN0RXF1YWwobmV3IHUxMjgoMTIzNDU1KSk7CiAgfSk7CgogIGl0KCJTaG91bGQgbXVsZGl2IGJpZyBhcmd1bWVudHMgd2l0aCBvdmVyZmxvdyAxMjgtYml0cyAxIiwgKCkgPT4gewogICAgbGV0IGEgPSBuZXcgdTEyOCgxNzM2ODUyNTY0NDIwMDExMjQ0OSwgMjQ0NjE0KTsKICAgIGxldCBiID0gbmV3IHUxMjgoNDAxNzU4MDE4OTI0ODc3MzY5MywgMTI2OTkpOwogICAgbGV0IGMgPSBuZXcgdTEyOCgzNDM0NTE1KTsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihhLCBiLCBjKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCgxMjc3MDA0MTExNzExMTc5MDY1NCwgODY4NDEyODg0MjE4OTgwNjEyOCkpOwogIH0pOwoKICBpdCgiU2hvdWxkIG11bGRpdiBiaWcgYXJndW1lbnRzIHdpdGggb3ZlcmZsb3cgMTI4LWJpdHMgMiIsICgpID0+IHsKICAgIGxldCBhID0gdTEyOC5NYXg7CiAgICBsZXQgYiA9IG5ldyB1MTI4KDB4N0ZGRkZGRkZGRkZGRkZGRiwgMHg4MTExMTExMTExMTExMTExKTsKICAgIGxldCBjID0gbmV3IHUxMjgoMHgzMzMzMzMzMzMzMzMzMzMzKTsKICAgIGV4cGVjdCh1MTI4Lm11bGRpdihhLCBiLCBjKSkudG9TdHJpY3RFcXVhbChuZXcgdTEyOCg5MjIzMzcyMDM2ODU0Nzc1ODAzLCAzODQzMDcxNjgyMDIyODIzMjIpKTsKICB9KTsKfSk7CgpkZXNjcmliZSgiVGhyb3dhYmxlIiwgKCkgPT4gewogIGl0KCJTaG91bGQgdGhyb3cgZnJvbSBzdHJpbmcgd2l0aCB1bnN1cHBvcnRlZCByYWRpeCAxIiwgKCkgPT4gewogICAgZXhwZWN0KCgpID0+IHsKICAgICAhKHUxMjguZnJvbVN0cmluZygnMDAwMCcsIDEpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIHN0cmluZyB3aXRoIHVuc3VwcG9ydGVkIHJhZGl4IDIiLCAoKSA9PiB7CiAgICBleHBlY3QoKCkgPT4gewogICAgICEodTEyOC5mcm9tU3RyaW5nKCcxMjM0JywgMzcpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggbnVsbCAxIiwgKCkgPT4gewogICAgZXhwZWN0KCgpID0+IHsKICAgICAhKHUxMjguZnJvbUJ5dGVzKGNoYW5nZXR5cGU8dThbXT4obnVsbCkpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggbnVsbCAyIiwgKCkgPT4gewogICAgZXhwZWN0KCgpID0+IHsKICAgICAgISh1MTI4LmZyb21CeXRlcyhjaGFuZ2V0eXBlPHU4W10+KG51bGwpLCB0cnVlKSk7CiAgICB9KS50b1Rocm93KCk7CiAgfSk7CgogIGl0KCJTaG91bGQgdGhyb3cgZnJvbSBieXRlcyB3aXRoIHdyb25nIGJ5dGUgYXJyYXkgbGVuZ3RoIDEiLCAoKSA9PiB7CiAgICBleHBlY3QoKCkgPT4gewogICAgICEodTEyOC5mcm9tQnl0ZXM8dThbXT4oW10pKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggd3JvbmcgYnl0ZSBhcnJheSBsZW5ndGggMiIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgISh1MTI4LmZyb21CeXRlczx1OFtdPihbXSwgdHJ1ZSkpOwogICAgfSkudG9UaHJvdygpOwogIH0pOwoKICBpdCgiU2hvdWxkIHRocm93IGZyb20gYnl0ZXMgd2l0aCB3cm9uZyBieXRlIGFycmF5IGxlbmd0aCAzIiwgKCkgPT4gewogICAgZXhwZWN0KCgpID0+IHsKICAgICAhKHUxMjguZnJvbUJ5dGVzPHU4W10+KFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgMTddKSk7CiAgICB9KS50b1Rocm93KCk7CiAgfSk7CgogIGl0KCJTaG91bGQgdGhyb3cgZnJvbSBieXRlcyB3aXRoIHdyb25nIGJ5dGUgYXJyYXkgbGVuZ3RoIDQiLCAoKSA9PiB7CiAgICBleHBlY3QoKCkgPT4gewogICAgICEodTEyOC5mcm9tQnl0ZXM8dThbXT4oWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDgsIDksIDEwLCAxMSwgMTIsIDEzLCAxNCwgMTUsIDE2LCAxN10sIHRydWUpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggd3JvbmcgYnl0ZSBhcnJheSBsZW5ndGggNSIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgICEodTEyOC5mcm9tQnl0ZXM8VWludDhBcnJheT4obmV3IFVpbnQ4QXJyYXkoMCkpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggd3JvbmcgYnl0ZSBhcnJheSBsZW5ndGggNiIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgICEodTEyOC5mcm9tQnl0ZXM8VWludDhBcnJheT4obmV3IFVpbnQ4QXJyYXkoMCksIHRydWUpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggd3JvbmcgYnl0ZSBhcnJheSBsZW5ndGggNyIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgIGxldCBhcnIgPSBuZXcgVWludDhBcnJheSgxOCk7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTg7IGkrKykgewogICAgICAgIGFycltpXSA9IDx1OD5pOwogICAgICB9CiAgICAgISh1MTI4LmZyb21CeXRlczxVaW50OEFycmF5PihhcnIpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyBmcm9tIGJ5dGVzIHdpdGggd3JvbmcgYnl0ZSBhcnJheSBsZW5ndGggOCIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgIGxldCBhcnIgPSBuZXcgVWludDhBcnJheSgxOCk7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTg7IGkrKykgewogICAgICAgIGFycltpXSA9IDx1OD5pOwogICAgICB9CiAgICAgISh1MTI4LmZyb21CeXRlczxVaW50OEFycmF5PihhcnIsIHRydWUpKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyB3aGVuIGRpdmlkZSBudW1iZXIgYnkgemVybyIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgIGxldCBhID0gbmV3IHUxMjgoMSwgMSk7CiAgICAgICEoYSAvIHUxMjguWmVybyk7CiAgICB9KS50b1Rocm93KCk7CiAgfSk7CgogIGl0KCJTaG91bGQgdGhyb3cgd2hlbiBtb2QgbnVtYmVyIGJ5IHplcm8iLCAoKSA9PiB7CiAgICBleHBlY3QoKCkgPT4gewogICAgICBsZXQgYSA9IG5ldyB1MTI4KDEsIDEpOwogICAgICAhKGEgJSB1MTI4Llplcm8pOwogICAgfSkudG9UaHJvdygpOwogIH0pOwoKICBpdCgiU2hvdWxkIHRocm93IHdoZW4gZGl2IGRpdmlkZXIgYW5kIGRpdmlzb3IgaXMgemVybyIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgIGxldCBhID0gdTEyOC5aZXJvOwogICAgICAhKGEgLyBhKTsKICAgIH0pLnRvVGhyb3coKTsKICB9KTsKCiAgaXQoIlNob3VsZCB0aHJvdyB3aGVuIG1vZCBkaXZpZGVyIGFuZCBkaXZpc29yIGlzIHplcm8iLCAoKSA9PiB7CiAgICBleHBlY3QoKCkgPT4gewogICAgICBsZXQgYSA9IHUxMjguWmVybzsKICAgICAgIShhICUgYSk7CiAgICB9KS50b1Rocm93KCk7CiAgfSk7CgogIGl0KCJTaG91bGQgdGhyb3cgd2hlbiBkaXZpZGUgbnVtYmVyIGJ5IHplcm8gZm9yIG11bGRpdiIsICgpID0+IHsKICAgIGV4cGVjdCgoKSA9PiB7CiAgICAgIGxldCBhID0gbmV3IHUxMjgoMSwgMSk7CiAgICAgICEodTEyOC5tdWxkaXYoYSwgYSwgdTEyOC5aZXJvKSk7CiAgICB9KS50b1Rocm93KCk7CiAgfSk7Cn0pOwo=",
  "node_modules/as-bignum/assembly/__tests__/u256.spec.ts": "",
  "node_modules/as-bignum/assembly/__tests__/utils.ts": "ZXhwb3J0IGZ1bmN0aW9uIGFycmF5VG9VaW50OEFycmF5KGFycjogdThbXSk6IFVpbnQ4QXJyYXkgewogIGxldCBsZW4gPSBhcnIubGVuZ3RoOwogIGxldCByZXMgPSBuZXcgVWludDhBcnJheShsZW4pOwogIG1lbW9yeS5jb3B5KHJlcy5kYXRhU3RhcnQsIGFyci5kYXRhU3RhcnQsIGxlbik7CiAgcmV0dXJuIHJlczsKfQo=",
  "node_modules/as-bignum/assembly/fixed/fp128.ts": "aW1wb3J0IHsgaTEyOCB9IGZyb20gJy4uL2ludGVnZXIvaTEyOCc7CmltcG9ydCB7IHUxMjggfSBmcm9tICcuLi9pbnRlZ2VyL3UxMjgnOwoKLy8gU3VwcG9ydCBvbmx5IHRoaXMgZnJhY3Rpb25zOgovLyBmcDEyODx1OD4gICA9PiAgIDggYml0cyAofiAyICBkZWNpbWFsIGRpZ2l0cykKLy8gZnAxMjg8dTE2PiAgPT4gIDE2IGJpdHMgKH4gNCAgZGVjaW1hbCBkaWdpdHMpCi8vIGZwMTI4PHUyND4gID0+ICAyNCBiaXRzICh+IDcgIGRlY2ltYWwgZGlnaXRzKQovLyBmcDEyODx1MzI+ICA9PiAgMzIgYml0cyAofiA5ICBkZWNpbWFsIGRpZ2l0cykKLy8gZnAxMjg8dTQwPiAgPT4gIDQwIGJpdHMgKH4gMTIgZGVjaW1hbCBkaWdpdHMpCi8vIGZwMTI4PHU0OD4gID0+ICA0OCBiaXRzICh+IDE0IGRlY2ltYWwgZGlnaXRzKQovLyBmcDEyODx1NTY+ICA9PiAgNTYgYml0cyAofiAxNiBkZWNpbWFsIGRpZ2l0cykKLy8gZnAxMjg8dTY0PiAgPT4gIDY0IGJpdHMgKH4gMTkgZGVjaW1hbCBkaWdpdHMpCi8vIGZwMTI4PHU3Mj4gID0+ICA3MiBiaXRzICh+IDIxIGRlY2ltYWwgZGlnaXRzKQovLyBmcDEyODx1ODA+ICA9PiAgODAgYml0cyAofiAyNCBkZWNpbWFsIGRpZ2l0cykKLy8gZnAxMjg8dTg4PiAgPT4gIDg4IGJpdHMgKH4gMjYgZGVjaW1hbCBkaWdpdHMpCi8vIGZwMTI4PHU5Nj4gID0+ICA5NiBiaXRzICh+IDI4IGRlY2ltYWwgZGlnaXRzKQovLyBmcDEyODx1MTA0PiA9PiAxMDQgYml0cyAofiAzMSBkZWNpbWFsIGRpZ2l0cykKLy8gZnAxMjg8dTExMj4gPT4gMTEyIGJpdHMgKH4gMzMgZGVjaW1hbCBkaWdpdHMpCi8vIGZwMTI4PHUxMjA+ID0+IDEyMCBiaXRzICh+IDM2IGRlY2ltYWwgZGlnaXRzKQoKZXhwb3J0IGNsYXNzIGZwMTI4PFE+IHsKCiAgc3RhdGljIHJlYWRvbmx5IFplcm86IGZwMTI4PFE+ID0gbmV3IGZwMTI4PFE+KDApOwogIHN0YXRpYyByZWFkb25seSBPbmU6ICBmcDEyODxRPiA9IG5ldyBmcDEyODxRPigxKTsKCiAgcHJvdGVjdGVkIHZhbHVlOiBpMTI4ID0gaTEyOC5aZXJvOwoKICBjb25zdHJ1Y3RvcihsbzogdTY0ID0gMCwgaGk6IGk2NCA9IDApIHsKICAgIHRoaXMudmFsdWUubG8gPSBsbzsKICAgIHRoaXMudmFsdWUuaGkgPSBoaTsKICB9CgogIEBpbmxpbmUKICBnZXQgaW50Qml0cygpOiBpMzIgewogICAgcmV0dXJuIDEyOCAtIHRoaXMuZnJhY3RCaXRzOwogIH0KCiAgQGlubGluZQogIGdldCBmcmFjdEJpdHMoKTogaTMyIHsKICAgIGlmIChpc1JlZmVyZW5jZTxRPigpKSB7CiAgICAgIHJldHVybiA4ICogb2Zmc2V0b2Y8UT4oKTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiA4ICogc2l6ZW9mPFE+KCk7CiAgICB9CiAgfQoKICBAaW5saW5lCiAgZ2V0IGludCgpOiBpMTI4IHsKICAgIHJldHVybiB0aGlzLnZhbHVlID4+PiB0aGlzLmZyYWN0Qml0czsKICB9CgogIEBpbmxpbmUKICBnZXQgZnJhY3QoKTogdTEyOCB7CiAgICByZXR1cm4gKGNoYWdldHlwZTx1MTI4Pih0aGlzLnZhbHVlKSkgPDwgdGhpcy5pbnRCaXRzOwogIH0KCiAgLy8gVE9ETwp9Cg==",
  "node_modules/as-bignum/assembly/fixed/fp256.ts": "aW1wb3J0IHsgaTI1NiB9IGZyb20gJy4uL2ludGVnZXIvaTI1Nic7CgpleHBvcnQgY2xhc3MgZnAyNTY8UT4gewoKICBjb25zdHJ1Y3RvcihwdWJsaWMgdmFsdWU6IGkyNTYgPSBpMjU2Llplcm8pIHt9CgogIC8vIFRPRE8KfQo=",
  "node_modules/as-bignum/assembly/fixed/index.ts": "aW1wb3J0IHsgdTEyOCAgfSBmcm9tICIuLi9pbnRlZ2VyL3UxMjgiOwppbXBvcnQgeyBmcDEyOCB9IGZyb20gIi4vZnAxMjgiOwppbXBvcnQgeyBmcDI1NiB9IGZyb20gIi4vZnAyNTYiOwppbXBvcnQgewogIHUyNCwgdTQwLCB1NDgsIHU1NiwgdTcyLCB1ODAsIHU4OCwgdTk2LAogIHUxMDQsIHUxMTIsIHUxMjAsIHUxMzYsIHUxNDQsIHUxNTIsIHUxNjAsCn0gZnJvbSAnLi90eXBlcyc7CgpleHBvcnQgdHlwZSBmcDEyOHg4ICA9IGZwMTI4PHU4PjsKZXhwb3J0IHR5cGUgZnAxMjh4MTYgPSBmcDEyODx1MTY+OwpleHBvcnQgdHlwZSBmcDEyOHgyNCA9IGZwMTI4PHUyND47CmV4cG9ydCB0eXBlIGZwMTI4eDMyID0gZnAxMjg8dTMyPjsKZXhwb3J0IHR5cGUgZnAxMjh4NDAgPSBmcDEyODx1NDA+OwpleHBvcnQgdHlwZSBmcDEyOHg0OCA9IGZwMTI4PHU0OD47CmV4cG9ydCB0eXBlIGZwMTI4eDU2ID0gZnAxMjg8dTU2PjsKZXhwb3J0IHR5cGUgZnAxMjh4NjQgPSBmcDEyODx1NjQ+OwpleHBvcnQgdHlwZSBmcDEyOHg3MiA9IGZwMTI4PHU3Mj47CmV4cG9ydCB0eXBlIGZwMTI4eDgwID0gZnAxMjg8dTgwPjsKCmV4cG9ydCB0eXBlIGZwMjU2eDggICA9IGZwMjU2PHU4PjsKZXhwb3J0IHR5cGUgZnAyNTZ4MTYgID0gZnAyNTY8dTE2PjsKZXhwb3J0IHR5cGUgZnAyNTZ4MjQgID0gZnAyNTY8dTI0PjsKZXhwb3J0IHR5cGUgZnAyNTZ4MzIgID0gZnAyNTY8dTMyPjsKZXhwb3J0IHR5cGUgZnAyNTZ4NDAgID0gZnAyNTY8dTQwPjsKZXhwb3J0IHR5cGUgZnAyNTZ4NDggID0gZnAyNTY8dTQ4PjsKZXhwb3J0IHR5cGUgZnAyNTZ4NTYgID0gZnAyNTY8dTU2PjsKZXhwb3J0IHR5cGUgZnAyNTZ4NjQgID0gZnAyNTY8dTY0PjsKZXhwb3J0IHR5cGUgZnAyNTZ4NzIgID0gZnAyNTY8dTcyPjsKZXhwb3J0IHR5cGUgZnAyNTZ4ODAgID0gZnAyNTY8dTgwPjsKZXhwb3J0IHR5cGUgZnAyNTZ4ODggID0gZnAyNTY8dTg4PjsKZXhwb3J0IHR5cGUgZnAyNTZ4OTYgID0gZnAyNTY8dTk2PjsKZXhwb3J0IHR5cGUgZnAyNTZ4MTA0ID0gZnAyNTY8dTEwND47CmV4cG9ydCB0eXBlIGZwMjU2eDExMiA9IGZwMjU2PHUxMTI+OwpleHBvcnQgdHlwZSBmcDI1NngxMjAgPSBmcDI1Njx1MTIwPjsKZXhwb3J0IHR5cGUgZnAyNTZ4MTI4ID0gZnAyNTY8dTEyOD47CmV4cG9ydCB0eXBlIGZwMjU2eDEzNiA9IGZwMjU2PHUxMzY+OwpleHBvcnQgdHlwZSBmcDI1NngxNDQgPSBmcDI1Njx1MTQ0PjsKZXhwb3J0IHR5cGUgZnAyNTZ4MTUyID0gZnAyNTY8dTE1Mj47CmV4cG9ydCB0eXBlIGZwMjU2eDE2MCA9IGZwMjU2PHUxNjA+OwoKZXhwb3J0IHsgZnAxMjgsIGZwMjU2IH07Cg==",
  "node_modules/as-bignum/assembly/fixed/safe/fp128.ts": "ZXhwb3J0IG5hbWVzcGFjZSBzYWZlIHsKICAvLyBUT0RPCn0K",
  "node_modules/as-bignum/assembly/fixed/safe/fp256.ts": "ZXhwb3J0IG5hbWVzcGFjZSBzYWZlIHsKICAvLyBUT0RPCn0K",
  "node_modules/as-bignum/assembly/fixed/types.ts": "Ly8gdTgKLy8gdTE2CgpleHBvcnQgY2xhc3MgdTI0IHsKICBwcml2YXRlIF8wOiB1MTYKICBwcml2YXRlIF8xOiB1OAp9CgovLyB1MzIKCmV4cG9ydCBjbGFzcyB1NDAgewogIHByaXZhdGUgXzA6IHUzMgogIHByaXZhdGUgXzE6IHU4Cn0KCmV4cG9ydCBjbGFzcyB1NDggewogIHByaXZhdGUgXzA6IHUzMgogIHByaXZhdGUgXzE6IHUxNgp9CgpleHBvcnQgY2xhc3MgdTU2IHsKICBwcml2YXRlIF8wOiB1MzIKICBwcml2YXRlIF8xOiB1MjQKfQoKLy8gdTY0CgpleHBvcnQgY2xhc3MgdTcyIHsKICBwcml2YXRlIF8wOiB1NjQKICBwcml2YXRlIF8xOiB1OAp9CgpleHBvcnQgY2xhc3MgdTgwIHsKICBwcml2YXRlIF8wOiB1NjQKICBwcml2YXRlIF8xOiB1MTYKfQoKZXhwb3J0IGNsYXNzIHU4OCB7CiAgcHJpdmF0ZSBfMDogdTY0CiAgcHJpdmF0ZSBfMTogdTI0Cn0KCmV4cG9ydCBjbGFzcyB1OTYgewogIHByaXZhdGUgXzA6IHU2NAogIHByaXZhdGUgXzE6IHUzMgp9CgpleHBvcnQgY2xhc3MgdTEwNCB7CiAgcHJpdmF0ZSBfMDogdTY0CiAgcHJpdmF0ZSBfMTogdTQwCn0KCmV4cG9ydCBjbGFzcyB1MTEyIHsKICBwcml2YXRlIF8wOiB1NjQKICBwcml2YXRlIF8xOiB1NDgKfQoKZXhwb3J0IGNsYXNzIHUxMjAgewogIHByaXZhdGUgXzA6IHUxMTIKICBwcml2YXRlIF8xOiB1OAp9CgovLyB1MTI4CgpleHBvcnQgY2xhc3MgdTEzNiB7CiAgcHJpdmF0ZSBfMDogdTEyMAogIHByaXZhdGUgXzE6IHUxNgp9CgpleHBvcnQgY2xhc3MgdTE0NCB7CiAgcHJpdmF0ZSBfMDogdTEzNgogIHByaXZhdGUgXzE6IHU4Cn0KCmV4cG9ydCBjbGFzcyB1MTUyIHsKICBwcml2YXRlIF8wOiB1MTQ0CiAgcHJpdmF0ZSBfMTogdTgKfQoKZXhwb3J0IGNsYXNzIHUxNjAgewogIHByaXZhdGUgXzA6IHUxNTIKICBwcml2YXRlIF8xOiB1OAp9CgpleHBvcnQgY2xhc3MgdTE2OCB7CiAgcHJpdmF0ZSBfMDogdTE2MAogIHByaXZhdGUgXzE6IHU4Cn0KCmV4cG9ydCBjbGFzcyB1MTc2IHsKICBwcml2YXRlIF8wOiB1MTY4CiAgcHJpdmF0ZSBfMTogdTgKfQoKZXhwb3J0IGNsYXNzIHUxODQgewogIHByaXZhdGUgXzA6IHUxNzYKICBwcml2YXRlIF8xOiB1OAp9CgpleHBvcnQgY2xhc3MgdTE5MiB7CiAgcHJpdmF0ZSBfMDogdTE4NAogIHByaXZhdGUgXzE6IHU4Cn0K",
  "node_modules/as-bignum/assembly/globals.ts": "",
  "node_modules/as-bignum/assembly/index.ts": "ZXhwb3J0ICogZnJvbSAiLi9pbnRlZ2VyIjsK",
  "node_modules/as-bignum/assembly/integer/i128.ts": "",
  "node_modules/as-bignum/assembly/integer/i256.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJy4vdTI1Nic7CgpleHBvcnQgY2xhc3MgaTI1NiB7CgogIEBpbmxpbmUgc3RhdGljIGdldCBaZXJvKCk6IGkyNTYgeyByZXR1cm4gbmV3IGkyNTYoKTsgfQogIEBpbmxpbmUgc3RhdGljIGdldCBPbmUoKTogIGkyNTYgeyByZXR1cm4gbmV3IGkyNTYoMSk7IH0KICBAaW5saW5lIHN0YXRpYyBnZXQgTWluKCk6ICBpMjU2IHsgcmV0dXJuIG5ldyBpMjU2KDAsIDAsIDAsIDB4ODAwMDAwMDAwMDAwMDAwMCk7IH0KICBAaW5saW5lIHN0YXRpYyBnZXQgTWF4KCk6ICBpMjU2IHsgcmV0dXJuIG5ldyBpMjU2KHU2NC5NQVhfVkFMVUUsIHU2NC5NQVhfVkFMVUUsIHU2NC5NQVhfVkFMVUUsIDB4N0ZGRkZGRkZGRkZGRkZGRik7IH0KCiAgY29uc3RydWN0b3IoCiAgICBwdWJsaWMgbG8xOiBpNjQgPSAwLAogICAgcHVibGljIGxvMjogaTY0ID0gMCwKICAgIHB1YmxpYyBoaTE6IGk2NCA9IDAsCiAgICBwdWJsaWMgaGkyOiBpNjQgPSAwLAogICkge30KCiAgQGlubGluZQogIGlzTmVnKCk6IGJvb2wgewogICAgcmV0dXJuIDxib29sPih0aGlzLmhpMiA+Pj4gNjMpOwogIH0KCiAgQGlubGluZQogIGlzWmVybygpOiBib29sIHsKICAgIHJldHVybiAhKHRoaXMubG8xIHwgdGhpcy5sbzIgfCB0aGlzLmhpMSB8IHRoaXMuaGkyKTsKICB9CgogIEBpbmxpbmUgQG9wZXJhdG9yLnByZWZpeCgnIScpCiAgc3RhdGljIGlzRW1wdHkodmFsdWU6IGkyNTYpOiBib29sIHsKICAgIHJldHVybiAhdmFsdWUuaXNaZXJvKCk7CiAgfQoKICAvKgogIEBpbmxpbmUKICBzdGF0aWMgYWJzKHZhbHVlOiBpMTI4KTogaTEyOCB7CiAgICByZXR1cm4gdmFsdWUgPCAwID8gdmFsdWUubmVnKCkgOiB2YWx1ZTsKICB9CiAgKi8KCiAgLy8gVE9ETwp9Cg==",
  "node_modules/as-bignum/assembly/integer/index.ts": "ZXhwb3J0ICogZnJvbSAiLi9pMTI4IjsKZXhwb3J0ICogZnJvbSAiLi91MTI4IjsKZXhwb3J0ICogZnJvbSAiLi91MjU2IjsKZXhwb3J0ICogZnJvbSAiLi9zYWZlIjsK",
  "node_modules/as-bignum/assembly/integer/safe/i128.ts": "aW1wb3J0IHsgaTEyOCBhcyBJMTI4IH0gZnJvbSAnLi4vaTEyOCc7CgoKY2xhc3MgaTEyOCBleHRlbmRzIEkxMjggewogIC8vIFRPRE8KfQoKZXhwb3J0IHsgaTEyOCBhcyBpMTI4U2FmZSB9Owo=",
  "node_modules/as-bignum/assembly/integer/safe/i256.ts": "aW1wb3J0IHsgaTI1NiBhcyBJMjU2IH0gZnJvbSAnLi4vaTI1Nic7CgovLyBleHBvcnQgbmFtZXNwYWNlIHNhZmUgewpjbGFzcyBpMjU2IGV4dGVuZHMgSTI1NiB7CiAgLy8gVE9ETwp9CgpleHBvcnQgeyBpMjU2IGFzIGkyNTZTYWZlIH07Cg==",
  "node_modules/as-bignum/assembly/integer/safe/i64.ts": "Ly8gVE9ETwo=",
  "node_modules/as-bignum/assembly/integer/safe/index.ts": "Ly8gZXhwb3J0ICogZnJvbSAiLi91NjQiOwpleHBvcnQgKiBmcm9tICIuL2kxMjgiOwpleHBvcnQgKiBmcm9tICIuL2kyNTYiOwovLyBleHBvcnQgKiBmcm9tICIuL3U2NCI7CmV4cG9ydCAqIGZyb20gIi4vdTEyOCI7CmV4cG9ydCAqIGZyb20gIi4vdTI1NiI7",
  "node_modules/as-bignum/assembly/integer/safe/u128.ts": "aW1wb3J0IHsgdTI1NlNhZmUgYXMgdTI1NiB9IGZyb20gJy4vdTI1Nic7CmltcG9ydCB7IGkxMjhTYWZlIH0gZnJvbSAnLi9pMTI4JzsKaW1wb3J0IHsgaTI1NlNhZmUgfSBmcm9tICcuL2kyNTYnOwppbXBvcnQgeyB1MTI4IGFzIFUxMjggfSBmcm9tICcuLi91MTI4JzsKaW1wb3J0IHsgdTI1NiBhcyBVMjU2IH0gZnJvbSAnLi4vdTI1Nic7CmltcG9ydCB7IGkxMjggYXMgSTEyOCB9IGZyb20gJy4uL2kxMjgnOwppbXBvcnQgeyBpMjU2IGFzIEkyNTYgfSBmcm9tICcuLi9pMjU2JzsKaW1wb3J0IHsgaXNQb3dlck92ZXJmbG93MTI4LCBhdG91MTI4IH0gZnJvbSAnLi4vLi4vdXRpbHMnOwoKLy8gQGV4dGVybmFsKCJzYWZlX3UxMjguc3BlYy5hcyIsICJsb2dTdHIiKQovLyBkZWNsYXJlIGZ1bmN0aW9uIGxvZ1N0cihzdHI6IHN0cmluZyk6IHZvaWQ7CgovLyBAZXh0ZXJuYWwoInNhZmVfdTEyOC5zcGVjLmFzIiwgImxvZ0Y2NCIpCi8vIGRlY2xhcmUgZnVuY3Rpb24gbG9nRjY0KHY6IGY2NCk6IHZvaWQ7CgovLyBleHBvcnQgbmFtZXNwYWNlIHNhZmUgewpjbGFzcyB1MTI4IGV4dGVuZHMgVTEyOCB7CgogIEBpbmxpbmUgc3RhdGljIGdldCBaZXJvKCk6IHUxMjggeyByZXR1cm4gbmV3IHUxMjgoKTsgfQogIEBpbmxpbmUgc3RhdGljIGdldCBPbmUoKTogIHUxMjggeyByZXR1cm4gbmV3IHUxMjgoMSk7IH0KICBAaW5saW5lIHN0YXRpYyBnZXQgTWluKCk6ICB1MTI4IHsgcmV0dXJuIG5ldyB1MTI4KCk7IH0KICBAaW5saW5lIHN0YXRpYyBnZXQgTWF4KCk6ICB1MTI4IHsgcmV0dXJuIG5ldyB1MTI4KC0xLCAtMSk7IH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tU3RyaW5nKHZhbHVlOiBzdHJpbmcsIHJhZGl4OiBpMzIgPSAxMCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oYXRvdTEyOCh2YWx1ZSwgcmFkaXgpKTsKICB9CgogIEBpbmxpbmUKICBzdGF0aWMgZnJvbUkyNTYodmFsdWU6IEkyNTYpOiB1MTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KFUxMjguZnJvbUkyNTYodmFsdWUpKTsKICB9CgogIEBpbmxpbmUKICBzdGF0aWMgZnJvbUkyNTZTYWZlKHZhbHVlOiBpMjU2U2FmZSk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tSTI1Nih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVTI1Nih2YWx1ZTogdTI1Nik6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tVTI1Nih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tSTEyOCh2YWx1ZTogSTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tSTEyOCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tSTEyOFNhZmUodmFsdWU6IGkxMjhTYWZlKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21JMTI4KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21VMTI4KHZhbHVlOiB1MTI4KTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21VMTI4KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21JNjQodmFsdWU6IGk2NCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tSTY0KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21VNjQodmFsdWU6IHU2NCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tVTY0KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21GNjQodmFsdWU6IGY2NCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tRjY0KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21GMzIodmFsdWU6IGYzMik6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tRjMyKHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21JMzIodmFsdWU6IGkzMik6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tSTMyKHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21VMzIodmFsdWU6IHUzMik6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5mcm9tVTMyKHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21Cb29sKHZhbHVlOiBib29sKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21Cb29sKHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21CaXRzKGxvMTogdTMyLCBsbzI6IHUzMiwgaGkxOiB1MzIsIGhpMjogdTMyKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21CaXRzKGxvMSwgbG8yLCBoaTEsIGhpMikpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tQnl0ZXM8VD4oYXJyYXk6IFQsIGJpZ0VuZGlhbjogYm9vbCA9IGZhbHNlKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21CeXRlczxUPihhcnJheSwgYmlnRW5kaWFuKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21CeXRlc0xFKGFycmF5OiB1OFtdKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21CeXRlc0xFKGFycmF5KSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21CeXRlc0JFKGFycmF5OiB1OFtdKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21CeXRlc0JFKGFycmF5KSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21VaW50OEFycmF5TEUoYXJyYXk6IFVpbnQ4QXJyYXkpOiB1MTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KFUxMjguZnJvbVVpbnQ4QXJyYXlMRShhcnJheSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVWludDhBcnJheUJFKGFycmF5OiBVaW50OEFycmF5KTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LmZyb21VaW50OEFycmF5QkUoYXJyYXkpKTsKICB9CgogIC8qKgogICAqIENyZWF0ZSAxMjgtYml0IHVuc2lnbmVkIGludGVnZXIgZnJvbSBnZW5lcmljIHR5cGUgVAogICAqIEBwYXJhbSAgdmFsdWUKICAgKiBAcmV0dXJucyAxMjgtYml0IHVuc2lnbmVkIGludGVnZXIKICAgKi8KICBAaW5saW5lCiAgc3RhdGljIGZyb208VD4odmFsdWU6IFQpOiB1MTI4IHsKICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgYm9vbCkgICAgICAgcmV0dXJuIHUxMjguZnJvbVU2NCg8dTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgaTgpICAgICAgICAgcmV0dXJuIHUxMjguZnJvbUk2NCg8aTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgdTgpICAgICAgICAgcmV0dXJuIHUxMjguZnJvbVU2NCg8dTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgaTE2KSAgICAgICAgcmV0dXJuIHUxMjguZnJvbUk2NCg8aTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgdTE2KSAgICAgICAgcmV0dXJuIHUxMjguZnJvbVU2NCg8dTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgaTMyKSAgICAgICAgcmV0dXJuIHUxMjguZnJvbUk2NCg8aTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgdTMyKSAgICAgICAgcmV0dXJuIHUxMjguZnJvbVU2NCg8dTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgaTY0KSAgICAgICAgcmV0dXJuIHUxMjguZnJvbUk2NCg8aTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgdTY0KSAgICAgICAgcmV0dXJuIHUxMjguZnJvbVU2NCg8dTY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgZjMyKSAgICAgICAgcmV0dXJuIHUxMjguZnJvbUY2NCg8ZjY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgZjY0KSAgICAgICAgcmV0dXJuIHUxMjguZnJvbUY2NCg8ZjY0PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgSTEyOCkgICAgICAgcmV0dXJuIHUxMjguZnJvbUkxMjgoPEkxMjg+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpMTI4U2FmZSkgICByZXR1cm4gdTEyOC5mcm9tSTEyOCg8aTEyOFNhZmU+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MTI4KSAgICAgICByZXR1cm4gdTEyOC5mcm9tVTEyOCg8dTEyOD52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFUxMjgpICAgICAgIHJldHVybiB1MTI4LmZyb21VMTI4KDxVMTI4PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgSTI1NikgICAgICAgcmV0dXJuIHUxMjguZnJvbUkxMjgoPEkyNTY+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpMjU2U2FmZSkgICByZXR1cm4gdTEyOC5mcm9tSTI1Nig8aTI1NlNhZmU+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MjU2KSAgICAgICByZXR1cm4gdTEyOC5mcm9tVTI1Nig8dTI1Nj52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHU4W10pICAgICAgIHJldHVybiB1MTI4LmZyb21CeXRlcyg8dThbXT52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHJldHVybiB1MTI4LmZyb21CeXRlcyg8VWludDhBcnJheT52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykgICAgIHJldHVybiB1MTI4LmZyb21TdHJpbmcoPHN0cmluZz52YWx1ZSk7CiAgICBlbHNlIHRocm93IG5ldyBUeXBlRXJyb3IoIlVuc3VwcG9ydGVkIGdlbmVyaWMgdHlwZSIpOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IoJ3wnKQogIHN0YXRpYyBvcihhOiB1MTI4LCBiOiB1MTI4KTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4Lm9yKGEsIGIpKTsKICB9CgogIEBpbmxpbmUgQG9wZXJhdG9yKCdeJykKICBzdGF0aWMgeG9yKGE6IHUxMjgsIGI6IHUxMjgpOiB1MTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KFUxMjgueG9yKGEsIGIpKTsKICB9CgogIEBpbmxpbmUgQG9wZXJhdG9yKCcmJykKICBzdGF0aWMgYW5kKGE6IHUxMjgsIGI6IHUxMjgpOiB1MTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KFUxMjguYW5kKGEsIGIpKTsKICB9CgogIEBpbmxpbmUgQG9wZXJhdG9yKCc8PCcpCiAgc3RhdGljIHNobCh2YWx1ZTogdTEyOCwgc2hpZnQ6IGkzMik6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5zaGwodmFsdWUsIHNoaWZ0KSk7CiAgfQoKICBAaW5saW5lIEBvcGVyYXRvcignPj4nKQogIHN0YXRpYyBzaHIodmFsdWU6IHUxMjgsIHNoaWZ0OiBpMzIpOiB1MTI4IHsKICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5zaHIodmFsdWUsIHNoaWZ0KSk7CiAgfQoKICBAaW5saW5lIEBvcGVyYXRvcignPj4+JykKICBzdGF0aWMgc2hyX3UodmFsdWU6IHUxMjgsIHNoaWZ0OiBpMzIpOiB1MTI4IHsKICAgIHJldHVybiB1MTI4LnNocih2YWx1ZSwgc2hpZnQpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyByb3RsKHZhbHVlOiB1MTI4LCBzaGlmdDogaTMyKTogdTEyOCB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LnJvdGwodmFsdWUsIHNoaWZ0KSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIHJvdHIodmFsdWU6IHUxMjgsIHNoaWZ0OiBpMzIpOiB1MTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KFUxMjgucm90cih2YWx1ZSwgc2hpZnQpKTsKICB9CgogIEBvcGVyYXRvci5wcmVmaXgoJysrJykKICBwcmVJbmMoKTogdGhpcyB7CiAgICBpZiAoKHRoaXMubG8gJiB0aGlzLmhpKSA9PSA8dTY0Pi0xKSB7IC8vIGlmIHRoaXMgPT0gbWF4CiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdPdmVyZmxvdyBkdXJpbmcgcHJlZml4IGluY3JlbWVudGluZycpOwogICAgfQogICAgc3VwZXIucHJlSW5jKCk7CiAgICByZXR1cm4gdGhpczsKICB9CgogIEBvcGVyYXRvci5wcmVmaXgoJy0tJykKICBwcmVEZWMoKTogdGhpcyB7CiAgICBpZiAoKHRoaXMubG8gfCB0aGlzLmhpKSA9PSAwKSB7IC8vIGlmIHRoaXMgPT0gMAogICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVW5kZXJmbG93IGR1cmluZyBwcmVmaXggZGVjcmVtZW50aW5nJyk7CiAgICB9CiAgICBzdXBlci5wcmVEZWMoKTsKICAgIHJldHVybiB0aGlzOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IucG9zdGZpeCgnKysnKQogIHBvc3RJbmMoKTogdTEyOCB7CiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLnByZUluYygpOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IucG9zdGZpeCgnLS0nKQogIHBvc3REZWMoKTogdTEyOCB7CiAgICByZXR1cm4gdGhpcy5jbG9uZSgpLnByZURlYygpOwogIH0KCiAgQG9wZXJhdG9yKCcrJykKICBzdGF0aWMgYWRkKGE6IHUxMjgsIGI6IHUxMjgpOiB1MTI4IHsKICAgIHZhciBibCA9IGIubG87CiAgICB2YXIgbG8gPSBhLmxvICsgYmw7CiAgICB2YXIgYyAgPSB1NjQobG8gPCBibCk7CiAgICB2YXIgeCAgPSBhLmhpOwogICAgdmFyIHkgID0gYi5oaTsKICAgIHZhciBoaSA9IHggKyB5ICsgYzsKICAgIGlmICgoKGhpIF4geCkgJiAoaGkgXiB5KSkgPCBjKSB7CiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdPdmVyZmxvdyBkdXJpbmcgYWRkaXNpb24nKTsKICAgIH0KICAgIHJldHVybiBuZXcgdTEyOChsbywgaGkpOwogIH0KCiAgQG9wZXJhdG9yKCctJykKICBzdGF0aWMgc3ViKGE6IHUxMjgsIGI6IHUxMjgpOiB1MTI4IHsKICAgIGlmIChhIDwgYikgdGhyb3cgbmV3IFJhbmdlRXJyb3IoIlVuZGVyZmxvdyBkdXJpbmcgc3VidHJhY3Rpb24iKTsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KAogICAgICBVMTI4LnN1YihjaGFuZ2V0eXBlPFUxMjg+KGEpLCBjaGFuZ2V0eXBlPFUxMjg+KGIpKQogICAgKTsKICB9CgogIEBvcGVyYXRvcignKicpCiAgc3RhdGljIG11bChhOiB1MTI4LCBiOiB1MTI4KTogdTEyOCB7CiAgICBpZiAoYS5pc1plcm8oKSB8fCBiLmlzWmVybygpKSB7CiAgICAgIHJldHVybiB1MTI4Llplcm87CiAgICB9CiAgICB2YXIgcyA9IHUxMjguY2x6KGEpICsgdTEyOC5jbHooYik7CiAgICBpZiAocyA8IDEyNykgeyAvLyBkZWZlbml0ZWx5IG92ZXJmbG93CiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCJPdmVyZmxvdyBkdXJpbmcgbXVsdGlwbGljYXRpb24iKTsKICAgIH0KICAgIGlmIChzID09IDEyNykgeyAvLyB0aGlzIG1heSBvdmVyZmxvdyBvciBub3QuIE5lZWQgZXh0cmEgY2hlY2tzLgogICAgICAvLyBTZWUgSGFja2VyJ3MgRGVsaWdodCwgMm5kIEVkaXRpb24uIDLigJMxMyBPdmVyZmxvdyBEZXRlY3Rpb24KICAgICAgLy8gQHRzLWlnbm9yZQogICAgICBsZXQgdG1wID0gVTEyOC5tdWwoY2hhbmdldHlwZTxVMTI4PihhKSwgY2hhbmdldHlwZTxVMTI4PihiKSA+PiAxKTsKICAgICAgLy8gQHRzLWlnbm9yZQogICAgICBpZiAodG1wLmhpID4+PiA2MykgeyAvLyAoc2lnbmVkKXQgPCAwCiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoIk92ZXJmbG93IGR1cmluZyBtdWx0aXBsaWNhdGlvbiIpOwogICAgICB9CiAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgbGV0IHogPSB0bXAgPDwgMTsKICAgICAgaWYgKGIubG8gJiAxKSB7CiAgICAgICAgLy8gQHRzLWlnbm9yZQogICAgICAgIHogKz0gYTsKICAgICAgICAvLyBAdHMtaWdub3JlCiAgICAgICAgaWYgKHogPCBhKSB7CiAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiT3ZlcmZsb3cgZHVyaW5nIG11bHRpcGxpY2F0aW9uIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBjaGFuZ2V0eXBlPHUxMjg+KHopOwogICAgfQogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oCiAgICAgIFUxMjgubXVsKGNoYW5nZXR5cGU8VTEyOD4oYSksIGNoYW5nZXR5cGU8VTEyOD4oYikpCiAgICApOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IoJy8nKQogIHN0YXRpYyBkaXYoYTogdTEyOCwgYjogdTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5kaXYoYSwgYikpOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IoJyoqJykKICBzdGF0aWMgcG93KGJhc2U6IHUxMjgsIGV4cG9uZW50OiBpMzIpOiB1MTI4IHsKICAgIGlmIChpc1Bvd2VyT3ZlcmZsb3cxMjgoYmFzZSwgZXhwb25lbnQpKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiT3ZlcmZsb3cgZHVyaW5nIGV4cG9uZW50aWF0aW9uIik7CiAgICB9CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4LnBvdyhjaGFuZ2V0eXBlPFUxMjg+KGJhc2UpLCBleHBvbmVudCkpOwogIH0KCiAgQGlubGluZSBAb3BlcmF0b3IoJyUnKQogIHN0YXRpYyByZW0oYTogdTEyOCwgYjogdTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5yZW0oYSwgYikpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBkaXYxMCh2YWx1ZTogdTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5kaXYxMCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyByZW0xMCh2YWx1ZTogdTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5yZW0xMCh2YWx1ZSkpOwogIH0KCiAgLy8gY29tcHV0ZSBmbG9vcihzcXJ0KHgpKQogIEBpbmxpbmUKICBzdGF0aWMgc3FydCh2YWx1ZTogdTEyOCk6IHUxMjggewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTEyOD4oVTEyOC5zcXJ0KHZhbHVlKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIG11bGRpdihudW1iZXI6IHUxMjgsIG51bWVyYXRvcjogdTEyOCwgZGVub21pbmF0b3I6IHUxMjgpOiB1MTI4IHsKICAgIC8vIFRPRE86IE5lZWQgaW1wbGVtZW50IG92ZXJmbG93IGNoZWNraW5nCiAgICByZXR1cm4gY2hhbmdldHlwZTx1MTI4PihVMTI4Lm11bGRpdihudW1iZXIsIG51bWVyYXRvciwgZGVub21pbmF0b3IpKTsKICB9CgogIEBpbmxpbmUKICB0b1VuY2hlY2tlZCgpOiBVMTI4IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPFUxMjg+KHRoaXMpOwogIH0KCiAgQGlubGluZQogIGFzPFQ+KCk6IFQgewogICAgdmFyIGR1bW15OiBUOwoKICAgICAgICAgaWYgKGR1bW15IGluc3RhbmNlb2YgYm9vbCkgICAgICAgcmV0dXJuIDxUPnRoaXMudG9Cb29sKCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGk4KSAgICAgICAgIHJldHVybiA8VD50aGlzLnRvSTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIHU4KSAgICAgICAgIHJldHVybiA8VD50aGlzLnRvVTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGkxNikgICAgICAgIHJldHVybiA8VD50aGlzLnRvSTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIHUxNikgICAgICAgIHJldHVybiA8VD50aGlzLnRvVTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGkzMikgICAgICAgIHJldHVybiA8VD50aGlzLnRvSTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGk2NCkgICAgICAgIHJldHVybiA8VD50aGlzLnRvSTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIHUzMikgICAgICAgIHJldHVybiA8VD50aGlzLnRvVTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIHU2NCkgICAgICAgIHJldHVybiA8VD50aGlzLnRvVTY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGYzMikgICAgICAgIHJldHVybiA8VD50aGlzLnRvRjY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGY2NCkgICAgICAgIHJldHVybiA8VD50aGlzLnRvRjY0KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIGkxMjgpICAgICAgIHJldHVybiA8VD50aGlzLnRvSTEyOCgpOwogICAgZWxzZSBpZiAoZHVtbXkgaW5zdGFuY2VvZiB1MTI4KSAgICAgICByZXR1cm4gPFQ+dGhpczsKICAgIGVsc2UgaWYgKGR1bW15IGluc3RhbmNlb2YgVTEyOCkgICAgICAgcmV0dXJuIDxUPnRoaXMudG9VbmNoZWNrZWQoKTsKICAgIGVsc2UgaWYgKGR1bW15IGluc3RhbmNlb2YgdTI1NikgICAgICAgcmV0dXJuIDxUPnRoaXMudG9VMjU2KCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIFUyNTYpICAgICAgIHJldHVybiA8VD50aGlzLnRvVTI1NigpOwogICAgZWxzZSBpZiAoZHVtbXkgaW5zdGFuY2VvZiB1OFtdKSAgICAgICByZXR1cm4gPFQ+dGhpcy50b0J5dGVzKCk7CiAgICBlbHNlIGlmIChkdW1teSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHJldHVybiA8VD50aGlzLnRvVWludDhBcnJheSgpOwogICAgZWxzZSBpZiAoZHVtbXkgaW5zdGFuY2VvZiBTdHJpbmcpICAgICByZXR1cm4gPFQ+dGhpcy50b1N0cmluZygpOwogICAgZWxzZSB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbnN1cHBvcnRlZCBnZW5lcmljIHR5cGUnKTsKICB9CgogIC8vCiAgLy8gdW5zaWduZWQgZGl2IGFuZCByZW0gYWxyZWFkeSBjb250YWluIHRyYXBzCiAgLy8KCiAgQGlubGluZQogIGNsb25lKCk6IHUxMjggewogICAgcmV0dXJuIG5ldyB1MTI4KHRoaXMubG8sIHRoaXMuaGkpOwogIH0KfQoKZXhwb3J0IHsgdTEyOCBhcyB1MTI4U2FmZSB9Owo=",
  "node_modules/as-bignum/assembly/integer/safe/u256.ts": "aW1wb3J0IHsgdTEyOFNhZmUgYXMgdTEyOCB9IGZyb20gJy4vdTEyOCc7CmltcG9ydCB7IHUxMjggYXMgVTEyOCB9IGZyb20gJy4uL3UxMjgnOwppbXBvcnQgeyB1MjU2IGFzIFUyNTYgfSBmcm9tICcuLi91MjU2JzsKCmNsYXNzIHUyNTYgZXh0ZW5kcyBVMjU2IHsKICBAaW5saW5lIHN0YXRpYyBnZXQgWmVybygpOiB1MjU2IHsKICAgIHJldHVybiBuZXcgdTI1NigpOwogIH0KICBAaW5saW5lIHN0YXRpYyBnZXQgT25lKCk6IHUyNTYgewogICAgcmV0dXJuIG5ldyB1MjU2KDEpOwogIH0KICBAaW5saW5lIHN0YXRpYyBnZXQgTWluKCk6IHUyNTYgewogICAgcmV0dXJuIG5ldyB1MjU2KCk7CiAgfQogIEBpbmxpbmUgc3RhdGljIGdldCBNYXgoKTogdTI1NiB7CiAgICByZXR1cm4gbmV3IHUyNTYoLTEsIC0xLCAtMSwgLTEpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVTI1Nih2YWx1ZTogdTI1Nik6IHUyNTYgewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTI1Nj4oVTI1Ni5mcm9tVTI1Nih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVTEyOCh2YWx1ZTogdTEyOCk6IHUyNTYgewogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTI1Nj4oVTI1Ni5mcm9tVTEyOCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tSTY0KHZhbHVlOiBpNjQpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbUk2NCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVTY0KHZhbHVlOiB1NjQpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbVU2NCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tRjY0KHZhbHVlOiBmNjQpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbUY2NCh2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tRjMyKHZhbHVlOiBmMzIpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbUYzMih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tSTMyKHZhbHVlOiBpMzIpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbUkzMih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVTMyKHZhbHVlOiB1MzIpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbVUzMih2YWx1ZSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tQnl0ZXM8VD4oYXJyYXk6IFQsIGJpZ0VuZGlhbjogYm9vbCA9IGZhbHNlKTogdTI1NiB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MjU2PihVMjU2LmZyb21CeXRlczxUPihhcnJheSwgYmlnRW5kaWFuKSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21CeXRlc0xFKGFycmF5OiB1OFtdKTogdTI1NiB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MjU2PihVMjU2LmZyb21CeXRlc0xFKGFycmF5KSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21CeXRlc0JFKGFycmF5OiB1OFtdKTogdTI1NiB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MjU2PihVMjU2LmZyb21CeXRlc0JFKGFycmF5KSk7CiAgfQoKICBAaW5saW5lCiAgc3RhdGljIGZyb21VaW50OEFycmF5TEUoYXJyYXk6IFVpbnQ4QXJyYXkpOiB1MjU2IHsKICAgIHJldHVybiBjaGFuZ2V0eXBlPHUyNTY+KFUyNTYuZnJvbVVpbnQ4QXJyYXlMRShhcnJheSkpOwogIH0KCiAgQGlubGluZQogIHN0YXRpYyBmcm9tVWludDhBcnJheUJFKGFycmF5OiBVaW50OEFycmF5KTogdTI1NiB7CiAgICByZXR1cm4gY2hhbmdldHlwZTx1MjU2PihVMjU2LmZyb21VaW50OEFycmF5QkUoYXJyYXkpKTsKICB9CgogIEBpbmxpbmUKICBzdGF0aWMgZnJvbTxUPih2YWx1ZTogVCk6IHUyNTYgewogICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBib29sKSAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTY0KDx1NjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpOCkgICAgICAgICByZXR1cm4gdTI1Ni5mcm9tSTY0KDxpNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1OCkgICAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTY0KDx1NjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpMTYpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tSTY0KDxpNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MTYpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTY0KDx1NjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpMzIpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tSTY0KDxpNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MzIpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTY0KDx1NjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBpNjQpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tSTY0KDxpNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1NjQpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTY0KDx1NjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBmMzIpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tRjY0KDxmNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBmNjQpICAgICAgICByZXR1cm4gdTI1Ni5mcm9tRjY0KDxmNjQ+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MTI4KSAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTEyOCg8dTEyOD52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFUxMjgpICAgICAgIHJldHVybiB1MjU2LmZyb21VMTI4KDxVMTI4PnZhbHVlKTsKICAgIGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgVTI1NikgICAgICAgcmV0dXJuIHUyNTYuZnJvbVUyNTYoPFUyNTY+dmFsdWUpOwogICAgZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiB1MjU2KSAgICAgICByZXR1cm4gdTI1Ni5mcm9tVTI1Nig8dTI1Nj52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHU4W10pICAgICAgIHJldHVybiB1MjU2LmZyb21CeXRlcyg8dThbXT52YWx1ZSk7CiAgICBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHJldHVybiB1MjU2LmZyb21CeXRlcyg8VWludDhBcnJheT52YWx1ZSk7CiAgICBlbHNlIHRocm93IG5ldyBUeXBlRXJyb3IoIlVuc3VwcG9ydGVkIGdlbmVyaWMgdHlwZSIpOwogIH0KCiAgQG9wZXJhdG9yKCIrIikKICBzdGF0aWMgYWRkKGE6IHUyNTYsIGI6IHUyNTYpOiB1MjU2IHsKICAgIHZhciBsbzFhID0gYS5sbzEsCiAgICAgICAgbG8yYSA9IGEubG8yLAogICAgICAgIGhpMWEgPSBhLmhpMSwKICAgICAgICBoaTJhID0gYS5oaTI7CgogICAgdmFyIGxvMWIgPSBiLmxvMSwKICAgICAgICBsbzJiID0gYi5sbzIsCiAgICAgICAgaGkxYiA9IGIuaGkxLAogICAgICAgIGhpMmIgPSBiLmhpMjsKCiAgICAvLyBBZGRpdGlvbiBmb3IgdGhlIGxvd2VzdCBzZWdtZW50CiAgICB2YXIgbG8xID0gbG8xYSArIGxvMWI7CiAgICB2YXIgY3kgPSB1NjQobG8xIDwgbG8xYSk7IC8vIERldGVjdCBjYXJyeQoKICAgIC8vIEFkZGl0aW9uIGZvciB0aGUgc2Vjb25kIGxvd2VzdCBzZWdtZW50IHdpdGggY2FycnkKICAgIHZhciBsbzIgPSBsbzJhICsgbG8yYiArIGN5OwogICAgY3kgPSB1NjQobG8yIDwgbG8yYSB8fCAoY3kgPT0gMSAmJiBsbzIgPT0gbG8yYSkpOyAvLyBVcGRhdGUgY2FycnkKCiAgICAvLyBBZGRpdGlvbiBmb3IgdGhlIHNlY29uZCBoaWdoZXN0IHNlZ21lbnQgd2l0aCBjYXJyeQogICAgdmFyIGhpMSA9IGhpMWEgKyBoaTFiICsgY3k7CiAgICBjeSA9IHU2NChoaTEgPCBoaTFhIHx8IChjeSA9PSAxICYmIGhpMSA9PSBoaTFhKSk7IC8vIFVwZGF0ZSBjYXJyeQoKICAgIC8vIEFkZGl0aW9uIGZvciB0aGUgaGlnaGVzdCBzZWdtZW50IHdpdGggY2FycnkKICAgIHZhciBoaTIgPSBoaTJhICsgaGkyYiArIGN5OwoKICAgIC8vIE92ZXJmbG93IGRldGVjdGlvbiBhZnRlciBhZGRpbmcgY2FycnkgdG8gdGhlIGhpZ2hlc3Qgc2VnbWVudAogICAgLy8gSW4gYSAnc2FmZScgaW1wbGVtZW50YXRpb24sIGFuIG92ZXJmbG93IGNhbiBiZSBkZXRlY3RlZCBpZiB0aGUgZmluYWwgY2Fycnkgd291bGQgZXhjZWVkIHRoZSBib3VuZHMgb2YgdTI1NiwKICAgIC8vIHdoaWNoIG1lYW5zIGFuIGFkZGl0aW9uIHRoYXQgY2F1c2VzIHRoZSBoaWdoZXN0IHNlZ21lbnQgdG8gb3ZlcmZsb3cuCiAgICAvLyBIb3dldmVyLCBzdGFuZGFyZCB1bnNpZ25lZCBpbnRlZ2VyIGJlaGF2aW9yIHdvdWxkIHdyYXAgYXJvdW5kLCBzbyB0aGlzIHN0ZXAgZGVwZW5kcyBvbiB0aGUgaW50ZW5kZWQgYmVoYXZpb3I6CiAgICBpZiAoaGkyIDwgaGkyYSB8fCAoY3kgPT0gMSAmJiBoaTIgPT0gaGkyYSkpIHsKICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiT3ZlcmZsb3cgZHVyaW5nIGFkZGl0aW9uIik7CiAgICB9CgogICAgcmV0dXJuIG5ldyB1MjU2KGxvMSwgbG8yLCBoaTEsIGhpMik7CiAgfQoKICBAb3BlcmF0b3IoIi0iKQogIHN0YXRpYyBzdWIoYTogdTI1NiwgYjogdTI1Nik6IHUyNTYgewogICAgaWYgKGEgPCBiKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiVW5kZXJmbG93IGR1cmluZyBzdWJ0cmFjdGlvbiIpOwogICAgcmV0dXJuIGNoYW5nZXR5cGU8dTI1Nj4oVTI1Ni5zdWIoY2hhbmdldHlwZTxVMjU2PihhKSwgY2hhbmdldHlwZTxVMjU2PihiKSkpOwogIH0KfQoKZXhwb3J0IHsgdTI1NiBhcyB1MjU2U2FmZSB9Owo=",
  "node_modules/as-bignum/assembly/integer/safe/u64.ts": "Ly8gVE9ETwo=",
  "node_modules/as-bignum/assembly/integer/u128.ts": "",
  "node_modules/as-bignum/assembly/integer/u256.ts": "",
  "node_modules/as-bignum/assembly/tsconfig.json": "ewogICJleHRlbmRzIjogImFzc2VtYmx5c2NyaXB0L3N0ZC9hc3NlbWJseS5qc29uIiwKICAiaW5jbHVkZSI6IFsKICAgICIuLyoqLyoudHMiCiAgXQp9Cg==",
  "node_modules/as-bignum/assembly/utils.ts": "",
  "node_modules/@btc-vision/btc-runtime/runtime/buffer/BytesReader.ts": "aW1wb3J0IHsgQWRkcmVzcywgQUREUkVTU19CWVRFX0xFTkdUSCB9IGZyb20gJy4uL3R5cGVzL0FkZHJlc3MnOwppbXBvcnQgeyBTZWxlY3RvciB9IGZyb20gJy4uL21hdGgvYWJpJzsKaW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IFJldmVydCB9IGZyb20gJy4uL3R5cGVzL1JldmVydCc7CmltcG9ydCB7IE1hcCB9IGZyb20gJy4uL2dlbmVyaWMvTWFwJzsKCkBmaW5hbApleHBvcnQgY2xhc3MgQnl0ZXNSZWFkZXIgewogICAgcHJpdmF0ZSByZWFkb25seSBidWZmZXI6IERhdGFWaWV3OwoKICAgIHByaXZhdGUgY3VycmVudE9mZnNldDogaTMyID0gMDsKCiAgICBjb25zdHJ1Y3RvcihieXRlczogVWludDhBcnJheSkgewogICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IERhdGFWaWV3KGJ5dGVzLmJ1ZmZlcik7CiAgICB9CgogICAgcHVibGljIHJlYWRVOCgpOiB1OCB7CiAgICAgICAgdGhpcy52ZXJpZnlFbmQodGhpcy5jdXJyZW50T2Zmc2V0ICsgMSk7CgogICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5nZXRVaW50OCh0aGlzLmN1cnJlbnRPZmZzZXQrKyk7CiAgICB9CgogICAgcHVibGljIHJlYWRVMTYoKTogdTE2IHsKICAgICAgICB0aGlzLnZlcmlmeUVuZCh0aGlzLmN1cnJlbnRPZmZzZXQgKyAyKTsKCiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmJ1ZmZlci5nZXRVaW50MTYodGhpcy5jdXJyZW50T2Zmc2V0LCB0cnVlKTsKICAgICAgICB0aGlzLmN1cnJlbnRPZmZzZXQgKz0gMjsKCiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQoKICAgIHB1YmxpYyByZWFkVTMyKGxlOiBib29sZWFuID0gdHJ1ZSk6IHUzMiB7CiAgICAgICAgdGhpcy52ZXJpZnlFbmQodGhpcy5jdXJyZW50T2Zmc2V0ICsgNCk7CgogICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5idWZmZXIuZ2V0VWludDMyKHRoaXMuY3VycmVudE9mZnNldCwgbGUpOwogICAgICAgIHRoaXMuY3VycmVudE9mZnNldCArPSA0OwogICAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0KCiAgICBwdWJsaWMgcmVhZFU2NCgpOiB1NjQgewogICAgICAgIHRoaXMudmVyaWZ5RW5kKHRoaXMuY3VycmVudE9mZnNldCArIDgpOwoKICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuYnVmZmVyLmdldFVpbnQ2NCh0aGlzLmN1cnJlbnRPZmZzZXQsIHRydWUpOwogICAgICAgIHRoaXMuY3VycmVudE9mZnNldCArPSA4OwoKICAgICAgICByZXR1cm4gdmFsdWU7CiAgICB9CgogICAgcHVibGljIHJlYWRVMjU2KCk6IHUyNTYgewogICAgICAgIGNvbnN0IG5leHQzMkJ5dGVzOiB1OFtdID0gW107CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzMjsgaSsrKSB7CiAgICAgICAgICAgIG5leHQzMkJ5dGVzW2ldID0gdGhpcy5yZWFkVTgoKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB1MjU2LmZyb21CeXRlc0JFKG5leHQzMkJ5dGVzKTsKICAgIH0KCiAgICBwdWJsaWMgcmVhZEJ5dGVzKGxlbmd0aDogdTMyLCB6ZXJvU3RvcDogYm9vbGVhbiA9IGZhbHNlKTogVWludDhBcnJheSB7CiAgICAgICAgbGV0IGJ5dGVzOiBVaW50OEFycmF5ID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTsKICAgICAgICBmb3IgKGxldCBpOiB1MzIgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgY29uc3QgYnl0ZTogdTggPSB0aGlzLnJlYWRVOCgpOwogICAgICAgICAgICBpZiAoemVyb1N0b3AgJiYgYnl0ZSA9PT0gMCkgewogICAgICAgICAgICAgICAgYnl0ZXMgPSBieXRlcy5zbGljZSgwLCBpKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBieXRlc1tpXSA9IGJ5dGU7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gYnl0ZXM7CiAgICB9CgogICAgcHVibGljIHJlYWRNdWx0aUJ5dGVzQWRkcmVzc01hcCgpOiBNYXA8QWRkcmVzcywgVWludDhBcnJheVtdPiB7CiAgICAgICAgY29uc3QgbWFwOiBNYXA8QWRkcmVzcywgVWludDhBcnJheVtdPiA9IG5ldyBNYXA8QWRkcmVzcywgVWludDhBcnJheVtdPigpOwogICAgICAgIGNvbnN0IHNpemU6IHU4ID0gdGhpcy5yZWFkVTgoKTsKCiAgICAgICAgaWYgKHNpemUgPiA4KSB0aHJvdyBuZXcgUmV2ZXJ0KCdUb28gbWFueSBjb250cmFjdCBjYWxsZWQuJyk7CgogICAgICAgIGZvciAobGV0IGk6IHU4ID0gMDsgaSA8IHNpemU7IGkrKykgewogICAgICAgICAgICBjb25zdCBhZGRyZXNzOiBBZGRyZXNzID0gdGhpcy5yZWFkQWRkcmVzcygpOwogICAgICAgICAgICBjb25zdCByZXNwb25zZVNpemU6IHU4ID0gdGhpcy5yZWFkVTgoKTsKCiAgICAgICAgICAgIGlmIChyZXNwb25zZVNpemUgPiAxMCkgdGhyb3cgbmV3IFJldmVydCgnVG9vIG1hbnkgY2FsbHMuJyk7CgogICAgICAgICAgICBjb25zdCBjYWxsczogVWludDhBcnJheVtdID0gW107CiAgICAgICAgICAgIGZvciAobGV0IGo6IHU4ID0gMDsgaiA8IHJlc3BvbnNlU2l6ZTsgaisrKSB7CiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZTogVWludDhBcnJheSA9IHRoaXMucmVhZEJ5dGVzV2l0aExlbmd0aCgpOwogICAgICAgICAgICAgICAgY2FsbHMucHVzaChyZXNwb25zZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG1hcC5zZXQoYWRkcmVzcywgY2FsbHMpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG1hcDsKICAgIH0KCiAgICBwdWJsaWMgcmVhZEJ5dGVzV2l0aExlbmd0aCgpOiBVaW50OEFycmF5IHsKICAgICAgICBjb25zdCBsZW5ndGggPSB0aGlzLnJlYWRVMzIoKTsKCiAgICAgICAgcmV0dXJuIHRoaXMucmVhZEJ5dGVzKGxlbmd0aCk7CiAgICB9CgogICAgcHVibGljIHJlYWRTdHJpbmcobGVuZ3RoOiB1MTYpOiBzdHJpbmcgewogICAgICAgIGNvbnN0IGJ5dGVzID0gdGhpcy5yZWFkQnl0ZXMobGVuZ3RoLCB0cnVlKTsKCiAgICAgICAgcmV0dXJuIFN0cmluZy5VVEY4LmRlY29kZShieXRlcy5idWZmZXIpOwogICAgfQoKICAgIHB1YmxpYyByZWFkVHVwbGUoKTogdTI1NltdIHsKICAgICAgICBjb25zdCBsZW5ndGggPSB0aGlzLnJlYWRVMzIoKTsKICAgICAgICBjb25zdCByZXN1bHQ6IHUyNTZbXSA9IG5ldyBBcnJheTx1MjU2PihsZW5ndGgpOwoKICAgICAgICBmb3IgKGxldCBpOiB1MzIgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgcmVzdWx0W2ldID0gdGhpcy5yZWFkVTI1NigpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KCiAgICBwdWJsaWMgcmVhZEFkZHJlc3NWYWx1ZVR1cGxlKCk6IE1hcDxBZGRyZXNzLCB1MjU2PiB7CiAgICAgICAgY29uc3QgbGVuZ3RoOiB1MTYgPSB0aGlzLnJlYWRVMTYoKTsKICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgTWFwPEFkZHJlc3MsIHUyNTY+KCk7CgogICAgICAgIGZvciAobGV0IGk6IHUxNiA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICBjb25zdCBhZGRyZXNzID0gdGhpcy5yZWFkQWRkcmVzcygpOwogICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVhZFUyNTYoKTsKCiAgICAgICAgICAgIGlmIChyZXN1bHQuaGFzKGFkZHJlc3MpKSB0aHJvdyBuZXcgUmV2ZXJ0KCdEdXBsaWNhdGUgYWRkcmVzcyBmb3VuZCBpbiBtYXAnKTsKCiAgICAgICAgICAgIHJlc3VsdC5zZXQoYWRkcmVzcywgdmFsdWUpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KCiAgICBwdWJsaWMgcmVhZFNlbGVjdG9yKCk6IFNlbGVjdG9yIHsKICAgICAgICByZXR1cm4gdGhpcy5yZWFkVTMyKGZhbHNlKTsKICAgIH0KCiAgICBwdWJsaWMgcmVhZFN0cmluZ1dpdGhMZW5ndGgoKTogc3RyaW5nIHsKICAgICAgICBjb25zdCBsZW5ndGggPSB0aGlzLnJlYWRVMTYoKTsKCiAgICAgICAgcmV0dXJuIHRoaXMucmVhZFN0cmluZyhsZW5ndGgpOwogICAgfQoKICAgIHB1YmxpYyByZWFkQm9vbGVhbigpOiBib29sZWFuIHsKICAgICAgICByZXR1cm4gdGhpcy5yZWFkVTgoKSAhPT0gMDsKICAgIH0KCiAgICBwdWJsaWMgcmVhZEZsb2F0KCk6IGYzMiB7CiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmJ1ZmZlci5nZXRGbG9hdDMyKHRoaXMuY3VycmVudE9mZnNldCwgdHJ1ZSk7CiAgICAgICAgdGhpcy5jdXJyZW50T2Zmc2V0ICs9IDQ7CgogICAgICAgIHJldHVybiB2YWx1ZTsKICAgIH0KCiAgICBwdWJsaWMgcmVhZEFkZHJlc3MoKTogQWRkcmVzcyB7CiAgICAgICAgcmV0dXJuIHRoaXMucmVhZFN0cmluZyhBRERSRVNTX0JZVEVfTEVOR1RIKTsKICAgIH0KCiAgICBwdWJsaWMgZ2V0T2Zmc2V0KCk6IGkzMiB7CiAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudE9mZnNldDsKICAgIH0KCiAgICBwdWJsaWMgc2V0T2Zmc2V0KG9mZnNldDogaTMyKTogdm9pZCB7CiAgICAgICAgdGhpcy5jdXJyZW50T2Zmc2V0ID0gb2Zmc2V0OwogICAgfQoKICAgIHB1YmxpYyB2ZXJpZnlFbmQoc2l6ZTogaTMyKTogdm9pZCB7CiAgICAgICAgaWYgKHRoaXMuY3VycmVudE9mZnNldCA+IHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGgpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCB0byByZWFkICR7c2l6ZX0gYnl0ZXMgYnV0IHJlYWQgJHt0aGlzLmN1cnJlbnRPZmZzZXR9IGJ5dGVzYCk7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyByZWFkQWRkcmVzc0FycmF5KCk6IEFkZHJlc3NbXSB7CiAgICAgICAgY29uc3QgbGVuZ3RoID0gdGhpcy5yZWFkVTE2KCk7CiAgICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5PEFkZHJlc3M+KGxlbmd0aCk7CgogICAgICAgIGZvciAobGV0IGk6IHUxNiA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgICAgICByZXN1bHRbaV0gPSB0aGlzLnJlYWRBZGRyZXNzKCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQoKICAgIHByaXZhdGUgdmVyaWZ5Q2hlY2tzdW0oKTogdm9pZCB7CiAgICAgICAgY29uc3Qgd3JpdHRlbkNoZWNrc3VtID0gdGhpcy5yZWFkVTMyKCk7CgogICAgICAgIGxldCBjaGVja3N1bTogdTMyID0gMDsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGg7IGkrKykgewogICAgICAgICAgICBjaGVja3N1bSArPSB0aGlzLmJ1ZmZlci5nZXRVaW50OChpKTsKICAgICAgICB9CgogICAgICAgIGNoZWNrc3VtID0gY2hlY2tzdW0gJSAyICoqIDMyOwoKICAgICAgICBpZiAoY2hlY2tzdW0gIT09IHdyaXR0ZW5DaGVja3N1bSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgY2hlY2tzdW0gZm9yIGJ1ZmZlcicpOwogICAgICAgIH0KICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/buffer/BytesWriter.ts": "",
  "node_modules/@btc-vision/btc-runtime/runtime/contracts/DeployableOP_20.ts": "",
  "node_modules/@btc-vision/btc-runtime/runtime/contracts/OP_20.ts": "aW1wb3J0IHsgRGVwbG95YWJsZU9QXzIwIH0gZnJvbSAnLi9EZXBsb3lhYmxlT1BfMjAnOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgT1AyMEluaXRQYXJhbWV0ZXJzIH0gZnJvbSAnLi9pbnRlcmZhY2VzL09QMjBJbml0UGFyYW1ldGVycyc7CgpleHBvcnQgYWJzdHJhY3QgY2xhc3MgT1BfMjAgZXh0ZW5kcyBEZXBsb3lhYmxlT1BfMjAgewogICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKG1heFN1cHBseTogdTI1NiwgZGVjaW1hbHM6IHU4LCBuYW1lOiBzdHJpbmcsIHN5bWJvbDogc3RyaW5nKSB7CiAgICAgICAgc3VwZXIobmV3IE9QMjBJbml0UGFyYW1ldGVycyhtYXhTdXBwbHksIGRlY2ltYWxzLCBuYW1lLCBzeW1ib2wpKTsKICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/contracts/OP_NET.ts": "aW1wb3J0IHsgSUJUQyB9IGZyb20gJy4uL2ludGVyZmFjZXMvSUJUQyc7CmltcG9ydCB7IEFkZHJlc3MsIEFERFJFU1NfQllURV9MRU5HVEggfSBmcm9tICcuLi90eXBlcy9BZGRyZXNzJzsKaW1wb3J0IHsgQmxvY2tjaGFpbiB9IGZyb20gJy4uL2Vudic7CmltcG9ydCB7IENhbGxkYXRhIH0gZnJvbSAnLi4vdW5pdmVyc2FsL0FCSVJlZ2lzdHJ5JzsKaW1wb3J0IHsgQnl0ZXNXcml0ZXIgfSBmcm9tICcuLi9idWZmZXIvQnl0ZXNXcml0ZXInOwppbXBvcnQgeyBlbmNvZGVTZWxlY3RvciwgU2VsZWN0b3IgfSBmcm9tICcuLi9tYXRoL2FiaSc7CmltcG9ydCB7IFJldmVydCB9IGZyb20gJy4uL3R5cGVzL1JldmVydCc7CmltcG9ydCB7IE1BWF9FVkVOVF9EQVRBX1NJWkUsIE5ldEV2ZW50IH0gZnJvbSAnLi4vZXZlbnRzL05ldEV2ZW50JzsKaW1wb3J0IHsgU3RvcmVkQm9vbGVhbiB9IGZyb20gJy4uL3N0b3JhZ2UvU3RvcmVkQm9vbGVhbic7CgpleHBvcnQgY2xhc3MgT1BfTkVUIGltcGxlbWVudHMgSUJUQyB7CiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgaW5zdGFudGlhdGVkOiBTdG9yZWRCb29sZWFuID0gbmV3IFN0b3JlZEJvb2xlYW4oCiAgICAgICAgQmxvY2tjaGFpbi5uZXh0UG9pbnRlciwKICAgICAgICBmYWxzZSwKICAgICk7CgogICAgcHVibGljIGdldCBhZGRyZXNzKCk6IHN0cmluZyB7CiAgICAgICAgcmV0dXJuIEJsb2NrY2hhaW4uY29udHJhY3RBZGRyZXNzOwogICAgfQoKICAgIHB1YmxpYyBnZXQgb3duZXIoKTogc3RyaW5nIHsKICAgICAgICByZXR1cm4gQmxvY2tjaGFpbi5vd25lcjsKICAgIH0KCiAgICBwdWJsaWMgZ2V0IGlzSW5zdGFudGlhdGVkKCk6IGJvb2wgewogICAgICAgIHJldHVybiB0aGlzLmluc3RhbnRpYXRlZC52YWx1ZTsKICAgIH0KCiAgICBwdWJsaWMgb25JbnN0YW50aWF0ZWQoKTogdm9pZCB7CiAgICAgICAgaWYgKCF0aGlzLmlzSW5zdGFudGlhdGVkKSB7CiAgICAgICAgICAgIHRoaXMuaW5zdGFudGlhdGVkLnZhbHVlID0gdHJ1ZTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGNhbGxNZXRob2QobWV0aG9kOiBTZWxlY3RvciwgX2NhbGxkYXRhOiBDYWxsZGF0YSk6IEJ5dGVzV3JpdGVyIHsKICAgICAgICBzd2l0Y2ggKG1ldGhvZCkgewogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydCgnTWV0aG9kIG5vdCBmb3VuZCcpOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgY2FsbFZpZXcobWV0aG9kOiBTZWxlY3Rvcik6IEJ5dGVzV3JpdGVyIHsKICAgICAgICBsZXQgcmVzcG9uc2U6IEJ5dGVzV3JpdGVyOwoKICAgICAgICBzd2l0Y2ggKG1ldGhvZCkgewogICAgICAgICAgICBjYXNlIGVuY29kZVNlbGVjdG9yKCdhZGRyZXNzJyk6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IG5ldyBCeXRlc1dyaXRlcihBRERSRVNTX0JZVEVfTEVOR1RIKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLndyaXRlQWRkcmVzcyh0aGlzLmFkZHJlc3MpOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgZW5jb2RlU2VsZWN0b3IoJ293bmVyJyk6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IG5ldyBCeXRlc1dyaXRlcihBRERSRVNTX0JZVEVfTEVOR1RIKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLndyaXRlQWRkcmVzcyh0aGlzLm93bmVyKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydCgnTWV0aG9kIG5vdCBmb3VuZCcpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgfQoKICAgIHByb3RlY3RlZCBlbWl0RXZlbnQoZXZlbnQ6IE5ldEV2ZW50KTogdm9pZCB7CiAgICAgICAgaWYgKGV2ZW50Lmxlbmd0aCA+IE1BWF9FVkVOVF9EQVRBX1NJWkUpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFdmVudCBkYXRhIGxlbmd0aCBleGNlZWRzIG1heGltdW0gbGVuZ3RoLicpOwogICAgICAgIH0KCiAgICAgICAgQmxvY2tjaGFpbi5hZGRFdmVudChldmVudCk7CiAgICB9CgogICAgcHJvdGVjdGVkIGlzU2VsZihhZGRyZXNzOiBBZGRyZXNzKTogYm9vbGVhbiB7CiAgICAgICAgcmV0dXJuIHRoaXMuYWRkcmVzcyA9PT0gYWRkcmVzczsKICAgIH0KCiAgICBwcm90ZWN0ZWQgb25seU93bmVyKGNhbGxlcjogQWRkcmVzcyk6IHZvaWQgewogICAgICAgIGlmICh0aGlzLm93bmVyICE9PSBjYWxsZXIpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydCgnT25seSBvd25lciBjYW4gY2FsbCB0aGlzIG1ldGhvZCcpOwogICAgICAgIH0KICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/contracts/interfaces/IOP_20.ts": "aW1wb3J0IHsgQnl0ZXNXcml0ZXIgfSBmcm9tICcuLi8uLi9idWZmZXIvQnl0ZXNXcml0ZXInOwppbXBvcnQgeyBDYWxsZGF0YSB9IGZyb20gJy4uLy4uL3VuaXZlcnNhbC9BQklSZWdpc3RyeSc7CmltcG9ydCB7IFN0b3JlZFUyNTYgfSBmcm9tICcuLi8uLi9zdG9yYWdlL1N0b3JlZFUyNTYnOwoKZXhwb3J0IGludGVyZmFjZSBJT1BfMjAgewogICAgcmVhZG9ubHkgX3RvdGFsU3VwcGx5OiBTdG9yZWRVMjU2OwoKICAgIGJhbGFuY2VPZihjYWxsRGF0YTogQ2FsbGRhdGEpOiBCeXRlc1dyaXRlcjsKCiAgICB0cmFuc2ZlcihjYWxsRGF0YTogQ2FsbGRhdGEpOiBCeXRlc1dyaXRlcjsKCiAgICB0cmFuc2ZlckZyb20oY2FsbERhdGE6IENhbGxkYXRhKTogQnl0ZXNXcml0ZXI7CgogICAgYXBwcm92ZShjYWxsRGF0YTogQ2FsbGRhdGEpOiBCeXRlc1dyaXRlcjsKCiAgICBhbGxvd2FuY2UoY2FsbERhdGE6IENhbGxkYXRhKTogQnl0ZXNXcml0ZXI7CgogICAgYnVybihjYWxsRGF0YTogQ2FsbGRhdGEpOiBCeXRlc1dyaXRlcjsKCiAgICBtaW50KGNhbGxEYXRhOiBDYWxsZGF0YSk6IEJ5dGVzV3JpdGVyOwp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/contracts/interfaces/OP20InitParameters.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CgpleHBvcnQgY2xhc3MgT1AyMEluaXRQYXJhbWV0ZXJzIHsKICAgIHJlYWRvbmx5IG1heFN1cHBseTogdTI1NjsKICAgIHJlYWRvbmx5IGRlY2ltYWxzOiB1ODsKICAgIHJlYWRvbmx5IG5hbWU6IHN0cmluZzsKICAgIHJlYWRvbmx5IHN5bWJvbDogc3RyaW5nOwoKICAgIGNvbnN0cnVjdG9yKG1heFN1cHBseTogdTI1NiwgZGVjaW1hbHM6IHU4LCBuYW1lOiBzdHJpbmcsIHN5bWJvbDogc3RyaW5nKSB7CiAgICAgICAgdGhpcy5tYXhTdXBwbHkgPSBtYXhTdXBwbHk7CiAgICAgICAgdGhpcy5kZWNpbWFscyA9IGRlY2ltYWxzOwogICAgICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICAgICAgdGhpcy5zeW1ib2wgPSBzeW1ib2w7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/env/BTCEnvironment.ts": "",
  "node_modules/@btc-vision/btc-runtime/runtime/env/global.ts": "Ly8gQHRzLWlnbm9yZQpAZXh0ZXJuYWwoJ2VudicsICdsb2FkJykKZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gbG9hZFBvaW50ZXIoZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7CgovLyBAdHMtaWdub3JlCkBleHRlcm5hbCgnZW52JywgJ3N0b3JlJykKZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gc3RvcmVQb2ludGVyKGRhdGE6IFVpbnQ4QXJyYXkpOiBVaW50OEFycmF5OwoKLy8gQHRzLWlnbm9yZQpAZXh0ZXJuYWwoJ2VudicsICdkZXBsb3knKQpleHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBkZXBsb3koZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7CgovLyBAdHMtaWdub3JlCkBleHRlcm5hbCgnZW52JywgJ2RlcGxveUZyb21BZGRyZXNzJykKZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gZGVwbG95RnJvbUFkZHJlc3MoZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7CgovLyBAdHMtaWdub3JlCkBleHRlcm5hbCgnZW52JywgJ2NhbGwnKQpleHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBjYWxsQ29udHJhY3QoZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7CgovLyBAdHMtaWdub3JlCkBleHRlcm5hbCgnZW52JywgJ2xvZycpCmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIGxvZyhkYXRhOiBVaW50OEFycmF5KTogdm9pZDsKCi8vIEB0cy1pZ25vcmUKQGV4dGVybmFsKCdlbnYnLCAnZW5jb2RlQWRkcmVzcycpCmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIGVuY29kZUFkZHJlc3MoZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7CgoKLy8gQHRzLWlnbm9yZQpAZXh0ZXJuYWwoJ2VudicsICdzaGEyNTYnKQpleHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzaGEyNTYoZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXk7Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/env/index.ts": "aW1wb3J0IHsgQmxvY2tjaGFpbkVudmlyb25tZW50IH0gZnJvbSAnLi9CVENFbnZpcm9ubWVudCc7CgpleHBvcnQgY29uc3QgQmxvY2tjaGFpbjogQmxvY2tjaGFpbkVudmlyb25tZW50ID0gbmV3IEJsb2NrY2hhaW5FbnZpcm9ubWVudCgpOwo=",
  "node_modules/@btc-vision/btc-runtime/runtime/events/NetEvent.ts": "aW1wb3J0IHsgQnl0ZXNXcml0ZXIgfSBmcm9tICcuLi9idWZmZXIvQnl0ZXNXcml0ZXInOwppbXBvcnQgeyBSZXZlcnQgfSBmcm9tICcuLi90eXBlcy9SZXZlcnQnOwoKZXhwb3J0IGNvbnN0IE1BWF9FVkVOVF9EQVRBX1NJWkU6IHUzMiA9IDM1MjsgLy8gMzUyIGJ5dGVzIG1heCBwZXIgZXZlbnQuCmV4cG9ydCBjb25zdCBNQVhfRVZFTlRTOiB1MTYgPSAxMDAwOyAvLyAxMDAwIGV2ZW50cyBtYXggcGVyIHRyYW5zYWN0aW9ucy4KCmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBOZXRFdmVudCB7CiAgICBwcml2YXRlIHJlYWRvbmx5IGJ1ZmZlcjogVWludDhBcnJheTsKCiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoCiAgICAgICAgcHVibGljIHJlYWRvbmx5IGV2ZW50VHlwZTogc3RyaW5nLAogICAgICAgIHByb3RlY3RlZCBkYXRhOiBCeXRlc1dyaXRlciwKICAgICkgewogICAgICAgIGlmIChkYXRhLmJ1ZmZlckxlbmd0aCgpID4gTUFYX0VWRU5UX0RBVEFfU0laRSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V2ZW50IGRhdGEgbGVuZ3RoIGV4Y2VlZHMgbWF4aW11bSBsZW5ndGguJyk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmJ1ZmZlciA9IGRhdGEuZ2V0QnVmZmVyKCk7CiAgICB9CgogICAgcHVibGljIGdldCBsZW5ndGgoKTogdTMyIHsKICAgICAgICBpZiAoIXRoaXMuYnVmZmVyKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBSZXZlcnQoJ0J1ZmZlciBpcyBub3QgZGVmaW5lZCcpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGg7CiAgICB9CgogICAgcHVibGljIGdldEV2ZW50RGF0YSgpOiBVaW50OEFycmF5IHsKICAgICAgICBpZiAoIXRoaXMuYnVmZmVyKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBSZXZlcnQoJ0J1ZmZlciBpcyBub3QgZGVmaW5lZCcpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/ApproveEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IEFkZHJlc3MsIEFERFJFU1NfQllURV9MRU5HVEggfSBmcm9tICcuLi8uLi90eXBlcy9BZGRyZXNzJzsKaW1wb3J0IHsgTmV0RXZlbnQgfSBmcm9tICcuLi9OZXRFdmVudCc7CmltcG9ydCB7IEJ5dGVzV3JpdGVyIH0gZnJvbSAnLi4vLi4vYnVmZmVyL0J5dGVzV3JpdGVyJzsKCkBmaW5hbApleHBvcnQgY2xhc3MgQXBwcm92ZUV2ZW50IGV4dGVuZHMgTmV0RXZlbnQgewogICAgY29uc3RydWN0b3Iob3duZXI6IEFkZHJlc3MsIHNwZW5kZXI6IEFkZHJlc3MsIHZhbHVlOiB1MjU2KSB7CiAgICAgICAgY29uc3QgZGF0YTogQnl0ZXNXcml0ZXIgPSBuZXcgQnl0ZXNXcml0ZXIoQUREUkVTU19CWVRFX0xFTkdUSCAqIDIgKyAzMik7CiAgICAgICAgZGF0YS53cml0ZUFkZHJlc3Mob3duZXIpOwogICAgICAgIGRhdGEud3JpdGVBZGRyZXNzKHNwZW5kZXIpOwogICAgICAgIGRhdGEud3JpdGVVMjU2KHZhbHVlKTsKCiAgICAgICAgc3VwZXIoJ0FwcHJvdmUnLCBkYXRhKTsKICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/BurnEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uLy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CgpAZmluYWwKZXhwb3J0IGNsYXNzIEJ1cm5FdmVudCBleHRlbmRzIE5ldEV2ZW50IHsKICAgIGNvbnN0cnVjdG9yKGFtb3VudDogdTI1NikgewogICAgICAgIGNvbnN0IGRhdGE6IEJ5dGVzV3JpdGVyID0gbmV3IEJ5dGVzV3JpdGVyKDMyKTsKICAgICAgICBkYXRhLndyaXRlVTI1NihhbW91bnQpOwoKICAgICAgICBzdXBlcignQnVybicsIGRhdGEpOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/ClaimEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uLy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CgpAZmluYWwKZXhwb3J0IGNsYXNzIENsYWltRXZlbnQgZXh0ZW5kcyBOZXRFdmVudCB7CiAgICBjb25zdHJ1Y3RvcihhbW91bnQ6IHUyNTYpIHsKICAgICAgICBjb25zdCBkYXRhOiBCeXRlc1dyaXRlciA9IG5ldyBCeXRlc1dyaXRlcigzMik7CiAgICAgICAgZGF0YS53cml0ZVUyNTYoYW1vdW50KTsKCiAgICAgICAgc3VwZXIoJ0NsYWltJywgZGF0YSk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/MintEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uLy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CmltcG9ydCB7IEFkZHJlc3MsIEFERFJFU1NfQllURV9MRU5HVEggfSBmcm9tICcuLi8uLi90eXBlcy9BZGRyZXNzJzsKCkBmaW5hbApleHBvcnQgY2xhc3MgTWludEV2ZW50IGV4dGVuZHMgTmV0RXZlbnQgewogICAgY29uc3RydWN0b3IoYWRkcmVzczogQWRkcmVzcywgYW1vdW50OiB1MjU2KSB7CiAgICAgICAgY29uc3QgZGF0YTogQnl0ZXNXcml0ZXIgPSBuZXcgQnl0ZXNXcml0ZXIoMzIgKyBBRERSRVNTX0JZVEVfTEVOR1RIKTsKICAgICAgICBkYXRhLndyaXRlQWRkcmVzcyhhZGRyZXNzKTsKICAgICAgICBkYXRhLndyaXRlVTI1NihhbW91bnQpOwoKICAgICAgICBzdXBlcignTWludCcsIGRhdGEpOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/StakeEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uLy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CgpAZmluYWwKZXhwb3J0IGNsYXNzIFN0YWtlRXZlbnQgZXh0ZW5kcyBOZXRFdmVudCB7CiAgICBjb25zdHJ1Y3RvcihhbW91bnQ6IHUyNTYpIHsKICAgICAgICBjb25zdCBkYXRhOiBCeXRlc1dyaXRlciA9IG5ldyBCeXRlc1dyaXRlcigzMik7CiAgICAgICAgZGF0YS53cml0ZVUyNTYoYW1vdW50KTsKCiAgICAgICAgc3VwZXIoJ1N0YWtlJywgZGF0YSk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/TransferEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBBZGRyZXNzLCBBRERSRVNTX0JZVEVfTEVOR1RIIH0gZnJvbSAnLi4vLi4vdHlwZXMvQWRkcmVzcyc7CmltcG9ydCB7IEJ5dGVzV3JpdGVyIH0gZnJvbSAnLi4vLi4vYnVmZmVyL0J5dGVzV3JpdGVyJzsKCkBmaW5hbApleHBvcnQgY2xhc3MgVHJhbnNmZXJFdmVudCBleHRlbmRzIE5ldEV2ZW50IHsKICAgIGNvbnN0cnVjdG9yKGZyb206IEFkZHJlc3MsIHRvOiBBZGRyZXNzLCBhbW91bnQ6IHUyNTYpIHsKICAgICAgICBjb25zdCBkYXRhOiBCeXRlc1dyaXRlciA9IG5ldyBCeXRlc1dyaXRlcihBRERSRVNTX0JZVEVfTEVOR1RIICogMiArIDMyKTsKICAgICAgICBkYXRhLndyaXRlQWRkcmVzcyhmcm9tKTsKICAgICAgICBkYXRhLndyaXRlQWRkcmVzcyh0byk7CiAgICAgICAgZGF0YS53cml0ZVUyNTYoYW1vdW50KTsKCiAgICAgICAgc3VwZXIoJ1RyYW5zZmVyJywgZGF0YSk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/UnstakeEvent.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE5ldEV2ZW50IH0gZnJvbSAnLi4vTmV0RXZlbnQnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uLy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CgpAZmluYWwKZXhwb3J0IGNsYXNzIFVuc3Rha2VFdmVudCBleHRlbmRzIE5ldEV2ZW50IHsKICAgIGNvbnN0cnVjdG9yKGFtb3VudDogdTI1NikgewogICAgICAgIGNvbnN0IGRhdGE6IEJ5dGVzV3JpdGVyID0gbmV3IEJ5dGVzV3JpdGVyKDMyKTsKICAgICAgICBkYXRhLndyaXRlVTI1NihhbW91bnQpOwoKICAgICAgICBzdXBlcignVW5zdGFrZScsIGRhdGEpOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/events/predefined/index.ts": "ZXhwb3J0ICogZnJvbSAnLi9BcHByb3ZlRXZlbnQnOwpleHBvcnQgKiBmcm9tICcuL0J1cm5FdmVudCc7CmV4cG9ydCAqIGZyb20gJy4vTWludEV2ZW50JzsKZXhwb3J0ICogZnJvbSAnLi9UcmFuc2ZlckV2ZW50JzsKZXhwb3J0ICogZnJvbSAnLi9DbGFpbUV2ZW50JzsKZXhwb3J0ICogZnJvbSAnLi9TdGFrZUV2ZW50JzsKZXhwb3J0ICogZnJvbSAnLi9VbnN0YWtlRXZlbnQnOwo=",
  "node_modules/@btc-vision/btc-runtime/runtime/exports/index.ts": "aW1wb3J0IHsgQ2FsbGRhdGEgfSBmcm9tICcuLi91bml2ZXJzYWwvQUJJUmVnaXN0cnknOwppbXBvcnQgeyBCbG9ja2NoYWluIH0gZnJvbSAnLi4vZW52JzsKaW1wb3J0IHsgU2VsZWN0b3IgfSBmcm9tICcuLi9tYXRoL2FiaSc7CmltcG9ydCB7IEJ5dGVzV3JpdGVyIH0gZnJvbSAnLi4vYnVmZmVyL0J5dGVzV3JpdGVyJzsKaW1wb3J0IHsgQnl0ZXNSZWFkZXIgfSBmcm9tICcuLi9idWZmZXIvQnl0ZXNSZWFkZXInOwoKZXhwb3J0IGZ1bmN0aW9uIHJlYWRNZXRob2QobWV0aG9kOiBTZWxlY3RvciwgZGF0YTogVWludDhBcnJheSk6IFVpbnQ4QXJyYXkgewogICAgY29uc3QgY2FsbGRhdGE6IENhbGxkYXRhID0gbmV3IEJ5dGVzUmVhZGVyKGRhdGEpOwogICAgY29uc3QgcmVzdWx0OiBCeXRlc1dyaXRlciA9IEJsb2NrY2hhaW4uY29udHJhY3QuY2FsbE1ldGhvZChtZXRob2QsIGNhbGxkYXRhKTsKCiAgICByZXR1cm4gcmVzdWx0LmdldEJ1ZmZlcigpOwp9CgpleHBvcnQgZnVuY3Rpb24gcmVhZFZpZXcobWV0aG9kOiBTZWxlY3Rvcik6IFVpbnQ4QXJyYXkgewogICAgY29uc3QgcmVzdWx0OiBCeXRlc1dyaXRlciA9IEJsb2NrY2hhaW4uY29udHJhY3QuY2FsbFZpZXcobWV0aG9kKTsKICAgIHJldHVybiByZXN1bHQuZ2V0QnVmZmVyKCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBnZXRFdmVudHMoKTogVWludDhBcnJheSB7CiAgICByZXR1cm4gQmxvY2tjaGFpbi5nZXRFdmVudHMoKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGdldE1ldGhvZEFCSSgpOiBVaW50OEFycmF5IHsKICAgIHJldHVybiBCbG9ja2NoYWluLmdldE1ldGhvZFNlbGVjdG9ycygpOwp9CgpleHBvcnQgZnVuY3Rpb24gc2V0RW52aXJvbm1lbnQoZGF0YTogVWludDhBcnJheSk6IHZvaWQgewogICAgQmxvY2tjaGFpbi5zZXRFbnZpcm9ubWVudChkYXRhKTsKfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/generic/Map.ts": "aW1wb3J0IHsgUmV2ZXJ0IH0gZnJvbSAnLi4vdHlwZXMvUmV2ZXJ0JzsKCmV4cG9ydCBjbGFzcyBNYXA8SywgVj4gewogICAgcHJvdGVjdGVkIF9rZXlzOiBLW10gPSBbXTsKICAgIHByb3RlY3RlZCBfdmFsdWVzOiBWW10gPSBbXTsKCiAgICBwdWJsaWMgZ2V0IHNpemUoKTogaTMyIHsKICAgICAgICByZXR1cm4gdGhpcy5fa2V5cy5sZW5ndGg7CiAgICB9CgogICAgcHVibGljIGtleXMoKTogS1tdIHsKICAgICAgICByZXR1cm4gdGhpcy5fa2V5czsKICAgIH0KCiAgICBwdWJsaWMgdmFsdWVzKCk6IFZbXSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlczsKICAgIH0KCiAgICBwdWJsaWMgc2V0KGtleTogSywgdmFsdWU6IFYpOiB2b2lkIHsKICAgICAgICBjb25zdCBpbmRleDogaTMyID0gdGhpcy5pbmRleE9mKGtleSk7CiAgICAgICAgaWYgKGluZGV4ID09IC0xKSB7CiAgICAgICAgICAgIHRoaXMuX2tleXMucHVzaChrZXkpOwogICAgICAgICAgICB0aGlzLl92YWx1ZXMucHVzaCh2YWx1ZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy5fdmFsdWVzW2luZGV4XSA9IHZhbHVlOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgaW5kZXhPZihrZXk6IEspOiBpMzIgewogICAgICAgIHJldHVybiB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KTsKICAgIH0KCiAgICBwdWJsaWMgZ2V0KGtleTogSyk6IFYgewogICAgICAgIGNvbnN0IGluZGV4OiBpMzIgPSB0aGlzLmluZGV4T2Yoa2V5KTsKICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydCgnS2V5IG5vdCBmb3VuZCBpbiBtYXAnKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlc1tpbmRleF07CiAgICB9CgogICAgcHVibGljIGhhcyhrZXk6IEspOiBib29sIHsKICAgICAgICBmb3IgKGxldCBpOiBpMzIgPSAwOyBpIDwgdGhpcy5fa2V5cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAodGhpcy5fa2V5c1tpXSA9PSBrZXkpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgcHVibGljIGRlbGV0ZShrZXk6IEspOiBib29sIHsKICAgICAgICBjb25zdCBpbmRleDogaTMyID0gdGhpcy5pbmRleE9mKGtleSk7CiAgICAgICAgaWYgKGluZGV4ID09IC0xKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgdGhpcy5fa2V5cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIHRoaXMuX3ZhbHVlcy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHsKICAgICAgICB0aGlzLl9rZXlzID0gW107CiAgICAgICAgdGhpcy5fdmFsdWVzID0gW107CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/generic/MapU256.ts": "aW1wb3J0IHsgUmV2ZXJ0IH0gZnJvbSAnLi4vdHlwZXMvUmV2ZXJ0JzsKaW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IE1hcCB9IGZyb20gJy4vTWFwJzsKCmV4cG9ydCBjbGFzcyBNYXBVMjU2IGV4dGVuZHMgTWFwPHUyNTYsIHUyNTY+IHsKICAgIHB1YmxpYyBzZXQoa2V5OiB1MjU2LCB2YWx1ZTogdTI1Nik6IHZvaWQgewogICAgICAgIGNvbnN0IGluZGV4OiBpMzIgPSB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KTsKICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHsKICAgICAgICAgICAgdGhpcy5fa2V5cy5wdXNoKGtleSk7CiAgICAgICAgICAgIHRoaXMuX3ZhbHVlcy5wdXNoKHZhbHVlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLl92YWx1ZXNbaW5kZXhdID0gdmFsdWU7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyBpbmRleE9mKHBvaW50ZXJIYXNoOiB1MjU2KTogaTMyIHsKICAgICAgICBmb3IgKGxldCBpOiBpMzIgPSAwOyBpIDwgdGhpcy5fa2V5cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBjb25zdCBrZXkgPSB0aGlzLl9rZXlzW2ldOwoKICAgICAgICAgICAgaWYgKHUyNTYuZXEoa2V5LCBwb2ludGVySGFzaCkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gLTE7CiAgICB9CgogICAgcHVibGljIGhhcyhrZXk6IHUyNTYpOiBib29sIHsKICAgICAgICBmb3IgKGxldCBpOiBpMzIgPSAwOyBpIDwgdGhpcy5fa2V5cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAodTI1Ni5lcSh0aGlzLl9rZXlzW2ldLCBrZXkpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIHB1YmxpYyBnZXQoa2V5OiB1MjU2KTogdTI1NiB7CiAgICAgICAgY29uc3QgaW5kZXg6IGkzMiA9IHRoaXMuaW5kZXhPZihrZXkpOwogICAgICAgIGlmIChpbmRleCA9PSAtMSkgewogICAgICAgICAgICB0aHJvdyBuZXcgUmV2ZXJ0KCdLZXkgbm90IGZvdW5kIGluIG1hcCcpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWVzW2luZGV4XTsKICAgIH0KCiAgICBwdWJsaWMgZGVsZXRlKGtleTogdTI1Nik6IGJvb2wgewogICAgICAgIGNvbnN0IGluZGV4OiBpMzIgPSB0aGlzLmluZGV4T2Yoa2V5KTsKICAgICAgICBpZiAoaW5kZXggPT0gLTEpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fa2V5cy5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIHRoaXMuX3ZhbHVlcy5zcGxpY2UoaW5kZXgsIDEpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/index.ts": "LyoqIEVudmlyb25tZW50ICovCmV4cG9ydCAqIGZyb20gJy4vZW52JzsKCi8qKiBDb250cmFjdHMgKi8KZXhwb3J0ICogZnJvbSAnLi9jb250cmFjdHMvaW50ZXJmYWNlcy9JT1BfMjAnOwpleHBvcnQgKiBmcm9tICcuL2NvbnRyYWN0cy9PUF8yMCc7CmV4cG9ydCAqIGZyb20gJy4vY29udHJhY3RzL0RlcGxveWFibGVPUF8yMCc7CmV4cG9ydCAqIGZyb20gJy4vY29udHJhY3RzL09QX05FVCc7CmV4cG9ydCAqIGZyb20gJy4vY29udHJhY3RzL2ludGVyZmFjZXMvT1AyMEluaXRQYXJhbWV0ZXJzJzsKCi8qKiBCdWZmZXIgKi8KZXhwb3J0ICogZnJvbSAnLi9idWZmZXIvQnl0ZXNSZWFkZXInOwpleHBvcnQgKiBmcm9tICcuL2J1ZmZlci9CeXRlc1dyaXRlcic7CgovKiogSW50ZXJmYWNlcyAqLwpleHBvcnQgKiBmcm9tICcuL2ludGVyZmFjZXMvRGVwbG95Q29udHJhY3RSZXNwb25zZSc7CgovKiogRXZlbnRzICovCmV4cG9ydCAqIGZyb20gJy4vZXZlbnRzL05ldEV2ZW50JzsKZXhwb3J0ICogZnJvbSAnLi9ldmVudHMvcHJlZGVmaW5lZCc7CgovKiogVHlwZXMgKi8KZXhwb3J0ICogZnJvbSAnLi9nZW5lcmljL01hcCc7CmV4cG9ydCAqIGZyb20gJy4vaW50ZXJmYWNlcy9JQlRDJzsKCi8qKiBEZWZpbml0aW9ucyAqLwpleHBvcnQgKiBmcm9tICcuL2xhbmcvRGVmaW5pdGlvbnMnOwpleHBvcnQgKiBmcm9tICcuL3R5cGVzL0FkZHJlc3MnOwpleHBvcnQgKiBmcm9tICcuL3R5cGVzL1JldmVydCc7CmV4cG9ydCAqIGZyb20gJy4vdHlwZXMvU2FmZU1hdGgnOwoKLyoqIE1hdGggKi8KZXhwb3J0ICogZnJvbSAnLi9tYXRoL2FiaSc7CmV4cG9ydCAqIGZyb20gJy4vbWF0aC9ieXRlcyc7CmV4cG9ydCAqIGZyb20gJy4vbWF0aC9jeXJiNTMnOwpleHBvcnQgKiBmcm9tICcuL21hdGgvc2hhMjU2JzsKZXhwb3J0ICogZnJvbSAnLi9tYXRoL3JuZCc7CgovKiogTWVtb3J5ICovCmV4cG9ydCAqIGZyb20gJy4vbWVtb3J5L0FkZHJlc3NNZW1vcnlNYXAnOwpleHBvcnQgKiBmcm9tICcuL21lbW9yeS9NZW1vcnlTbG90JzsKZXhwb3J0ICogZnJvbSAnLi9tZW1vcnkvTWVtb3J5U2xvdFBvaW50ZXInOwpleHBvcnQgKiBmcm9tICcuL21lbW9yeS9LZXlNZXJnZXInOwpleHBvcnQgKiBmcm9tICcuL21lbW9yeS9NdWx0aUFkZHJlc3NNZW1vcnlNYXAnOwoKLyoqIFN0b3JhZ2UgKi8KZXhwb3J0ICogZnJvbSAnLi9zdG9yYWdlL1N0b3JlZFUyNTYnOwpleHBvcnQgKiBmcm9tICcuL3N0b3JhZ2UvU3RvcmVkU3RyaW5nJzsKZXhwb3J0ICogZnJvbSAnLi9zdG9yYWdlL1N0b3JlZEJvb2xlYW4nOwpleHBvcnQgKiBmcm9tICcuL3N0b3JhZ2UvU2VyaWFsaXphYmxlJzsKCi8qKiBVbml2ZXJzYWwgKi8KZXhwb3J0ICogZnJvbSAnLi91bml2ZXJzYWwvQUJJUmVnaXN0cnknOwoKLyoqIFNoYXJlZCBsaWJyYXJpZXMgKi8KZXhwb3J0ICogZnJvbSAnLi9zaGFyZWQtbGlicmFyaWVzL1RyYW5zZmVySGVscGVyJzsKZXhwb3J0ICogZnJvbSAnLi9zaGFyZWQtbGlicmFyaWVzL09QMjBVdGlscyc7Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/interfaces/DeployContractResponse.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IEFkZHJlc3MgfSBmcm9tICcuLi90eXBlcy9BZGRyZXNzJzsKCmV4cG9ydCBjbGFzcyBEZXBsb3lDb250cmFjdFJlc3BvbnNlIHsKICAgIHJlYWRvbmx5IHZpcnR1YWxBZGRyZXNzOiB1MjU2OwogICAgcmVhZG9ubHkgY29udHJhY3RBZGRyZXNzOiBBZGRyZXNzOwoKICAgIGNvbnN0cnVjdG9yKHZpcnR1YWxBZGRyZXNzOiB1MjU2LCBjb250cmFjdEFkZHJlc3M6IEFkZHJlc3MpIHsKICAgICAgICB0aGlzLnZpcnR1YWxBZGRyZXNzID0gdmlydHVhbEFkZHJlc3M7CiAgICAgICAgdGhpcy5jb250cmFjdEFkZHJlc3MgPSBjb250cmFjdEFkZHJlc3M7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/interfaces/IBTC.ts": "aW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJy4uL3R5cGVzL0FkZHJlc3MnOwoKZXhwb3J0IGludGVyZmFjZSBJQlRDIHsKICAgIHJlYWRvbmx5IG93bmVyOiBBZGRyZXNzOwogICAgcmVhZG9ubHkgYWRkcmVzczogQWRkcmVzczsKfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/lang/Definitions.ts": "ZXhwb3J0IHR5cGUgUG90ZW50aWFsPFQ+ID0gVCB8IG51bGw7Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/math/abi.ts": "Ly8gU08gSU4gVFlQRVNDUklQVCwgV0UgQ0FOIE5PVCBVU0UgVFdPIE1FVEhPRCBXSVRIIFRIRSBTQU1FIE5BTUUuIFNPIE5PVCBBRERJTkcgVEhFIFRZUEUgVE8gVEhFIEhBU0ggSVMgQSBERVNJR04gQ0hPSUNFLgppbXBvcnQgeyBieXRlczMyLCBieXRlczQgfSBmcm9tICcuL2J5dGVzJzsKaW1wb3J0IHsgTWVtb3J5U2xvdFBvaW50ZXIgfSBmcm9tICcuLi9tZW1vcnkvTWVtb3J5U2xvdFBvaW50ZXInOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgU2hhMjU2IH0gZnJvbSAnLi9zaGEyNTYnOwoKZXhwb3J0IHR5cGUgU2VsZWN0b3IgPSB1MzI7CgpleHBvcnQgZnVuY3Rpb24gZW5jb2RlU2VsZWN0b3IobmFtZTogc3RyaW5nKTogU2VsZWN0b3IgewogICAgY29uc3QgdHlwZWQgPSBVaW50OEFycmF5LndyYXAoU3RyaW5nLlVURjguZW5jb2RlKG5hbWUpKTsKICAgIGNvbnN0IGhhc2ggPSBTaGEyNTYuaGFzaCh0eXBlZCk7CgogICAgcmV0dXJuIGJ5dGVzNChoYXNoKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVBvaW50ZXIoc3RyOiBzdHJpbmcpOiBNZW1vcnlTbG90UG9pbnRlciB7CiAgICBjb25zdCB0eXBlZCA9IFVpbnQ4QXJyYXkud3JhcChTdHJpbmcuVVRGOC5lbmNvZGUoc3RyKSk7CiAgICBjb25zdCBoYXNoID0gU2hhMjU2Lmhhc2godHlwZWQpOwoKICAgIHJldHVybiBieXRlczMyKGhhc2gpOwp9CgpleHBvcnQgZnVuY3Rpb24gZW5jb2RlUG9pbnRlckhhc2gocG9pbnRlcjogdTE2LCBzdWI6IHUyNTYpOiBNZW1vcnlTbG90UG9pbnRlciB7CiAgICBjb25zdCBmaW5hbEJ1ZmZlcjogVWludDhBcnJheSA9IG5ldyBVaW50OEFycmF5KDM0KTsKICAgIGNvbnN0IG1lcmdlZEtleTogdThbXSA9IFt1OChwb2ludGVyICYgdTE2KDB4ZmYpKSwgdTgoKHBvaW50ZXIgPj4gdTE2KDgpKSAmIHUxNigweGZmKSldOwoKICAgIGZvciAobGV0IGk6IGkzMiA9IDA7IGkgPCBtZXJnZWRLZXkubGVuZ3RoOyBpKyspIHsKICAgICAgICBmaW5hbEJ1ZmZlcltpXSA9IG1lcmdlZEtleVtpXTsKICAgIH0KCiAgICBjb25zdCBzdWJLZXkgPSBzdWIudG9VaW50OEFycmF5KCk7CiAgICBmb3IgKGxldCBpOiBpMzIgPSAwOyBpIDwgc3ViS2V5Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgZmluYWxCdWZmZXJbbWVyZ2VkS2V5Lmxlbmd0aCArIGldID0gc3ViS2V5W2ldOwogICAgfQoKICAgIHJldHVybiBieXRlczMyKFNoYTI1Ni5oYXNoKGZpbmFsQnVmZmVyKSk7Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/math/bytes.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CgpleHBvcnQgZnVuY3Rpb24gYnl0ZXMobnVtYmVyOiB1MjU2W10pOiBVaW50OEFycmF5IHsKICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KDMyICogbnVtYmVyLmxlbmd0aCk7CiAgICBmb3IgKGxldCBpOiB1OCA9IDA7IGkgPCAzMjsgaSsrKSB7CiAgICAgICAgY29uc3QgbnVtOiBVaW50OEFycmF5ID0gbnVtYmVyWzMxIC0gaV0udG9VaW50OEFycmF5KCk7CiAgICAgICAgZm9yIChsZXQgajogdTggPSAwOyBqIDwgdTgobnVtYmVyLmxlbmd0aCk7IGorKykgewogICAgICAgICAgICByZXN1bHRbaSArIGogKiAzMl0gPSBudW1baV07CiAgICAgICAgfQogICAgfQoKICAgIHJldHVybiByZXN1bHQ7Cn0KCmV4cG9ydCBmdW5jdGlvbiBieXRlczQobnVtYmVyOiBVaW50OEFycmF5KTogdTMyIHsKICAgIHJldHVybiAodTMyKG51bWJlclswXSkgPDwgMjQpIHwgKHUzMihudW1iZXJbMV0pIDw8IDE2KSB8ICh1MzIobnVtYmVyWzJdKSA8PCA4KSB8IHUzMihudW1iZXJbM10pOwp9CgpleHBvcnQgZnVuY3Rpb24gYnl0ZXM4KG51bWJlcjogVWludDhBcnJheSk6IHU2NCB7CiAgICByZXR1cm4gKAogICAgICAgICh1NjQobnVtYmVyWzBdKSA8PCB1NjQoNTYpKSB8CiAgICAgICAgKHU2NChudW1iZXJbMV0pIDw8IHU2NCg0OCkpIHwKICAgICAgICAodTY0KG51bWJlclsyXSkgPDwgdTY0KDQwKSkgfAogICAgICAgICh1NjQobnVtYmVyWzNdKSA8PCB1NjQoMzIpKSB8CiAgICAgICAgKHU2NChudW1iZXJbNF0pIDw8IDI0KSB8CiAgICAgICAgKHU2NChudW1iZXJbNV0pIDw8IDE2KSB8CiAgICAgICAgKHU2NChudW1iZXJbNl0pIDw8IDgpIHwKICAgICAgICB1NjQobnVtYmVyWzddKQogICAgKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzMzIobnVtYmVyOiBVaW50OEFycmF5KTogdTI1NiB7CiAgICByZXR1cm4gdTI1Ni5mcm9tQnl0ZXMobnVtYmVyKTsKfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/math/cyrb53.ts": "ZXhwb3J0IGZ1bmN0aW9uIGN5cmI1MyhzdHI6IHN0cmluZywgc2VlZDogaTMyID0gMCk6IGk2NCB7CiAgICBsZXQgaDE6IGkzMiA9IDB4ZGVhZGJlZWYgXiBzZWVkOwogICAgbGV0IGgyOiBpMzIgPSAweDQxYzZjZTU3IF4gc2VlZDsKICAgIGZvciAobGV0IGk6IGkzMiA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBjaDogaTMyID0gc3RyLmNoYXJDb2RlQXQoaSk7CiAgICAgICAgaDEgPSAoaDEgXiBjaCkgKiAyNjU0NDM1NzYxOwogICAgICAgIGgyID0gKGgyIF4gY2gpICogMTU5NzMzNDY3NzsKICAgIH0KCiAgICBoMSA9ICgoaDEgXiAoaDEgPj4+IDE2KSkgKiAyMjQ2ODIyNTA3KSBeICgoaDIgXiAoaDIgPj4+IDEzKSkgKiAzMjY2NDg5OTA5KTsKICAgIGgyID0gKChoMiBeIChoMiA+Pj4gMTYpKSAqIDIyNDY4MjI1MDcpIF4gKChoMSBeIChoMSA+Pj4gMTMpKSAqIDMyNjY0ODk5MDkpOwoKICAgIHJldHVybiA0Mjk0OTY3Mjk2ICogaTY0KCgyMDk3MTUxICYgaDIpID4+PiAwKSArIGk2NChoMSA+Pj4gMCk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBpbXVsNjQoYTogdTY0LCBiOiB1NjQpOiB1NjQgewogICAgY29uc3QgYUxvdzogdTY0ID0gYSAmIDB4ZmZmZmZmZmY7CiAgICBjb25zdCBhSGlnaDogdTY0ID0gYSA+PiAzMjsKICAgIGNvbnN0IGJMb3c6IHU2NCA9IGIgJiAweGZmZmZmZmZmOwogICAgY29uc3QgYkhpZ2g6IHU2NCA9IGIgPj4gMzI7CgogICAgY29uc3QgbG93OiB1NjQgPSBhTG93ICogYkxvdzsKICAgIGNvbnN0IG1pZGRsZTE6IHU2NCA9IChhSGlnaCAqIGJMb3cpIDw8IDMyOwogICAgY29uc3QgbWlkZGxlMjogdTY0ID0gKGFMb3cgKiBiSGlnaCkgPDwgMzI7CiAgICBjb25zdCBoaWdoOiB1NjQgPSAoYUhpZ2ggKiBiSGlnaCkgPDwgNjQ7CgogICAgcmV0dXJuIGxvdyArIG1pZGRsZTEgKyBtaWRkbGUyICsgaGlnaDsKfQoKZXhwb3J0IGZ1bmN0aW9uIGN5cmI1M2Eoc3RyOiB1OFtdLCBzZWVkOiBpMzIgPSAwKTogdTY0IHsKICAgIGxldCBoMTogdTY0ID0gdTY0KDB4ZGVhZGJlZWYgXiBzZWVkKTsKICAgIGxldCBoMjogdTY0ID0gdTY0KDB4NDFjNmNlNTcgXiBzZWVkKTsKCiAgICBmb3IgKGxldCBpOiBpMzIgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3QgY2g6IHU2NCA9IHU2NChzdHJbaV0pOwogICAgICAgIGgxID0gaW11bDY0KGgxIF4gY2gsIDB4ODVlYmNhNzcpOwogICAgICAgIGgyID0gaW11bDY0KGgyIF4gY2gsIDB4YzJiMmFlM2QpOwogICAgfQoKICAgIGgxIF49IGltdWw2NChoMSBeIChoMiA+PiAxNSksIDB4NzM1YTJkOTcpOwogICAgaDIgXj0gaW11bDY0KGgyIF4gKGgxID4+IDE1KSwgMHhjYWY2NDlhOSk7CiAgICBoMSBePSBoMiA+PiAxNjsKICAgIGgyIF49IGgxID4+IDE2OwoKICAgIC8vIFdlIGFyZSBzdXJlIHRoYXQgdGhlIHJlc3VsdCBpcyB3aXRoaW4gdGhlIHJhbmdlIG9mIHU2NC4KICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb3NzLW9mLXByZWNpc2lvbgogICAgcmV0dXJuICgyMDk3MTUyICogKGgyICYgMHhmZmZmZmZmZmZmZmZmZmZmKSArIChoMSA+PiAxMSkpICYgMHhmZmZmZmZmZmZmZmZmZmZmOwp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/math/rnd.ts": "bGV0IHJhbmRvbV9zdGF0ZTBfNjQ6IHU2NDsKbGV0IHJhbmRvbV9zdGF0ZTFfNjQ6IHU2NDsKbGV0IHJhbmRvbV9zdGF0ZTBfMzI6IHUzMjsKbGV0IHJhbmRvbV9zdGF0ZTFfMzI6IHUzMjsKbGV0IHJhbmRvbV9zZWVkZWQgPSBmYWxzZTsKCmZ1bmN0aW9uIG11cm11ckhhc2gzKGg6IHU2NCk6IHU2NCB7CiAgICAvLyBGb3JjZSBhbGwgYml0cyBvZiBhIGhhc2ggYmxvY2sgdG8gYXZhbGFuY2hlCiAgICBoIF49IGggPj4gMzM7IC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2FhcHBsZWJ5L3NtaGFzaGVyCiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9zcy1vZi1wcmVjaXNpb24KICAgIGggKj0gMHhmZjUxYWZkN2VkNTU4Y2NkOwogICAgaCBePSBoID4+IDMzOwogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWxvc3Mtb2YtcHJlY2lzaW9uCiAgICBoICo9IDB4YzRjZWI5ZmUxYTg1ZWM1MzsKICAgIGggXj0gaCA+PiAzMzsKICAgIHJldHVybiBoOwp9CgpmdW5jdGlvbiBzcGxpdE1peDMyKGg6IHUzMik6IHUzMiB7CiAgICBoICs9IDB4NmQyYjc5ZjU7CiAgICBoID0gKGggXiAoaCA+PiAxNSkpICogKGggfCAxKTsKICAgIGggXj0gaCArIChoIF4gKGggPj4gNykpICogKGggfCA2MSk7CiAgICByZXR1cm4gaCBeIChoID4+IDE0KTsKfQoKZnVuY3Rpb24gc2VlZFJhbmRvbSh2YWx1ZTogaTY0KTogdm9pZCB7CiAgICAvLyBJbnN0ZWFkIHplcm8gc2VlZCB1c2UgZ29sZGVuIHJhdGlvOgogICAgLy8gcGhpID0gKDEgKyBzcXJ0KDUpKSAvIDIKICAgIC8vIHRydW5jKDJeNjQgLyBwaGkpID0gMHg5ZTM3NzliOTdmNGE3YzE1CgogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWxvc3Mtb2YtcHJlY2lzaW9uCiAgICBpZiAodmFsdWUgPT0gMCkgdmFsdWUgPSAweDllMzc3OWI5N2Y0YTdjMTU7CiAgICByYW5kb21fc3RhdGUwXzY0ID0gbXVybXVySGFzaDModmFsdWUpOwogICAgcmFuZG9tX3N0YXRlMV82NCA9IG11cm11ckhhc2gzKH5yYW5kb21fc3RhdGUwXzY0KTsKICAgIHJhbmRvbV9zdGF0ZTBfMzIgPSBzcGxpdE1peDMyKDx1MzI+dmFsdWUpOwogICAgcmFuZG9tX3N0YXRlMV8zMiA9IHNwbGl0TWl4MzIocmFuZG9tX3N0YXRlMF8zMik7CiAgICByYW5kb21fc2VlZGVkID0gdHJ1ZTsKfQoKLyoqCiAqIFNhZmUgZGV0ZXJtaW5pc3RpYyByYW5kb20gbnVtYmVyIGdlbmVyYXRvcgogKiBAcGFyYW0ge3U2NH0gc2VlZCAtIFRoZSBzZWVkIHRvIHVzZQogKi8KZXhwb3J0IGZ1bmN0aW9uIHJhbmRvbVU2NChzZWVkOiBpNjQpOiB1NjQgewogICAgaWYgKCFyYW5kb21fc2VlZGVkKSBzZWVkUmFuZG9tKHNlZWQpOwogICAgbGV0IHMxID0gcmFuZG9tX3N0YXRlMF82NDsKICAgIGNvbnN0IHMwID0gcmFuZG9tX3N0YXRlMV82NDsKICAgIHJhbmRvbV9zdGF0ZTBfNjQgPSBzMDsKICAgIHMxIF49IHMxIDw8IDIzOwogICAgczEgXj0gczEgPj4gMTc7CiAgICBzMSBePSBzMDsKICAgIHMxIF49IHMwID4+IDI2OwogICAgcmFuZG9tX3N0YXRlMV82NCA9IHMxOwogICAgcmV0dXJuIHMwOwp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/math/sha256.ts": "aW1wb3J0IHsgc2hhMjU2IH0gZnJvbSAnLi4vZW52L2dsb2JhbCc7CgpleHBvcnQgY2xhc3MgU2hhMjU2IHsKICAgIHN0YXRpYyBoYXNoKGJ1ZmZlcjogVWludDhBcnJheSk6IFVpbnQ4QXJyYXkgewogICAgICAgIHJldHVybiBzaGEyNTYoYnVmZmVyKTsKICAgIH0KCiAgICBzdGF0aWMgaGFzaDI1NihidWZmZXI6IFVpbnQ4QXJyYXkpOiBVaW50OEFycmF5IHsKICAgICAgICBjb25zdCBoYXNoID0gc2hhMjU2KGJ1ZmZlcik7CiAgICAgICAgcmV0dXJuIHNoYTI1NihoYXNoKTsKICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/memory/AddressMemoryMap.ts": "aW1wb3J0IHsgTWVtb3J5U2xvdFBvaW50ZXIgfSBmcm9tICcuL01lbW9yeVNsb3RQb2ludGVyJzsKaW1wb3J0IHsgQmxvY2tjaGFpbiB9IGZyb20gJy4uL2Vudic7CmltcG9ydCB7IGVuY29kZVBvaW50ZXIgfSBmcm9tICcuLi9tYXRoL2FiaSc7CmltcG9ydCB7IE1lbW9yeVNsb3REYXRhIH0gZnJvbSAnLi9NZW1vcnlTbG90JzsKaW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CgpAZmluYWwKZXhwb3J0IGNsYXNzIEFkZHJlc3NNZW1vcnlNYXA8SyBleHRlbmRzIHN0cmluZywgViBleHRlbmRzIE1lbW9yeVNsb3REYXRhPHUyNTY+PiB7CiAgICBwdWJsaWMgcG9pbnRlcjogdTE2OwoKICAgIGNvbnN0cnVjdG9yKAogICAgICAgIHBvaW50ZXI6IHUxNiwKICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRWYWx1ZTogViwKICAgICkgewogICAgICAgIHRoaXMucG9pbnRlciA9IHBvaW50ZXI7CiAgICB9CgogICAgcHVibGljIHNldChrZXk6IEssIHZhbHVlOiBWKTogdGhpcyB7CiAgICAgICAgY29uc3Qga2V5SGFzaDogTWVtb3J5U2xvdFBvaW50ZXIgPSBlbmNvZGVQb2ludGVyKGtleSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCBrZXlIYXNoLCB2YWx1ZSk7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIHB1YmxpYyBnZXQoa2V5OiBLKTogTWVtb3J5U2xvdERhdGE8dTI1Nj4gewogICAgICAgIHJldHVybiBCbG9ja2NoYWluLmdldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIGVuY29kZVBvaW50ZXIoa2V5KSwgdGhpcy5kZWZhdWx0VmFsdWUpOwogICAgfQoKICAgIHB1YmxpYyBoYXMoa2V5OiBLKTogYm9vbCB7CiAgICAgICAgcmV0dXJuIEJsb2NrY2hhaW4uaGFzU3RvcmFnZUF0KHRoaXMucG9pbnRlciwgZW5jb2RlUG9pbnRlcihrZXkpKTsKICAgIH0KCiAgICBAdW5zYWZlCiAgICBwdWJsaWMgZGVsZXRlKGtleTogSyk6IGJvb2wgewogICAgICAgIHRoaXMuc2V0KGtleSwgdGhpcy5kZWZhdWx0VmFsdWUpOwoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCiAgICBAdW5zYWZlCiAgICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNZXRob2Qgbm90IGltcGxlbWVudGVkLicpOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/memory/KeyMerger.ts": "aW1wb3J0IHsgTWVtb3J5U2xvdERhdGEgfSBmcm9tICcuL01lbW9yeVNsb3QnOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgQmxvY2tjaGFpbiB9IGZyb20gJy4uL2Vudic7CmltcG9ydCB7IE1lbW9yeVNsb3RQb2ludGVyIH0gZnJvbSAnLi9NZW1vcnlTbG90UG9pbnRlcic7CmltcG9ydCB7IGVuY29kZVBvaW50ZXIgfSBmcm9tICcuLi9tYXRoL2FiaSc7CgpAZmluYWwKZXhwb3J0IGNsYXNzIEtleU1lcmdlcjxLIGV4dGVuZHMgc3RyaW5nLCBLMiBleHRlbmRzIHN0cmluZywgViBleHRlbmRzIE1lbW9yeVNsb3REYXRhPHUyNTY+PiB7CiAgICBwdWJsaWMgcGFyZW50S2V5OiBLOwoKICAgIHB1YmxpYyBwb2ludGVyOiB1MTY7CgogICAgY29uc3RydWN0b3IoCiAgICAgICAgcGFyZW50OiBLLAogICAgICAgIHBvaW50ZXI6IHUxNiwKICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGRlZmF1bHRWYWx1ZTogViwKICAgICkgewogICAgICAgIHRoaXMucG9pbnRlciA9IHBvaW50ZXI7CgogICAgICAgIHRoaXMucGFyZW50S2V5ID0gcGFyZW50OwogICAgfQoKICAgIHB1YmxpYyBzZXQoa2V5MjogSzIsIHZhbHVlOiBWKTogdGhpcyB7CiAgICAgICAgY29uc3QgbWVyZ2VkS2V5OiBzdHJpbmcgPSBgJHt0aGlzLnBhcmVudEtleX0ke2tleTJ9YDsKICAgICAgICBjb25zdCBrZXlIYXNoOiBNZW1vcnlTbG90UG9pbnRlciA9IGVuY29kZVBvaW50ZXIobWVyZ2VkS2V5KTsKCiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCBrZXlIYXNoLCB2YWx1ZSk7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIHB1YmxpYyBnZXQoa2V5OiBLKTogTWVtb3J5U2xvdERhdGE8dTI1Nj4gewogICAgICAgIGNvbnN0IG1lcmdlZEtleTogc3RyaW5nID0gYCR7dGhpcy5wYXJlbnRLZXl9JHtrZXl9YDsKCiAgICAgICAgcmV0dXJuIEJsb2NrY2hhaW4uZ2V0U3RvcmFnZUF0KHRoaXMucG9pbnRlciwgZW5jb2RlUG9pbnRlcihtZXJnZWRLZXkpLCB0aGlzLmRlZmF1bHRWYWx1ZSk7CiAgICB9CgogICAgcHVibGljIGhhcyhrZXk6IEspOiBib29sIHsKICAgICAgICBjb25zdCBtZXJnZWRLZXk6IHN0cmluZyA9IGAke3RoaXMucGFyZW50S2V5fSR7a2V5fWA7CgogICAgICAgIHJldHVybiBCbG9ja2NoYWluLmhhc1N0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIGVuY29kZVBvaW50ZXIobWVyZ2VkS2V5KSk7CiAgICB9CgogICAgQHVuc2FmZQogICAgcHVibGljIGRlbGV0ZShfa2V5OiBLKTogYm9vbCB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNZXRob2Qgbm90IGltcGxlbWVudGVkLicpOwogICAgfQoKICAgIEB1bnNhZmUKICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NsZWFyIG1ldGhvZCBub3QgaW1wbGVtZW50ZWQuJyk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/memory/MemorySlot.ts": "ZXhwb3J0IHR5cGUgTWVtb3J5U2xvdERhdGE8VD4gPSBUOwo=",
  "node_modules/@btc-vision/btc-runtime/runtime/memory/MemorySlotPointer.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CgpleHBvcnQgdHlwZSBNZW1vcnlTbG90UG9pbnRlciA9IHUyNTY7Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/memory/MultiAddressMemoryMap.ts": "aW1wb3J0IHsgTWVtb3J5U2xvdERhdGEgfSBmcm9tICcuL01lbW9yeVNsb3QnOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgS2V5TWVyZ2VyIH0gZnJvbSAnLi9LZXlNZXJnZXInOwoKQGZpbmFsCmV4cG9ydCBjbGFzcyBNdWx0aUFkZHJlc3NNZW1vcnlNYXA8CiAgICBLIGV4dGVuZHMgc3RyaW5nLAogICAgSzIgZXh0ZW5kcyBzdHJpbmcsCiAgICBWIGV4dGVuZHMgTWVtb3J5U2xvdERhdGE8dTI1Nj4sCj4gZXh0ZW5kcyBNYXA8SywgS2V5TWVyZ2VyPEssIEsyLCBWPj4gewogICAgcHVibGljIHBvaW50ZXI6IHUxNjsKCiAgICBjb25zdHJ1Y3RvcigKICAgICAgICBwb2ludGVyOiB1MTYsCiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBkZWZhdWx0VmFsdWU6IFYsCiAgICApIHsKICAgICAgICBzdXBlcigpOwoKICAgICAgICB0aGlzLnBvaW50ZXIgPSBwb2ludGVyOwogICAgfQoKICAgIHB1YmxpYyBnZXQoa2V5OiBLKTogS2V5TWVyZ2VyPEssIEsyLCBWPiB7CiAgICAgICAgdGhpcy5jcmVhdGVLZXlNZXJnZXIoa2V5KTsKCiAgICAgICAgcmV0dXJuIHN1cGVyLmdldChrZXkpOwogICAgfQoKICAgIHB1YmxpYyBzZXRVcHBlcktleShrZXk6IEssIGtleTI6IEsyLCB2YWx1ZTogVik6IHRoaXMgewogICAgICAgIHRoaXMuY3JlYXRlS2V5TWVyZ2VyKGtleSk7CgogICAgICAgIGNvbnN0IHN1Yk1hcCA9IHN1cGVyLmdldChrZXkpOwogICAgICAgIGlmIChzdWJNYXApIHsKICAgICAgICAgICAgc3ViTWFwLnNldChrZXkyLCB2YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBwdWJsaWMgc2V0KGtleTogSywgdmFsdWU6IEtleU1lcmdlcjxLLCBLMiwgVj4pOiB0aGlzIHsKICAgICAgICB0aGlzLmNyZWF0ZUtleU1lcmdlcihrZXkpOwoKICAgICAgICByZXR1cm4gPHRoaXM+c3VwZXIuc2V0KGtleSwgdmFsdWUpOwogICAgfQoKICAgIHB1YmxpYyBoYXMoa2V5OiBLKTogYm9vbCB7CiAgICAgICAgcmV0dXJuIHN1cGVyLmhhcyhrZXkpOwogICAgfQoKICAgIHB1YmxpYyBkZWxldGUoa2V5OiBLKTogYm9vbCB7CiAgICAgICAgcmV0dXJuIHN1cGVyLmRlbGV0ZShrZXkpOwogICAgfQoKICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHsKICAgICAgICBzdXBlci5jbGVhcigpOwogICAgfQoKICAgIHByaXZhdGUgY3JlYXRlS2V5TWVyZ2VyKGtleTogSyk6IHZvaWQgewogICAgICAgIGlmICghc3VwZXIuaGFzKGtleSkpIHsKICAgICAgICAgICAgc3VwZXIuc2V0KGtleSwgbmV3IEtleU1lcmdlcjxLLCBLMiwgVj4oa2V5LCB0aGlzLnBvaW50ZXIsIHRoaXMuZGVmYXVsdFZhbHVlKSk7CiAgICAgICAgfQogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/shared-libraries/OP20Utils.ts": "aW1wb3J0IHsgQWRkcmVzcywgQUREUkVTU19CWVRFX0xFTkdUSCB9IGZyb20gJy4uL3R5cGVzL0FkZHJlc3MnOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgQnl0ZXNXcml0ZXIgfSBmcm9tICcuLi9idWZmZXIvQnl0ZXNXcml0ZXInOwppbXBvcnQgeyBCbG9ja2NoYWluIH0gZnJvbSAnLi4vZW52JzsKaW1wb3J0IHsgZW5jb2RlU2VsZWN0b3IsIFNlbGVjdG9yIH0gZnJvbSAnLi4vbWF0aC9hYmknOwoKZXhwb3J0IGNsYXNzIE9QMjBVdGlscyB7CiAgICBwdWJsaWMgc3RhdGljIGdldCBCQUxBTkNFX09GX1NFTEVDVE9SKCk6IFNlbGVjdG9yIHsKICAgICAgICByZXR1cm4gZW5jb2RlU2VsZWN0b3IoJ2JhbGFuY2VPZicpOwogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgYmFsYW5jZU9mKHRva2VuOiBBZGRyZXNzLCBvd25lcjogQWRkcmVzcyk6IHUyNTYgewogICAgICAgIGNvbnN0IGNhbGxkYXRhOiBCeXRlc1dyaXRlciA9IG5ldyBCeXRlc1dyaXRlcig0ICsgQUREUkVTU19CWVRFX0xFTkdUSCk7CiAgICAgICAgY2FsbGRhdGEud3JpdGVTZWxlY3RvcihPUDIwVXRpbHMuQkFMQU5DRV9PRl9TRUxFQ1RPUik7CiAgICAgICAgY2FsbGRhdGEud3JpdGVBZGRyZXNzKG93bmVyKTsKCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBCbG9ja2NoYWluLmNhbGwodG9rZW4sIGNhbGxkYXRhKTsKCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnJlYWRVMjU2KCk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/shared-libraries/TransferHelper.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IGVuY29kZVNlbGVjdG9yLCBTZWxlY3RvciB9IGZyb20gJy4uL21hdGgvYWJpJzsKaW1wb3J0IHsgQWRkcmVzcywgQUREUkVTU19CWVRFX0xFTkdUSCB9IGZyb20gJy4uL3R5cGVzL0FkZHJlc3MnOwppbXBvcnQgeyBCeXRlc1dyaXRlciB9IGZyb20gJy4uL2J1ZmZlci9CeXRlc1dyaXRlcic7CmltcG9ydCB7IEJsb2NrY2hhaW4gfSBmcm9tICcuLi9lbnYnOwppbXBvcnQgeyBSZXZlcnQgfSBmcm9tICcuLi90eXBlcy9SZXZlcnQnOwoKZXhwb3J0IGNsYXNzIFRyYW5zZmVySGVscGVyIHsKICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEFQUFJPVkVfU0VMRUNUT1IoKTogU2VsZWN0b3IgewogICAgICAgIHJldHVybiBlbmNvZGVTZWxlY3RvcignYXBwcm92ZScpOwogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgZ2V0IFRSQU5TRkVSX1NFTEVDVE9SKCk6IFNlbGVjdG9yIHsKICAgICAgICByZXR1cm4gZW5jb2RlU2VsZWN0b3IoJ3RyYW5zZmVyJyk7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBnZXQgVFJBTlNGRVJfRlJPTV9TRUxFQ1RPUigpOiBTZWxlY3RvciB7CiAgICAgICAgcmV0dXJuIGVuY29kZVNlbGVjdG9yKCd0cmFuc2ZlckZyb20nKTsKICAgIH0KCiAgICBwdWJsaWMgc3RhdGljIHNhZmVBcHByb3ZlKHRva2VuOiBBZGRyZXNzLCBzcGVuZGVyOiBBZGRyZXNzLCBhbW91bnQ6IHUyNTYpOiB2b2lkIHsKICAgICAgICBjb25zdCBjYWxsZGF0YSA9IG5ldyBCeXRlc1dyaXRlcig0ICsgQUREUkVTU19CWVRFX0xFTkdUSCArIDMyKTsKICAgICAgICBjYWxsZGF0YS53cml0ZVNlbGVjdG9yKHRoaXMuQVBQUk9WRV9TRUxFQ1RPUik7CiAgICAgICAgY2FsbGRhdGEud3JpdGVBZGRyZXNzKHNwZW5kZXIpOwogICAgICAgIGNhbGxkYXRhLndyaXRlVTI1NihhbW91bnQpOwoKICAgICAgICBjb25zdCByZXNwb25zZSA9IEJsb2NrY2hhaW4uY2FsbCh0b2tlbiwgY2FsbGRhdGEpOwogICAgICAgIGNvbnN0IGlzT2sgPSByZXNwb25zZS5yZWFkQm9vbGVhbigpOwoKICAgICAgICBpZiAoIWlzT2spIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydChgVHJhbnNmZXJIZWxwZXI6IEFQUFJPVkVfRkFJTEVEYCk7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgc2FmZVRyYW5zZmVyKHRva2VuOiBBZGRyZXNzLCB0bzogQWRkcmVzcywgYW1vdW50OiB1MjU2KTogdm9pZCB7CiAgICAgICAgY29uc3QgY2FsbGRhdGEgPSBuZXcgQnl0ZXNXcml0ZXIoNCArIEFERFJFU1NfQllURV9MRU5HVEggKyAzMik7CiAgICAgICAgY2FsbGRhdGEud3JpdGVTZWxlY3Rvcih0aGlzLlRSQU5TRkVSX1NFTEVDVE9SKTsKICAgICAgICBjYWxsZGF0YS53cml0ZUFkZHJlc3ModG8pOwogICAgICAgIGNhbGxkYXRhLndyaXRlVTI1NihhbW91bnQpOwoKICAgICAgICBjb25zdCByZXNwb25zZSA9IEJsb2NrY2hhaW4uY2FsbCh0b2tlbiwgY2FsbGRhdGEpOwogICAgICAgIGNvbnN0IGlzT2sgPSByZXNwb25zZS5yZWFkQm9vbGVhbigpOwoKICAgICAgICBpZiAoIWlzT2spIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydChgVHJhbnNmZXJIZWxwZXI6IFRSQU5TRkVSX0ZBSUxFRGApOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgc3RhdGljIHNhZmVUcmFuc2ZlckZyb20odG9rZW46IEFkZHJlc3MsIGZyb206IEFkZHJlc3MsIHRvOiBBZGRyZXNzLCBhbW91bnQ6IHUyNTYpOiB2b2lkIHsKICAgICAgICBjb25zdCBjYWxsZGF0YSA9IG5ldyBCeXRlc1dyaXRlcig0ICsgQUREUkVTU19CWVRFX0xFTkdUSCArIEFERFJFU1NfQllURV9MRU5HVEggKyAzMik7CiAgICAgICAgY2FsbGRhdGEud3JpdGVTZWxlY3Rvcih0aGlzLlRSQU5TRkVSX0ZST01fU0VMRUNUT1IpOwoKICAgICAgICBjYWxsZGF0YS53cml0ZUFkZHJlc3MoZnJvbSk7CiAgICAgICAgY2FsbGRhdGEud3JpdGVBZGRyZXNzKHRvKTsKICAgICAgICBjYWxsZGF0YS53cml0ZVUyNTYoYW1vdW50KTsKCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBCbG9ja2NoYWluLmNhbGwodG9rZW4sIGNhbGxkYXRhKTsKICAgICAgICBjb25zdCBpc09rID0gcmVzcG9uc2UucmVhZEJvb2xlYW4oKTsKCiAgICAgICAgaWYgKCFpc09rKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBSZXZlcnQoYFRyYW5zZmVySGVscGVyOiBUUkFOU0ZFUl9GUk9NX0ZBSUxFRGApOwogICAgICAgIH0KICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/storage/Serializable.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IEJsb2NrY2hhaW4gfSBmcm9tICcuLi9lbnYnOwppbXBvcnQgeyBNZW1vcnlTbG90UG9pbnRlciB9IGZyb20gJy4uL21lbW9yeS9NZW1vcnlTbG90UG9pbnRlcic7CmltcG9ydCB7IEJ5dGVzV3JpdGVyIH0gZnJvbSAnLi4vYnVmZmVyL0J5dGVzV3JpdGVyJzsKaW1wb3J0IHsgQnl0ZXNSZWFkZXIgfSBmcm9tICcuLi9idWZmZXIvQnl0ZXNSZWFkZXInOwppbXBvcnQgeyBSZXZlcnQgfSBmcm9tICcuLi90eXBlcy9SZXZlcnQnOwoKZXhwb3J0IGFic3RyYWN0IGNsYXNzIFNlcmlhbGl6YWJsZSB7CiAgICBwcm90ZWN0ZWQgcG9pbnRlcjogdTE2OwogICAgcHJvdGVjdGVkIHN1YlBvaW50ZXI6TWVtb3J5U2xvdFBvaW50ZXI7CgogICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKHBvaW50ZXI6IHUxNiwKICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJQb2ludGVyOk1lbW9yeVNsb3RQb2ludGVyKSB7CiAgICAgICAgdGhpcy5wb2ludGVyID0gcG9pbnRlcjsKICAgICAgICB0aGlzLnN1YlBvaW50ZXIgPSBzdWJQb2ludGVyOwogICAgfQoKICAgIHB1YmxpYyBhYnN0cmFjdCBnZXQgY2h1bmtDb3VudCgpOiBpMzI7CiAgICBwdWJsaWMgYWJzdHJhY3Qgd3JpdGVUb0J1ZmZlcigpOiBCeXRlc1dyaXRlcjsKICAgIHB1YmxpYyBhYnN0cmFjdCByZWFkRnJvbUJ1ZmZlcihyZWFkZXI6IEJ5dGVzUmVhZGVyKTogdm9pZDsKCiAgICBwdWJsaWMgbG9hZCgpIDp2b2lkIHsKICAgICAgICBjb25zdCBjaHVua3M6IHUyNTZbXSA9IFtdOwoKICAgICAgICBmb3IobGV0IGluZGV4OmkzMiA9IDA7IGluZGV4IDwgdGhpcy5jaHVua0NvdW50OyBpbmRleCsrKXsKICAgICAgICAgICAgY29uc3QgY2h1bms6IHUyNTYgPSBCbG9ja2NoYWluLmdldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHUyNTYuYWRkKHRoaXMuc3ViUG9pbnRlciwgdTI1Ni5mcm9tVTMyKGluZGV4KSksIHUyNTYuWmVybyk7CiAgICAgICAgICAgIGNodW5rcy5wdXNoKGNodW5rKTsKICAgICAgICB9CgogICAgICAgIGNvbnN0IHJlYWRlciA9IHRoaXMuY2h1bmtzVG9CeXRlcyhjaHVua3MpOwoKICAgICAgICB0aGlzLnJlYWRGcm9tQnVmZmVyKHJlYWRlcik7CiAgICB9CgogICAgcHVibGljIHNhdmUoKTogdm9pZCB7CiAgICAgICAgY29uc3Qgd3JpdGVyOiBCeXRlc1dyaXRlciA9IHRoaXMud3JpdGVUb0J1ZmZlcigpOwoKICAgICAgICBjb25zdCBidWZmZXIgPSB3cml0ZXIuZ2V0QnVmZmVyKCk7CgogICAgICAgIGNvbnN0IGNodW5rczogdTI1NltdID0gdGhpcy5ieXRlc1RvQ2h1bmtzKGJ1ZmZlcik7CgogICAgICAgIGZvciAobGV0IGluZGV4OiBpMzIgPSAwOyBpbmRleCA8IGNodW5rcy5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQoCiAgICAgICAgICAgICAgICB0aGlzLnBvaW50ZXIsCiAgICAgICAgICAgICAgICB1MjU2LmFkZCh0aGlzLnN1YlBvaW50ZXIsIHUyNTYuZnJvbVUzMihpbmRleCkpLAogICAgICAgICAgICAgICAgY2h1bmtzW2luZGV4XSwKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9CgogICAgcHJvdGVjdGVkIGJ5dGVzVG9DaHVua3MoYnVmZmVyOiBVaW50OEFycmF5KTogdTI1NltdIHsKICAgICAgICBjb25zdCBjaHVua3M6IHUyNTZbXSA9IFtdOwoKICAgICAgICBmb3IgKGxldCBpbmRleDogaTMyID0gMDsgaW5kZXggPCBidWZmZXIuYnl0ZUxlbmd0aDsgaW5kZXggKz0gMzIpIHsKICAgICAgICAgICAgY29uc3QgY2h1bmsgPSBidWZmZXIuc2xpY2UoaW5kZXgsIGluZGV4ICsgMzIpOwogICAgICAgICAgICBjaHVua3MucHVzaCh1MjU2LmZyb21CeXRlcyhjaHVuaywgdHJ1ZSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGNodW5rczsKICAgIH0KCiAgICBwcm90ZWN0ZWQgY2h1bmtzVG9CeXRlcyhjaHVua3M6IHUyNTZbXSk6IEJ5dGVzUmVhZGVyIHsKICAgICAgICBpZih0aGlzLmNodW5rQ291bnQgPj0gNjcxMDg4NjMpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IFJldmVydCgnVG9vIG1hbnkgY2h1bmtzIHJlY2VpdmVkJyk7CiAgICAgICAgfQoKICAgICAgICBjb25zdCBidWZmZXI6IFVpbnQ4QXJyYXkgPSBuZXcgVWludDhBcnJheSh0aGlzLmNodW5rQ291bnQgKiAzMik7CiAgICAgICAgbGV0IG9mZnNldDogaTMyID0gMDsKCiAgICAgICAgZm9yIChsZXQgaW5kZXhDaHVuazogaTMyID0gMDsgaW5kZXhDaHVuayA8IGNodW5rcy5sZW5ndGg7IGluZGV4Q2h1bmsrKykgewogICAgICAgICAgICBjb25zdCBieXRlczogdThbXSA9IGNodW5rc1tpbmRleENodW5rXS50b0J5dGVzKHRydWUpOwogICAgICAgICAgICBmb3IgKGxldCBpbmRleEJ5dGU6IGkzMiA9IDA7IGluZGV4Qnl0ZSA8IGJ5dGVzLmxlbmd0aDsgaW5kZXhCeXRlKyspIHsKICAgICAgICAgICAgICAgIGJ1ZmZlcltvZmZzZXQrK10gPSBieXRlc1tpbmRleEJ5dGVdOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbmV3IEJ5dGVzUmVhZGVyKGJ1ZmZlcik7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/storage/StoredBoolean.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IEJsb2NrY2hhaW4gfSBmcm9tICcuLi9lbnYnOwoKQGZpbmFsCmV4cG9ydCBjbGFzcyBTdG9yZWRCb29sZWFuIHsKICAgIGNvbnN0cnVjdG9yKAogICAgICAgIHB1YmxpYyBwb2ludGVyOiB1MTYsCiAgICAgICAgcHJpdmF0ZSBkZWZhdWx0VmFsdWU6IGJvb2wsCiAgICApIHt9CgogICAgcHJpdmF0ZSBfdmFsdWU6IHUyNTYgPSB1MjU2Llplcm87CgogICAgQGlubGluZQogICAgcHVibGljIGdldCB2YWx1ZSgpOiBib29sIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZS50b0Jvb2woKTsKICAgIH0KCiAgICBAaW5saW5lCiAgICBwdWJsaWMgc2V0IHZhbHVlKHZhbHVlOiBib29sKSB7CiAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZSA/IHUyNTYuT25lIDogdTI1Ni5aZXJvOwoKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHUyNTYuWmVybywgdGhpcy5fdmFsdWUpOwogICAgfQoKICAgIEBpbmxpbmUKICAgIHB1YmxpYyBzZXQodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlOwoKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHUyNTYuWmVybywgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBwdWJsaWMgdG9VaW50OEFycmF5KCk6IFVpbnQ4QXJyYXkgewogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZS50b1VpbnQ4QXJyYXkodHJ1ZSk7CiAgICB9CgogICAgcHJpdmF0ZSBlbnN1cmVWYWx1ZSgpOiB2b2lkIHsKICAgICAgICB0aGlzLl92YWx1ZSA9IEJsb2NrY2hhaW4uZ2V0U3RvcmFnZUF0KAogICAgICAgICAgICB0aGlzLnBvaW50ZXIsCiAgICAgICAgICAgIHUyNTYuWmVybywKICAgICAgICAgICAgdGhpcy5kZWZhdWx0VmFsdWUgPyB1MjU2Lk9uZSA6IHUyNTYuWmVybywKICAgICAgICApOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/storage/StoredString.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IEJsb2NrY2hhaW4gfSBmcm9tICcuLi9lbnYnOwppbXBvcnQgeyBTYWZlTWF0aCB9IGZyb20gJy4uL3R5cGVzL1NhZmVNYXRoJzsKCkBmaW5hbApleHBvcnQgY2xhc3MgU3RvcmVkU3RyaW5nIHsKICAgIGNvbnN0cnVjdG9yKAogICAgICAgIHB1YmxpYyBwb2ludGVyOiB1MTYsCiAgICAgICAgcHJpdmF0ZSBkZWZhdWx0VmFsdWU/OiBzdHJpbmcsCiAgICApIHt9CgogICAgcHJpdmF0ZSBfdmFsdWU6IHN0cmluZyA9ICcnOwoKICAgIEBpbmxpbmUKICAgIHB1YmxpYyBnZXQgdmFsdWUoKTogc3RyaW5nIHsKICAgICAgICBpZiAoIXRoaXMuX3ZhbHVlKSB7CiAgICAgICAgICAgIHRoaXMubG9hZCgpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlOwogICAgfQoKICAgIEBpbmxpbmUKICAgIHB1YmxpYyBzZXQgdmFsdWUodmFsdWU6IHN0cmluZykgewogICAgICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7CiAgICAgICAgdGhpcy5zYXZlKCk7CiAgICB9CgogICAgcHJpdmF0ZSBtaW4oYTogdTMyLCBiOiB1MzIpOiB1MzIgewogICAgICAgIHJldHVybiBhIDwgYiA/IGEgOiBiOwogICAgfQoKICAgIHByaXZhdGUgbWF4KGE6IHUzMiwgYjogdTMyKTogdTMyIHsKICAgICAgICByZXR1cm4gYSA+IGIgPyBhIDogYjsKICAgIH0KCiAgICBwcml2YXRlIHNhdmUoKTogdm9pZCB7CiAgICAgICAgY29uc3QgbGVuZ3RoOiB1MzIgPSB0aGlzLl92YWx1ZS5sZW5ndGg7CiAgICAgICAgaWYgKGxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmIChsZW5ndGggPiAyMDQ4KSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU3RvcmVkU3RyaW5nOiB2YWx1ZSBpcyB0b28gbG9uZycpOwogICAgICAgIH0KCiAgICAgICAgLy8gUHJlcGFyZSB0aGUgaGVhZGVyIHdpdGggdGhlIGxlbmd0aCBvZiB0aGUgc3RyaW5nIGluIHRoZSBmaXJzdCA0IGJ5dGVzCiAgICAgICAgbGV0IGhlYWRlcjogdTI1NiA9IHUyNTYuZnJvbVUzMihsZW5ndGgpOwogICAgICAgIGhlYWRlciA9IFNhZmVNYXRoLnNobChoZWFkZXIsIDIyNCk7CgogICAgICAgIGxldCBjdXJyZW50UG9pbnRlcjogdTI1NiA9IHUyNTYuWmVybzsKICAgICAgICBsZXQgcmVtYWluaW5nTGVuZ3RoOiB1MzIgPSBsZW5ndGg7CiAgICAgICAgbGV0IG9mZnNldDogdTMyID0gMDsKCiAgICAgICAgLy8gU2F2ZSB0aGUgaW5pdGlhbCBjaHVuayAoZmlyc3QgMjggYnl0ZXMpIGluIHRoZSBoZWFkZXIKICAgICAgICBsZXQgYnl0ZXNUb1dyaXRlOiB1MzIgPSB0aGlzLm1pbihyZW1haW5pbmdMZW5ndGgsIDI4KTsKICAgICAgICBoZWFkZXIgPSB0aGlzLnNhdmVDaHVuayhoZWFkZXIsIHRoaXMuX3ZhbHVlLCBvZmZzZXQsIGJ5dGVzVG9Xcml0ZSwgNCk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCBjdXJyZW50UG9pbnRlciwgaGVhZGVyKTsKCiAgICAgICAgcmVtYWluaW5nTGVuZ3RoIC09IGJ5dGVzVG9Xcml0ZTsKICAgICAgICBvZmZzZXQgKz0gYnl0ZXNUb1dyaXRlOwoKICAgICAgICAvLyBTYXZlIHRoZSByZW1haW5pbmcgY2h1bmtzIGluIHN1YnNlcXVlbnQgc3RvcmFnZSBzbG90cwogICAgICAgIHdoaWxlIChyZW1haW5pbmdMZW5ndGggPiAwKSB7CiAgICAgICAgICAgIGJ5dGVzVG9Xcml0ZSA9IHRoaXMubWluKHJlbWFpbmluZ0xlbmd0aCwgMzIpOwogICAgICAgICAgICBjb25zdCBzdG9yYWdlVmFsdWU6IHUyNTYgPSB0aGlzLnNhdmVDaHVuaygKICAgICAgICAgICAgICAgIHUyNTYuWmVybywKICAgICAgICAgICAgICAgIHRoaXMuX3ZhbHVlLAogICAgICAgICAgICAgICAgb2Zmc2V0LAogICAgICAgICAgICAgICAgYnl0ZXNUb1dyaXRlLAogICAgICAgICAgICAgICAgMCwKICAgICAgICAgICAgKTsKICAgICAgICAgICAgY3VycmVudFBvaW50ZXIgPSB1MjU2LmFkZChjdXJyZW50UG9pbnRlciwgdTI1Ni5PbmUpOwogICAgICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIGN1cnJlbnRQb2ludGVyLCBzdG9yYWdlVmFsdWUpOwoKICAgICAgICAgICAgcmVtYWluaW5nTGVuZ3RoIC09IGJ5dGVzVG9Xcml0ZTsKICAgICAgICAgICAgb2Zmc2V0ICs9IGJ5dGVzVG9Xcml0ZTsKICAgICAgICB9CiAgICB9CgogICAgLy8gSGVscGVyIG1ldGhvZCB0byBzYXZlIGEgY2h1bmsgb2YgdGhlIHN0cmluZyBpbnRvIHRoZSBzdG9yYWdlIHNsb3QKICAgIHByaXZhdGUgc2F2ZUNodW5rKAogICAgICAgIHN0b3JhZ2U6IHUyNTYsCiAgICAgICAgdmFsdWU6IHN0cmluZywKICAgICAgICBvZmZzZXQ6IHUzMiwKICAgICAgICBsZW5ndGg6IHUzMiwKICAgICAgICBzdG9yYWdlT2Zmc2V0OiB1MzIsCiAgICApOiB1MjU2IHsKICAgICAgICBjb25zdCBieXRlcyA9IHN0b3JhZ2UudG9CeXRlcyh0cnVlKTsKICAgICAgICBmb3IgKGxldCBpOiB1MzIgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgY29uc3QgaW5kZXg6IGkzMiA9IGkzMihvZmZzZXQgKyBpKTsKICAgICAgICAgICAgYnl0ZXNbaSArIHN0b3JhZ2VPZmZzZXRdID0gdTgodmFsdWUuY2hhckNvZGVBdChpbmRleCkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gdTI1Ni5mcm9tQnl0ZXMoYnl0ZXMsIHRydWUpOwogICAgfQoKICAgIHByaXZhdGUgbG9hZCgpOiB2b2lkIHsKICAgICAgICBjb25zdCBoZWFkZXI6IHUyNTYgPSBCbG9ja2NoYWluLmdldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHUyNTYuWmVybywgdTI1Ni5aZXJvKTsKICAgICAgICBpZiAodTI1Ni5lcShoZWFkZXIsIHUyNTYuWmVybykpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZGVmYXVsdFZhbHVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5kZWZhdWx0VmFsdWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIHRoZSBsZW5ndGggb2YgdGhlIHN0cmluZyBpcyBzdG9yZWQgaW4gdGhlIGZpcnN0IDQgYnl0ZXMgb2YgdGhlIGhlYWRlcgogICAgICAgIGNvbnN0IGJpdHM6IHUyNTYgPSB1MjU2LnNocihoZWFkZXIsIDIyNCk7CiAgICAgICAgY29uc3QgbGVuZ3RoOiB1MzIgPSBiaXRzLnRvVTMyKCk7CgogICAgICAgIC8vIHRoZSByZXN0IGNvbnRhaW5zIHRoZSBzdHJpbmcgaXRzZWxmCiAgICAgICAgbGV0IGN1cnJlbnRQb2ludGVyOiB1MjU2ID0gdTI1Ni5aZXJvOwogICAgICAgIGxldCByZW1haW5pbmdMZW5ndGg6IHUzMiA9IGxlbmd0aDsKICAgICAgICBsZXQgY3VycmVudFN0b3JhZ2U6IHUyNTYgPSBoZWFkZXI7CgogICAgICAgIGNvbnN0IGJ5dGVzVG9SZWFkOiB1MzIgPSB0aGlzLm1pbihyZW1haW5pbmdMZW5ndGgsIDI4KTsKICAgICAgICBsZXQgc3RyOiBzdHJpbmcgPSB0aGlzLmxvYWRDaHVuayhjdXJyZW50U3RvcmFnZSwgNCwgYnl0ZXNUb1JlYWQpOwogICAgICAgIHJlbWFpbmluZ0xlbmd0aCAtPSBieXRlc1RvUmVhZDsKCiAgICAgICAgd2hpbGUgKHJlbWFpbmluZ0xlbmd0aCA+IDApIHsKICAgICAgICAgICAgLy8gTW92ZSB0byB0aGUgbmV4dCBzdG9yYWdlIHNsb3QKICAgICAgICAgICAgY3VycmVudFBvaW50ZXIgPSB1MjU2LmFkZChjdXJyZW50UG9pbnRlciwgdTI1Ni5PbmUpOwogICAgICAgICAgICBjdXJyZW50U3RvcmFnZSA9IEJsb2NrY2hhaW4uZ2V0U3RvcmFnZUF0KHRoaXMucG9pbnRlciwgY3VycmVudFBvaW50ZXIsIHUyNTYuWmVybyk7CgogICAgICAgICAgICAvLyBFeHRyYWN0IHRoZSByZWxldmFudCBwb3J0aW9uIG9mIHRoZSBzdHJpbmcgZnJvbSB0aGUgY3VycmVudCBzdG9yYWdlIHNsb3QKICAgICAgICAgICAgY29uc3QgYnl0ZXNUb1JlYWQ6IHUzMiA9IHRoaXMubWluKHJlbWFpbmluZ0xlbmd0aCwgMzIpOwogICAgICAgICAgICBzdHIgKz0gdGhpcy5sb2FkQ2h1bmsoY3VycmVudFN0b3JhZ2UsIDAsIGJ5dGVzVG9SZWFkKTsKCiAgICAgICAgICAgIHJlbWFpbmluZ0xlbmd0aCAtPSBieXRlc1RvUmVhZDsKICAgICAgICB9CgogICAgICAgIHRoaXMuX3ZhbHVlID0gc3RyOwogICAgfQoKICAgIHByaXZhdGUgbG9hZENodW5rKHZhbHVlOiB1MjU2LCBvZmZzZXQ6IHUzMiwgbGVuZ3RoOiB1MzIpOiBzdHJpbmcgewogICAgICAgIGNvbnN0IGJ5dGVzID0gdmFsdWUudG9CeXRlcyh0cnVlKTsKCiAgICAgICAgbGV0IHN0cjogc3RyaW5nID0gJyc7CiAgICAgICAgZm9yIChsZXQgaTogdTMyID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHN0ciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGVzW2kgKyBvZmZzZXRdKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBzdHI7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/storage/StoredU256.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CmltcG9ydCB7IFNhZmVNYXRoIH0gZnJvbSAnLi4vdHlwZXMvU2FmZU1hdGgnOwppbXBvcnQgeyBNZW1vcnlTbG90UG9pbnRlciB9IGZyb20gJy4uL21lbW9yeS9NZW1vcnlTbG90UG9pbnRlcic7CmltcG9ydCB7IEJsb2NrY2hhaW4gfSBmcm9tICcuLi9lbnYnOwoKQGZpbmFsCmV4cG9ydCBjbGFzcyBTdG9yZWRVMjU2IHsKICAgIGNvbnN0cnVjdG9yKAogICAgICAgIHB1YmxpYyBwb2ludGVyOiB1MTYsCiAgICAgICAgcHVibGljIHN1YlBvaW50ZXI6IE1lbW9yeVNsb3RQb2ludGVyLAogICAgICAgIHByaXZhdGUgZGVmYXVsdFZhbHVlOiB1MjU2LAogICAgKSB7fQoKICAgIHByaXZhdGUgX3ZhbHVlOiB1MjU2ID0gdTI1Ni5aZXJvOwoKICAgIEBpbmxpbmUKICAgIHB1YmxpYyBnZXQgdmFsdWUoKTogdTI1NiB7CiAgICAgICAgdGhpcy5lbnN1cmVWYWx1ZSgpOwoKICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWU7CiAgICB9CgogICAgQGlubGluZQogICAgcHVibGljIHNldCB2YWx1ZSh2YWx1ZTogdTI1NikgewogICAgICAgIGlmICh1MjU2LmVxKHZhbHVlLCB0aGlzLl92YWx1ZSkpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTsKCiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKICAgIH0KCiAgICBAaW5saW5lCiAgICBwdWJsaWMgZ2V0IHRvQnl0ZXMoKTogVWludDhBcnJheSB7CiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlLnRvVWludDhBcnJheShmYWxzZSk7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCcrJykKICAgIHB1YmxpYyBhZGQodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHRoaXMuX3ZhbHVlID0gU2FmZU1hdGguYWRkKHRoaXMuX3ZhbHVlLCB2YWx1ZSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCctJykKICAgIHB1YmxpYyBzdWIodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHRoaXMuX3ZhbHVlID0gU2FmZU1hdGguc3ViKHRoaXMuX3ZhbHVlLCB2YWx1ZSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCcqJykKICAgIHB1YmxpYyBtdWwodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHRoaXMuX3ZhbHVlID0gU2FmZU1hdGgubXVsKHRoaXMuX3ZhbHVlLCB2YWx1ZSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCc9PScpCiAgICBwdWJsaWMgZXEodmFsdWU6IHUyNTYpOiBib29sZWFuIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZSA9PT0gdmFsdWU7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCchPScpCiAgICBwdWJsaWMgbmUodmFsdWU6IHUyNTYpOiBib29sZWFuIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZSAhPT0gdmFsdWU7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCc8JykKICAgIHB1YmxpYyBsdCh2YWx1ZTogdTI1Nik6IGJvb2xlYW4gewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlIDwgdmFsdWU7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCc+JykKICAgIHB1YmxpYyBndCh2YWx1ZTogdTI1Nik6IGJvb2xlYW4gewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlID4gdmFsdWU7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCc8PScpCiAgICBwdWJsaWMgbGUodmFsdWU6IHUyNTYpOiBib29sZWFuIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZSA8PSB2YWx1ZTsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAb3BlcmF0b3IoJz49JykKICAgIHB1YmxpYyBnZSh2YWx1ZTogdTI1Nik6IGJvb2xlYW4gewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlID49IHZhbHVlOwogICAgfQoKICAgIEBpbmxpbmUKICAgIEBvcGVyYXRvcignPj4nKQogICAgcHVibGljIHNocih2YWx1ZTogaTMyKTogdGhpcyB7CiAgICAgICAgdGhpcy5lbnN1cmVWYWx1ZSgpOwoKICAgICAgICB0aGlzLl92YWx1ZSA9IHUyNTYuc2hyKHRoaXMuX3ZhbHVlLCB2YWx1ZSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yKCcmJykKICAgIHB1YmxpYyBhbmQodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHRoaXMuX3ZhbHVlID0gdTI1Ni5hbmQodGhpcy5fdmFsdWUsIHZhbHVlKTsKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHRoaXMuc3ViUG9pbnRlciwgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAb3BlcmF0b3IoJ3wnKQogICAgcHVibGljIG9yKHZhbHVlOiB1MjU2KTogdGhpcyB7CiAgICAgICAgdGhpcy5lbnN1cmVWYWx1ZSgpOwoKICAgICAgICB0aGlzLl92YWx1ZSA9IHUyNTYub3IodGhpcy5fdmFsdWUsIHZhbHVlKTsKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHRoaXMuc3ViUG9pbnRlciwgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAb3BlcmF0b3IoJ14nKQogICAgcHVibGljIHhvcih2YWx1ZTogdTI1Nik6IHRoaXMgewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgdGhpcy5fdmFsdWUgPSB1MjU2Lnhvcih0aGlzLl92YWx1ZSwgdmFsdWUpOwogICAgICAgIEJsb2NrY2hhaW4uc2V0U3RvcmFnZUF0KHRoaXMucG9pbnRlciwgdGhpcy5zdWJQb2ludGVyLCB0aGlzLl92YWx1ZSk7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIEBpbmxpbmUKICAgIEBvcGVyYXRvcignKionKQogICAgcHVibGljIHBvdyhleHBvbmVudDogdTI1Nik6IHRoaXMgewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgdGhpcy5fdmFsdWUgPSBTYWZlTWF0aC5wb3codGhpcy5fdmFsdWUsIGV4cG9uZW50KTsKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHRoaXMuc3ViUG9pbnRlciwgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAb3BlcmF0b3IoJyUnKQogICAgcHVibGljIG1vZCh2YWx1ZTogdTI1Nik6IHRoaXMgewogICAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKCiAgICAgICAgdGhpcy5fdmFsdWUgPSBTYWZlTWF0aC5tb2QodGhpcy5fdmFsdWUsIHZhbHVlKTsKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHRoaXMuc3ViUG9pbnRlciwgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAb3BlcmF0b3IucG9zdGZpeCgnKysnKQogICAgcHVibGljIGluYygpOiB0aGlzIHsKICAgICAgICB0aGlzLmVuc3VyZVZhbHVlKCk7CgogICAgICAgIHRoaXMuX3ZhbHVlID0gU2FmZU1hdGguYWRkKHRoaXMuX3ZhbHVlLCB1MjU2Lk9uZSk7CiAgICAgICAgQmxvY2tjaGFpbi5zZXRTdG9yYWdlQXQodGhpcy5wb2ludGVyLCB0aGlzLnN1YlBvaW50ZXIsIHRoaXMuX3ZhbHVlKTsKCiAgICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgQGlubGluZQogICAgQG9wZXJhdG9yLnBvc3RmaXgoJy0tJykKICAgIHB1YmxpYyBkZWMoKTogdGhpcyB7CiAgICAgICAgdGhpcy5lbnN1cmVWYWx1ZSgpOwoKICAgICAgICB0aGlzLl92YWx1ZSA9IFNhZmVNYXRoLnN1Yih0aGlzLl92YWx1ZSwgdTI1Ni5PbmUpOwogICAgICAgIEJsb2NrY2hhaW4uc2V0U3RvcmFnZUF0KHRoaXMucG9pbnRlciwgdGhpcy5zdWJQb2ludGVyLCB0aGlzLl92YWx1ZSk7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgfQoKICAgIEBpbmxpbmUKICAgIHB1YmxpYyBzZXQodmFsdWU6IHUyNTYpOiB0aGlzIHsKICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlOwoKICAgICAgICBCbG9ja2NoYWluLnNldFN0b3JhZ2VBdCh0aGlzLnBvaW50ZXIsIHRoaXMuc3ViUG9pbnRlciwgdGhpcy5fdmFsdWUpOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH0KCiAgICBAaW5saW5lCiAgICBwdWJsaWMgdG9VaW50OEFycmF5KCk6IFVpbnQ4QXJyYXkgewogICAgICAgIHJldHVybiB0aGlzLl92YWx1ZS50b1VpbnQ4QXJyYXkodHJ1ZSk7CiAgICB9CgogICAgcHJpdmF0ZSBlbnN1cmVWYWx1ZSgpOiB2b2lkIHsKICAgICAgICB0aGlzLl92YWx1ZSA9IEJsb2NrY2hhaW4uZ2V0U3RvcmFnZUF0KHRoaXMucG9pbnRlciwgdGhpcy5zdWJQb2ludGVyLCB0aGlzLmRlZmF1bHRWYWx1ZSk7CiAgICB9Cn0K",
  "node_modules/@btc-vision/btc-runtime/runtime/types/Address.ts": "aW1wb3J0IHsgUG90ZW50aWFsIH0gZnJvbSAnLi4vbGFuZy9EZWZpbml0aW9ucyc7CgpleHBvcnQgY29uc3QgQUREUkVTU19CWVRFX0xFTkdUSDogdTggPSA2NjsKZXhwb3J0IGRlY2xhcmUgdHlwZSBBZGRyZXNzID0gc3RyaW5nOwpleHBvcnQgZGVjbGFyZSB0eXBlIFBvdGVudGlhbEFkZHJlc3MgPSBQb3RlbnRpYWw8QWRkcmVzcz47Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/types/Revert.ts": "ZXhwb3J0IGNsYXNzIFJldmVydCBleHRlbmRzIEVycm9yIHsKICAgIGNvbnN0cnVjdG9yKG1zZzogc3RyaW5nID0gJycpIHsKICAgICAgICBzdXBlcihgRXhlY3V0aW9uIHJldmVydGVkICR7bXNnfWApOwogICAgfQp9Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/types/SafeMath.ts": "aW1wb3J0IHsgdTI1NiB9IGZyb20gJ2FzLWJpZ251bS9hc3NlbWJseSc7CgpleHBvcnQgY2xhc3MgU2FmZU1hdGggewogICAgcHVibGljIHN0YXRpYyBaRVJPOiB1MjU2ID0gdTI1Ni5mcm9tVTMyKDApOwoKICAgIHB1YmxpYyBzdGF0aWMgYWRkKGE6IHUyNTYsIGI6IHUyNTYpOiB1MjU2IHsKICAgICAgICBjb25zdCBjOiB1MjU2ID0gdTI1Ni5hZGQoYSwgYik7CiAgICAgICAgaWYgKGMgPCBhKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2FmZU1hdGg6IGFkZGl0aW9uIG92ZXJmbG93Jyk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBjOwogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgc3ViKGE6IHUyNTYsIGI6IHUyNTYpOiB1MjU2IHsKICAgICAgICBpZiAoYSA8IGIpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlTWF0aDogc3VidHJhY3Rpb24gb3ZlcmZsb3cnKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB1MjU2LnN1YihhLCBiKTsKICAgIH0KCiAgICAvLyBDb21wdXRlcyAoYSAqIGIpICUgbW9kdWx1cyB3aXRoIGZ1bGwgcHJlY2lzaW9uCiAgICBwdWJsaWMgc3RhdGljIG11bG1vZChhOiB1MjU2LCBiOiB1MjU2LCBtb2R1bHVzOiB1MjU2KTogdTI1NiB7CiAgICAgICAgaWYgKHUyNTYuZXEobW9kdWx1cywgdTI1Ni5aZXJvKSkgdGhyb3cgbmV3IEVycm9yKCdTYWZlTWF0aDogbW9kdWxvIGJ5IHplcm8nKTsKCiAgICAgICAgY29uc3QgbXVsID0gU2FmZU1hdGgubXVsKGEsIGIpOwogICAgICAgIHJldHVybiBTYWZlTWF0aC5tb2QobXVsLCBtb2R1bHVzKTsKICAgIH0KCiAgICBAaW5saW5lCiAgICBAdW5zYWZlCiAgICBAb3BlcmF0b3IoJyUnKQogICAgcHVibGljIHN0YXRpYyBtb2QoYTogdTI1NiwgYjogdTI1Nik6IHUyNTYgewogICAgICAgIGlmICh1MjU2LmVxKGIsIHUyNTYuWmVybykpIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTYWZlTWF0aDogbW9kdWxvIGJ5IHplcm8nKTsKICAgICAgICB9CgogICAgICAgIGxldCBkaXZSZXN1bHQgPSBTYWZlTWF0aC5kaXYoYSwgYik7CiAgICAgICAgbGV0IHByb2R1Y3QgPSBTYWZlTWF0aC5tdWwoZGl2UmVzdWx0LCBiKTsKICAgICAgICByZXR1cm4gU2FmZU1hdGguc3ViKGEsIHByb2R1Y3QpOwogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgcG93KGJhc2U6IHUyNTYsIGV4cG9uZW50OiB1MjU2KTogdTI1NiB7CiAgICAgICAgbGV0IHJlc3VsdDogdTI1NiA9IHUyNTYuT25lOwogICAgICAgIHdoaWxlIChleHBvbmVudCA+IHUyNTYuWmVybykgewogICAgICAgICAgICBpZiAodTI1Ni5hbmQoZXhwb25lbnQsIHUyNTYuT25lKSkgewogICAgICAgICAgICAgICAgcmVzdWx0ID0gU2FmZU1hdGgubXVsKHJlc3VsdCwgYmFzZSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGJhc2UgPSBTYWZlTWF0aC5tdWwoYmFzZSwgYmFzZSk7CiAgICAgICAgICAgIGV4cG9uZW50ID0gdTI1Ni5zaHIoZXhwb25lbnQsIDEpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KCiAgICBwdWJsaWMgc3RhdGljIG11bChhOiB1MjU2LCBiOiB1MjU2KTogdTI1NiB7CiAgICAgICAgaWYgKGEgPT09IFNhZmVNYXRoLlpFUk8gfHwgYiA9PT0gU2FmZU1hdGguWkVSTykgewogICAgICAgICAgICByZXR1cm4gU2FmZU1hdGguWkVSTzsKICAgICAgICB9CgogICAgICAgIGNvbnN0IGM6IHUyNTYgPSB1MjU2Lm11bChhLCBiKTsKICAgICAgICBjb25zdCBkOiB1MjU2ID0gU2FmZU1hdGguZGl2KGMsIGEpOwoKICAgICAgICBpZiAodTI1Ni5uZShkLCBiKSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NhZmVNYXRoOiBtdWx0aXBsaWNhdGlvbiBvdmVyZmxvdycpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGM7CiAgICB9CgogICAgQGlubGluZQogICAgQHVuc2FmZQogICAgQG9wZXJhdG9yKCcvJykKICAgIHB1YmxpYyBzdGF0aWMgZGl2KGE6IHUyNTYsIGI6IHUyNTYpOiB1MjU2IHsKICAgICAgICBpZiAoYi5pc1plcm8oKSkgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RpdmlzaW9uIGJ5IHplcm8nKTsKICAgICAgICB9CgogICAgICAgIGlmIChhLmlzWmVybygpKSB7CiAgICAgICAgICAgIHJldHVybiBuZXcgdTI1NigpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHUyNTYubHQoYSwgYikpIHsKICAgICAgICAgICAgcmV0dXJuIG5ldyB1MjU2KCk7IC8vIFJldHVybiAwIGlmIGEgPCBiCiAgICAgICAgfQoKICAgICAgICBpZiAodTI1Ni5lcShhLCBiKSkgewogICAgICAgICAgICByZXR1cm4gbmV3IHUyNTYoMSk7IC8vIFJldHVybiAxIGlmIGEgPT0gYgogICAgICAgIH0KCiAgICAgICAgbGV0IG4gPSBhLmNsb25lKCk7CiAgICAgICAgbGV0IGQgPSBiLmNsb25lKCk7CiAgICAgICAgbGV0IHJlc3VsdCA9IG5ldyB1MjU2KCk7CgogICAgICAgIGNvbnN0IHNoaWZ0ID0gdTI1Ni5jbHooZCkgLSB1MjU2LmNseihuKTsKICAgICAgICBkID0gU2FmZU1hdGguc2hsKGQsIHNoaWZ0KTsgLy8gYWxpZ24gZCB3aXRoIG4gYnkgc2hpZnRpbmcgbGVmdAoKICAgICAgICBmb3IgKGxldCBpID0gc2hpZnQ7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICAgIGlmICh1MjU2LmdlKG4sIGQpKSB7CiAgICAgICAgICAgICAgICBuID0gdTI1Ni5zdWIobiwgZCk7CiAgICAgICAgICAgICAgICByZXN1bHQgPSB1MjU2Lm9yKHJlc3VsdCwgU2FmZU1hdGguc2hsKHUyNTYuT25lLCBpKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZCA9IHUyNTYuc2hyKGQsIDEpOyAvLyByZXN0b3JlIGQgdG8gb3JpZ2luYWwgYnkgc2hpZnRpbmcgcmlnaHQKICAgICAgICB9CgogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBtaW4oYTogdTI1NiwgYjogdTI1Nik6IHUyNTYgewogICAgICAgIHJldHVybiB1MjU2Lmx0KGEsIGIpID8gYSA6IGI7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBtYXgoYTogdTI1NiwgYjogdTI1Nik6IHUyNTYgewogICAgICAgIHJldHVybiB1MjU2Lmd0KGEsIGIpID8gYSA6IGI7CiAgICB9CgogICAgQGlubGluZQogICAgQHVuc2FmZQogICAgcHVibGljIHN0YXRpYyBzcXJ0KHk6IHUyNTYpOiB1MjU2IHsKICAgICAgICBpZiAodTI1Ni5ndCh5LCB1MjU2LmZyb21VMzIoMykpKSB7CiAgICAgICAgICAgIGxldCB6ID0geTsKCiAgICAgICAgICAgIGxldCB1MjQ2XzIgPSB1MjU2LmZyb21VMzIoMik7CgogICAgICAgICAgICBsZXQgZCA9IFNhZmVNYXRoLmRpdih5LCB1MjQ2XzIpOwogICAgICAgICAgICBsZXQgeCA9IFNhZmVNYXRoLmFkZChkLCB1MjU2Lk9uZSk7CgogICAgICAgICAgICB3aGlsZSAodTI1Ni5sdCh4LCB6KSkgewogICAgICAgICAgICAgICAgeiA9IHg7CgogICAgICAgICAgICAgICAgbGV0IHUgPSBTYWZlTWF0aC5kaXYoeSwgeCk7CiAgICAgICAgICAgICAgICBsZXQgeTIgPSB1MjU2LmFkZCh1LCB4KTsKCiAgICAgICAgICAgICAgICB4ID0gU2FmZU1hdGguZGl2KHkyLCB1MjQ2XzIpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gejsKICAgICAgICB9IGVsc2UgaWYgKCF1MjU2LmVxKHksIHUyNTYuWmVybykpIHsKICAgICAgICAgICAgcmV0dXJuIHUyNTYuT25lOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB1MjU2Llplcm87CiAgICAgICAgfQogICAgfQoKICAgIEBpbmxpbmUKICAgIEB1bnNhZmUKICAgIHB1YmxpYyBzdGF0aWMgc2hsKHZhbHVlOiB1MjU2LCBzaGlmdDogaTMyKTogdTI1NiB7CiAgICAgICAgaWYgKHNoaWZ0ID09IDApIHsKICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmNsb25lKCk7CiAgICAgICAgfQoKICAgICAgICBsZXQgdG90YWxCaXRzID0gMjU2OwogICAgICAgIGxldCBiaXRzUGVyU2VnbWVudCA9IDY0OwoKICAgICAgICAvLyBOb3JtYWxpemUgc2hpZnQgdG8gYmUgd2l0aGluIDAtMjU1IHJhbmdlCiAgICAgICAgc2hpZnQgJj0gMjU1OwoKICAgICAgICBpZiAoc2hpZnQgPj0gdG90YWxCaXRzKSB7CiAgICAgICAgICAgIHJldHVybiBuZXcgdTI1NigpOyAvLyBTaGlmdCBzaXplIGxhcmdlciB0aGFuIHdpZHRoIHJlc3VsdHMgaW4gemVybwogICAgICAgIH0KCiAgICAgICAgLy8gRGV0ZXJtaW5lIGhvdyBtYW55IGZ1bGwgNjQtYml0IHNlZ21lbnRzIHdlIGFyZSBzaGlmdGluZwogICAgICAgIGxldCBzZWdtZW50U2hpZnQgPSAoc2hpZnQgLyBiaXRzUGVyU2VnbWVudCkgfCAwOwogICAgICAgIGxldCBiaXRTaGlmdCA9IHNoaWZ0ICUgYml0c1BlclNlZ21lbnQ7CgogICAgICAgIGxldCBzZWdtZW50cyA9IFt2YWx1ZS5sbzEsIHZhbHVlLmxvMiwgdmFsdWUuaGkxLCB2YWx1ZS5oaTJdOwoKICAgICAgICBsZXQgcmVzdWx0ID0gbmV3IEFycmF5PHU2ND4oNCkuZmlsbCgwKTsKCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWdtZW50cy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoaSArIHNlZ21lbnRTaGlmdCA8IHNlZ21lbnRzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgcmVzdWx0W2kgKyBzZWdtZW50U2hpZnRdIHw9IHNlZ21lbnRzW2ldIDw8IGJpdFNoaWZ0OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChiaXRTaGlmdCAhPSAwICYmIGkgKyBzZWdtZW50U2hpZnQgKyAxIDwgc2VnbWVudHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICByZXN1bHRbaSArIHNlZ21lbnRTaGlmdCArIDFdIHw9IHNlZ21lbnRzW2ldID4+PiAoYml0c1BlclNlZ21lbnQgLSBiaXRTaGlmdCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBuZXcgdTI1NihyZXN1bHRbMF0sIHJlc3VsdFsxXSwgcmVzdWx0WzJdLCByZXN1bHRbM10pOwogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgYW5kKGE6IHUyNTYsIGI6IHUyNTYpOiB1MjU2IHsKICAgICAgICByZXR1cm4gdTI1Ni5hbmQoYSwgYik7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBvcihhOiB1MjU2LCBiOiB1MjU2KTogdTI1NiB7CiAgICAgICAgcmV0dXJuIHUyNTYub3IoYSwgYik7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyB4b3IoYTogdTI1NiwgYjogdTI1Nik6IHUyNTYgewogICAgICAgIHJldHVybiB1MjU2LnhvcihhLCBiKTsKICAgIH0KCiAgICBwdWJsaWMgc3RhdGljIHNocihhOiB1MjU2LCBiOiB1MzIpOiB1MjU2IHsKICAgICAgICByZXR1cm4gdTI1Ni5zaHIoYSwgYik7CiAgICB9CgogICAgLyoqCiAgICAgKiBJbmNyZW1lbnQgYSB1MjU2IHZhbHVlIGJ5IDEKICAgICAqIEBwYXJhbSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5jcmVtZW50CiAgICAgKiBAcmV0dXJucyBUaGUgaW5jcmVtZW50ZWQgdmFsdWUKICAgICAqLwogICAgQGlubGluZQogICAgc3RhdGljIGluYyh2YWx1ZTogdTI1Nik6IHUyNTYgewogICAgICAgIHJldHVybiB2YWx1ZS5wcmVJbmMoKTsKICAgIH0KfQo=",
  "node_modules/@btc-vision/btc-runtime/runtime/types/index.ts": "aW1wb3J0IHsgTWFwIH0gZnJvbSAnLi4vZ2VuZXJpYy9NYXAnOwppbXBvcnQgeyBNZW1vcnlTbG90UG9pbnRlciB9IGZyb20gJy4uL21lbW9yeS9NZW1vcnlTbG90UG9pbnRlcic7CmltcG9ydCB7IE1lbW9yeVNsb3REYXRhIH0gZnJvbSAnLi4vbWVtb3J5L01lbW9yeVNsb3QnOwppbXBvcnQgeyB1MjU2IH0gZnJvbSAnYXMtYmlnbnVtL2Fzc2VtYmx5JzsKaW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJy4vQWRkcmVzcyc7CgpleHBvcnQgdHlwZSBQb2ludGVyU3RvcmFnZSA9IE1hcDxNZW1vcnlTbG90UG9pbnRlciwgTWVtb3J5U2xvdERhdGE8dTI1Nj4+OwpleHBvcnQgdHlwZSBCbG9ja2NoYWluU3RvcmFnZSA9IE1hcDxBZGRyZXNzLCBQb2ludGVyU3RvcmFnZT47Cg==",
  "node_modules/@btc-vision/btc-runtime/runtime/universal/ABIRegistry.ts": "aW1wb3J0IHsgZW5jb2RlU2VsZWN0b3IsIFNlbGVjdG9yIH0gZnJvbSAnLi4vbWF0aC9hYmknOwppbXBvcnQgeyBCeXRlc1JlYWRlciB9IGZyb20gJy4uL2J1ZmZlci9CeXRlc1JlYWRlcic7CmltcG9ydCB7IEJ5dGVzV3JpdGVyIH0gZnJvbSAnLi4vYnVmZmVyL0J5dGVzV3JpdGVyJzsKCmV4cG9ydCB0eXBlIENhbGxkYXRhID0gTm9uTnVsbGFibGU8Qnl0ZXNSZWFkZXI+OwoKY2xhc3MgQUJJUmVnaXN0cnlCYXNlIHsKICAgIHByaXZhdGUgbWV0aG9kTWFwOiBTZWxlY3RvcltdID0gW107CgogICAgcHVibGljIGdldE1ldGhvZFNlbGVjdG9ycygpOiBVaW50OEFycmF5IHsKICAgICAgICBjb25zdCB3cml0ZXI6IEJ5dGVzV3JpdGVyID0gbmV3IEJ5dGVzV3JpdGVyKDIgKyB0aGlzLm1ldGhvZE1hcC5sZW5ndGggKiA0KTsKICAgICAgICB3cml0ZXIud3JpdGVNZXRob2RTZWxlY3RvcnNNYXAodGhpcy5tZXRob2RNYXApOwoKICAgICAgICByZXR1cm4gd3JpdGVyLmdldEJ1ZmZlcigpOwogICAgfQoKICAgIC8vIFJlZ2lzdGVyIG1ldGhvZHMgd2l0aCB0aGVpciBzZWxlY3RvcnMgYW5kIGhhbmRsZXJzCiAgICBwdWJsaWMgZGVmaW5lTWV0aG9kU2VsZWN0b3IobmFtZTogc3RyaW5nKTogdm9pZCB7CiAgICAgICAgY29uc3Qgc2VsZWN0b3I6IHUzMiA9IGVuY29kZVNlbGVjdG9yKG5hbWUpOwoKICAgICAgICBpZiAoIXRoaXMubWV0aG9kTWFwLmluY2x1ZGVzKHNlbGVjdG9yKSkgewogICAgICAgICAgICB0aGlzLm1ldGhvZE1hcC5wdXNoKHNlbGVjdG9yKTsKICAgICAgICB9CiAgICB9Cn0KCmV4cG9ydCBjb25zdCBBQklSZWdpc3RyeSA9IG5ldyBBQklSZWdpc3RyeUJhc2UoKTsK"
}